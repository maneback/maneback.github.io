{"meta":{"title":"漠·然","subtitle":"Maneback's Blog","description":null,"author":"Maneback","url":"http://maneback.github.io","root":"/"},"pages":[{"title":"categories","date":"2019-02-20T10:12:43.000Z","updated":"2019-08-01T13:34:58.000Z","comments":false,"path":"categories/index.html","permalink":"http://maneback.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-02-20T10:11:23.000Z","updated":"2019-08-01T13:34:58.000Z","comments":false,"path":"tags/index.html","permalink":"http://maneback.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Leetcode -- 第k个数","slug":"kth-magic-number","date":"2021-02-24T10:07:06.000Z","updated":"2021-02-24T10:16:46.525Z","comments":true,"path":"2021/kth-magic-number/","link":"","permalink":"http://maneback.github.io/2021/kth-magic-number/","excerpt":"题目链接： 面试题 17.09","text":"题目链接： 面试题 17.09 题目描述： 思路解释： 找到只含有 3、5、7因子的数字。我们可以从小到大逐个构造。此序列中的数字一定是由前面的某个数字乘以3或5或7中的某个因子得到。 因此最主要的问题在于：如何按照由小到大的顺序生成下一个数字，是由前面哪个数字乘以那个因子得到。 可以试着来构造：对于同一个因子，它一定是按照顺序来生成的，因此我们只需要记录每个因子上一次乘的数字，再在生成时比较三个因子生成的数字大小，把最小的加入序列，并修改相应的指针位置。 样例代码 123456789101112131415class Solution: def getKthMagicNumber(self, k): nums_list = [1]*(k) p3, p5, p7 = 0,0,0 for i in range(k-1): nx = min(min(3*nums_list[p3], 5*nums_list[p5]), 7*nums_list[p7]) nums_list[i+1] = nx if nx == 3*nums_list[p3]: p3+=1 if nx == 5*nums_list[p5]: p5+=1 if nx == 7*nums_list[p7]: p7+=1 return nums_list[k-1] 注意：这里有一个小细节：就是所有的判断都是 if 而不是 elif 。因为潜在这某两个指针生成的元素大小相等。 如我们生成 15 时，p3 和 p5 都要增加，否则下一次访问到p5 时生成的数字还是 15。","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"Leetcode","slug":"Leetcode","permalink":"http://maneback.github.io/tags/Leetcode/"}]},{"title":"Leetcode -- 情侣牵手","slug":"couple-holding","date":"2021-02-24T02:51:51.000Z","updated":"2021-02-24T03:04:58.035Z","comments":true,"path":"2021/couple-holding/","link":"","permalink":"http://maneback.github.io/2021/couple-holding/","excerpt":"题目链接 Leetcode-765","text":"题目链接 Leetcode-765 image-20210224105405609 解题思路 对于一堆坐错位置的情侣的集合，只要按照首位相连环路交换位置即可，此种交换位置的方法一定是最少的，次数为情侣数量-1。 因此下一步的目标即寻找互相独立的情侣的集合，以及每个集合的情侣数量。 可以用并查集的方法来解决。编号为n, n+1 的两个人组成情侣编号为 n/2，以此编号来作为节点执行并查集算法 然后利用 map 记录每个并查集集合的大小 \\(size_i\\)，再返回 \\(\\sum{size_i-1}\\) image-20210224105550507 代码示例 1234567891011121314151617181920212223242526def minSwapCouple(row): n = len(couple)//2 father = [i for _ in range(n)] def find(x): if father[x] ==x: return x f = find(father[x]) father[x] = f return f def union(x, y): fx = find(x) fy = find(y) father[fx] = fy for i in range(n): a, b = row[2*n]//2, row[2*n+1]//2 union(a, b) dit = collections.defaultdict(int) for i in range(n): f = find(i) dit[f]+=1 ret = 0 for v in dit.values(): ret+=(v-1) return ret","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"并查集","slug":"并查集","permalink":"http://maneback.github.io/tags/并查集/"},{"name":"Leetcode","slug":"Leetcode","permalink":"http://maneback.github.io/tags/Leetcode/"}]},{"title":"单调栈基础","slug":"monotonic-stack","date":"2021-02-24T02:46:14.000Z","updated":"2021-02-24T02:47:57.614Z","comments":true,"path":"2021/monotonic-stack/","link":"","permalink":"http://maneback.github.io/2021/monotonic-stack/","excerpt":"","text":"","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"Leetcode","slug":"Leetcode","permalink":"http://maneback.github.io/tags/Leetcode/"},{"name":"单调栈","slug":"单调栈","permalink":"http://maneback.github.io/tags/单调栈/"}]},{"title":"单调队列基础","slug":"monotonic-queue","date":"2021-02-24T02:30:35.000Z","updated":"2021-02-24T02:47:14.270Z","comments":true,"path":"2021/monotonic-queue/","link":"","permalink":"http://maneback.github.io/2021/monotonic-queue/","excerpt":"","text":"单调队列是一个特殊的队列，除满足队列先进先出的特点外，队列内的元素根据需要，还满足单调递增或单调递减。 以单调递增队列为例：当我们想队尾添加元素x时，为了保持单调性，要把当前队尾所有小于x 的元素从队列中移出，直到队列为空，或是找到了比x 大的元素。这样，单调队列头部始终保存的是当前队列内的最大值。 当我们在队列内移除元素时，若当前移除的元素与单调队列头部元素相等，说明此时此最大值在队列内已不存在，此元素也应被移除以维护队列内的最大值。 例题 剑指offer - 59-II 代码示例 在这里，我们用一个数组（双向队列）self.que 保存所有的队列元素，self.max_ 保存遇到的最大值。 123456789101112131415161718192021222324252627class MaxQueue: def __init__(self): self.que = collections.deque() self.max_= collections.deque() def max_value(self) -&gt; int: if not self.max_: return -1 return self.max_[0] def push_back(self, value: int) -&gt; None: self.que.append(value) while self.max_ and self.max_[-1]&lt;value: self.max_.pop() self.max_.append(value) def pop_front(self) -&gt; int: if not self.que: return -1 n = self.que[0] if self.max_[0] == self.que[0]: self.max_.popleft() self.que.popleft() return n","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"Leetcode","slug":"Leetcode","permalink":"http://maneback.github.io/tags/Leetcode/"},{"name":"单调队列","slug":"单调队列","permalink":"http://maneback.github.io/tags/单调队列/"}]},{"title":"Leetcode - 区间合并","slug":"merge-intervals","date":"2021-02-24T02:06:25.000Z","updated":"2021-02-24T02:12:48.766Z","comments":true,"path":"2021/merge-intervals/","link":"","permalink":"http://maneback.github.io/2021/merge-intervals/","excerpt":"题目链接： Leetcode-56","text":"题目链接： Leetcode-56 题目描述 思路 如果我们按照区间起始位置将所有区间排序，那么可合并的区间在排序后的数组中是连续的。如下图：相同颜色的区间可以被合并。 这样的话只一次遍历区间，并判断每个区间能不能与前一个区间合并。 判断一个区间能不能与前面的区间合并：只需要比较当前区间的起始与前一个区间（可能是已经合并过的区间）的结束位置的大小。 若当前区间在前一个区间结束前开始，则可以合并。 代码示例 12345678910111213def merge(intervals): intervals.sort(key=lambda x: x[0]) merged = [] for inter in intervals: # cannot be merged if not merged or inter[0]&gt;merged[-1][1]: # 此区间成为一个新的区间 merged.append(inter) else: # 可以合并，取两个区间结束点较大的一个 merged[-1][1] = max(merged[-1][1], inter[1]) return merged","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"Leetcode","slug":"Leetcode","permalink":"http://maneback.github.io/tags/Leetcode/"}]},{"title":"Leetcode -- unique binary search trees II","slug":"longest-turbulent-subarray","date":"2021-02-09T03:02:50.000Z","updated":"2021-02-24T02:15:42.984Z","comments":true,"path":"2021/longest-turbulent-subarray/","link":"","permalink":"http://maneback.github.io/2021/longest-turbulent-subarray/","excerpt":"题目链接 ： Leetcode-978","text":"题目链接 ： Leetcode-978 题目描述 解题思路 最长湍流子数组，形象地描述就是数组中的一个子数组，连续数字大小交替变化，我们把这种交替变化用 上升 下降 表示，如果arr[-1]&lt;arr[-2] 则称下降序列，如果 arr[-1]&gt;arr[-2] 则称上升序列，即用最后一个变化方向代表整个序列的变化方向。 考虑动态规划的算法，找到如何描述状态以及状态转移方程。用 dp[i][0] 表示以 num[i] 结尾的上升序列的长度；用dp[i][1] 表示以num[i] 结尾的下降序列的长度。考虑到上升序列去掉最后一个数字之后成为下降序列，下降序列去掉最后一个数字之后成为上升序列。 然后我们考虑当前状态 dp[i][0], dp[i][1] 与下一个数组num[i+1] 之间的大小关系： 如果 num[i+1]&gt;num[i] 则可以把num[i+1]添加到下降序列最后， 成为上升序列；而下降序列长度为1（因为连续两个下降方向）。 如果 num[i+1]&lt;num[i] 则可以把num[i+1]添加到上升序列最后， 成为下降序列；而上升序列长度为1（因为连续两个上升方向）。 如果num[i+1]=num[i] 则上升序列和下降序列的长度均变为 1。 然后从两个数组中找到最长的那个子数组。 有了状态表示和状态转移方程，就可以写代码解题了。 示例代码 123456789101112131415161718192021class Solution: def maxTurbulenceSize(self, arr: List[int]) -&gt; int: ret = 0 n = len(arr) dp = [[0, 0] for _ in range(n)] dp[0][0], dp[0][1] = 1, 1 for i in range(1, n): if (arr[i]&lt;arr[i-1]): dp[i][0] = dp[i-1][1]+1 dp[i][1] = 1 elif (arr[i]&gt;arr[i-1]): dp[i][1] = dp[i-1][0]+1 dp[i][0] = 1 else: dp[i][0] = 1 dp[i][1] = 1 for i in range(n): ret = max(ret, dp[i][0]) ret = max(ret, dp[i][1]) return ret","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"Leetcode","slug":"Leetcode","permalink":"http://maneback.github.io/tags/Leetcode/"},{"name":"动态规划","slug":"动态规划","permalink":"http://maneback.github.io/tags/动态规划/"}]},{"title":"VScode 快捷键","slug":"vscodeshortcut","date":"2021-01-17T13:15:35.000Z","updated":"2021-02-09T02:56:41.729Z","comments":true,"path":"2021/vscodeshortcut/","link":"","permalink":"http://maneback.github.io/2021/vscodeshortcut/","excerpt":"","text":"多行编辑 鼠标+ Alt+Shift 按键选择，此方式只能选择连续竖列的对应位置不可随意插入光标位置，且不可间隔列 Shift+Ctrl 数列选择, 可以在多个地方插入光标。","categories":[{"name":"技术","slug":"技术","permalink":"http://maneback.github.io/categories/技术/"}],"tags":[{"name":"VScode","slug":"VScode","permalink":"http://maneback.github.io/tags/VScode/"}]},{"title":"Hexo 必要的插件","slug":"installed-plugin","date":"2021-01-05T09:53:18.000Z","updated":"2021-02-09T02:56:41.728Z","comments":true,"path":"2021/installed-plugin/","link":"","permalink":"http://maneback.github.io/2021/installed-plugin/","excerpt":"","text":"基础环境及必要插件 12345678910111213npm install hexo-generator-index --savenpm install hexo-generator-archive --save ##wentinpm install hexo-generator-category --savenpm install hexo-generator-tag --savenpm install hexo-server --savenpm install hexo-deployer-git --save ##npm install hexo-deployer-heroku --savenpm install hexo-deployer-rsync --savenpm install hexo-deployer-openshift --savenpm install hexo-renderer-marked@0.2 --savenpm install hexo-renderer-stylus@0.2 --savenpm install hexo-generator-feed@1 --savenpm install hexo-generator-sitemap@1 --save 在hexo 博客中插入图片。 先安装插件 hexo-asset-image 12npm install -g hexo-cli --savenpm install https://github.com/CodeFalling/hexo-asset-image --save 第一种最简单的方法是使用图床，但是之前折腾过一段时间使用 PicGO +github 图床，但是稳定，后放弃。改用 hexo 自带的资源文件夹。 第二种方法是启用 assert 资源文件夹，但是这个东西很不智能。当你在 markdown 文档引用图片（不管是相对路径还是绝对路径）都能在文档中显示，但是渲染成 HTML 文件时，就会路径出错了。要用这个新的插件 hexo-asset-image 。 在 hexo 博客中正常显示 latex 公式 hexo 竟然对 latex 公式的支持这么不智能。唉，绝了。 更换 renderer。 12npm uninstall hexo-renderer-markednpm install hexo-renderer-pandoc 安装完 hexo-render-pandoc ，它在运行 hexo s 命令时会报错： 1[ERROR][hexo-renderer-pandoc] pandoc exited with code 9: pandoc: Unknown extension: smart 这时需要把 node_modules\\hexo-renderer-pandoc\\index.js 文件中的这个东西 1var args = [ '-f', 'markdown-smart'+extensions, '-t', 'html-smart', math] 改成： 1var args = [ '-f', 'markdown'+extensions, '-t', 'html', math] 参考来源 hexo-renderer-pandoc issues36","categories":[{"name":"Blog","slug":"Blog","permalink":"http://maneback.github.io/categories/Blog/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://maneback.github.io/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"http://maneback.github.io/tags/hexo/"}]},{"title":"Leetcode -- unique binary search trees II","slug":"unique-binary-search-trees-ii","date":"2020-06-16T03:39:50.000Z","updated":"2021-02-24T02:53:46.878Z","comments":true,"path":"2020/unique-binary-search-trees-ii/","link":"","permalink":"http://maneback.github.io/2020/unique-binary-search-trees-ii/","excerpt":"","text":"题目描述 给定一个整数 n，生成所有由 1 ... n 为节点所组成的 二叉搜索树 。 0&lt;=n&lt;=8 解题思路 对于一个二叉搜索树中的任一个节点来讲，其左子树的所有节点的值都小于该节点，其右子树的所有节点的值都大于该节点。 对于一个递归的问题，我们只考虑每一步应该做什么，顺序是什么，应该返回什么。 在每一步中，我们只考虑构建一棵子树，然后把子树返回给上一节点。 假设某一步中我们以一个区间[start, end] 来构造二叉搜索树，那么对于任意的 i, start&lt;=i&lt;=end， 可以以i为根节点来开始构造二叉搜索树，它的左子树则是以区间[start, i-1]构造的二叉搜索树，它的右子树是以区间[i+1, end] 构造的二叉搜索树，就这样递归地构造即可： 12345def dfs(start, end): for i in range(start, end): node = Treenode(start, i) lc = dfs(start, i-1) rc = dfs(i+1, end) 但是对于区间 [start, i-1] 和[i+1, end]构造的左右子树，可能不止为1， 然而其可以任意地组合，这样，我们用一个数组保存以[start， end]构造的所有子树，然后再将其返回： 1234567891011121314def dfs(start, end): if start&gt;end: return [None, ] res = [] for i in range(start, end): node = Treenode(start, i) lc = dfs(start, i-1) rc = dfs(i+1, end) for l in lc: for r in rc: node.left = l node.right = r res.append(node) return res 这样，我们就完成了代码的书写。 解题代码 123456789101112131415161718def buildTree(n): if n==0: return [] def dfs(start, end): if start&gt;end: return [None, ] res = [] for i in range(start, end): node = Treenode(start, i) lc = dfs(start, i-1) rc = dfs(i+1, end) for l in lc: for r in rc: node.left = l node.right = r res.append(node) return res return dfs(1, n)","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"Leetcode","slug":"Leetcode","permalink":"http://maneback.github.io/tags/Leetcode/"},{"name":"tree","slug":"tree","permalink":"http://maneback.github.io/tags/tree/"},{"name":"dynamic programming","slug":"dynamic-programming","permalink":"http://maneback.github.io/tags/dynamic-programming/"}]},{"title":"Leetcode -- binary tree maximum path sum","slug":"binary-tree-maximum-path-sum","date":"2020-06-15T13:04:57.000Z","updated":"2021-02-24T02:49:39.595Z","comments":true,"path":"2020/binary-tree-maximum-path-sum/","link":"","permalink":"http://maneback.github.io/2020/binary-tree-maximum-path-sum/","excerpt":"","text":"题目链接： https://leetcode-cn.com/problems/binary-tree-maximum-path-sum/ 题目描述 给定一个非空二叉树，返回其最大路径和。 本题中，路径被定义为一条从树中任意节点出发，达到任意节点的序列。该路径至少包含一个节点，且不一定经过根节点。 解题思路 首先，这是一道非常标准的树形结构搜索的问题，对于树结构相关的问题，都可以用深度优先搜索或广度优先搜索的方法来解决，此题也不例外。只要考虑好在每个节点上做什么操作、在 child 节点上做什么操作，以及是先序、中序还是后续就行了。 关于这个题，很明显是后序。因为你需要找到当前 node 节点的子节点的路径长，才能确定通过当前 node 节点的路径长。 1234567def dfs(node): if not node: # pass dfs(node.left) dfs(node.right) # do sth to node return #path. 对于这个问题，其路径可以不经过 root 节点，那么对于最长路径中的任意一个节点 n，可选的操作有四种：①从 n 的父节点连接 n 到 n 的左子树；②从 n 的父节点连接 n 到 n 的右子树；③从 n 的左子树连接到 n 连接到 n 的右子树；④最大路径从 n 点结束，包括最上的点和最下的点两种情况。 我们用全局变量 path 表示当前的全局最优解。 对于前两种情况，到目前为止我们只求得了或者说是遍历过了最长路径的部分，因此这一部分要把经过该节点的子路径的长度返回给父节点继续计算。其中除了情况一和二之外，还有一种就是情况四中的最大路径最下从当前节点结束：即它的所有子树的最大路径都是负值。因此我们要针对这三种情况计算局部最优值。 对于情况三，在得到了左右子树的最大路径值后，都能直接计算出该情况的解，因此此时直接将其与全局最优解比较。此外还可能其其中一个子树的最大子路径值为负数，且父节点的最大子路径值也为负数，即最大路径最上从当前节点结束，都要和全局最优解比较。 具体代码如下： 解题代码 123456789101112131415class Solution: def maxPathSum(self, root): self.path = -1000000 def dfs(node): if not node: return dl = dfs(node.left) dr = node.right # local max local_max = max(node.val, node.val+dl, node.val+dr) self.path = max(node.val+dl+dr, local_max, self.path) return local_max dfs(root) return self.path","categories":[],"tags":[{"name":"Leetcode","slug":"Leetcode","permalink":"http://maneback.github.io/tags/Leetcode/"},{"name":"tree","slug":"tree","permalink":"http://maneback.github.io/tags/tree/"},{"name":"BFS&DFS","slug":"BFS-DFS","permalink":"http://maneback.github.io/tags/BFS-DFS/"}]},{"title":"Leetcode -- subsets","slug":"subset","date":"2020-06-09T00:38:42.000Z","updated":"2021-01-06T13:26:44.861Z","comments":true,"path":"2020/subset/","link":"","permalink":"http://maneback.github.io/2020/subset/","excerpt":"原题链接：https://leetcode-cn.com/problems/subsets/","text":"原题链接：https://leetcode-cn.com/problems/subsets/ 题目描述： 给定一组不含重复元素的整数数组 nums，返回该数组所有可能的子集（幂集）。 说明：解集不能包含重复的子集。 示例： 输入: nums = [1,2,3] 输出: [ [3], [1], [2], [1,2,3], [1,3], [2,3], [1,2], []] 解法： 本题是非常经典的回溯法解决的题目。 12345678910111213def subset(nums): def backtrack(first=0, curr=[]): if len(curr)==k: output.append(curr) for i in range(first, n): curr.append(nums[i]) backtrack(i+1, curr) curr.pop() output = [] n = len(nums) for k in range(n+1): backtrack() return output","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"Leetcode","slug":"Leetcode","permalink":"http://maneback.github.io/tags/Leetcode/"},{"name":"backtrack","slug":"backtrack","permalink":"http://maneback.github.io/tags/backtrack/"}]},{"title":"论文解读|点云深度学习方法--PointNet","slug":"pointnet","date":"2020-05-19T10:49:03.000Z","updated":"2021-02-24T02:21:31.988Z","comments":true,"path":"2020/pointnet/","link":"","permalink":"http://maneback.github.io/2020/pointnet/","excerpt":"PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation [CVPR 2017]","text":"PointNet: Deep Learning on Point Sets for 3D Classification and Segmentation [CVPR 2017] 论文解读系列第①篇 今天带来的是 CVPR 2017 的一篇文章 PointNet。这片文章可以说是深度学习直接处理原始点云数据 (raw point cloud) 的开篇之作。目前在 Google Scholar 上面查到的引用量已经超过了 2000 次。 一、背景 先来看一看点云与深度学习结合的问题。近年来，深度学习方法取得了广泛的关注和应用，在图像、语音、文字等领域都取得了很好的应用成果。而点云是一种新型的 3D 空间的数据表示格式。它一般以一个四维向量 (x, y, z, i) 表示一个点。其中， (x, y, z) 是空间中的三维坐标，而 i 表示的是该点的反射强度。 当 2D 图像输入到深度学习的网络中时，它是规则的数据，每个像素值的位置都可以以一个二维坐标来表示，且它在空间上是连续的表示，即相邻像素就是在图像中相邻的。而点云的表示方法有所不同。它是无序且非结构化的表示，只是一个由点的坐标构成的集合，而相邻点之间并没有这种空间的相邻关系。这就会造成如下面这样的结果： 如上图：一副点云由若干的点构成，但是同一副点云图像其中点的排列顺序可能会不同，当以两者分别输入卷积网络中时，无论对于分类任务还是对于目标检测任务来讲，会带来不同的结果。然而实际上二者表示的是同一个物体或内容。这显然不是我们想要的结果。 卷积网络需要结构化的输入，而点云的输入是非结构化的，这样就会导致卷积网络并不适用于点云数据，基于此，人们想出了两种预处理方式，来使点云成为结构化的输入。 第一种方法是 multi-view 投影的方法。即以点云在多个视角的投影作为输入，用原来的 2D 图像的卷积网络来处理。 第二种方法是 voxelization 的方法，即把空间划分成离散的体素 (3D voxel)， 然后每个点按照坐标位置决定落到那个体素单元中。这样，就可以把原来无序的点云输入规则化。 但是这种预处理的方式肯定会造成一定的信息损失。 基于此问题，本文的作者就提出了 PointNet 神经网络来处理点云数据。设计了一种直接处理点云来提取特征的新型网络，很好地考虑了对于输入点排列顺序的不变性。以及网络对于输入点集小的扰动和数据破坏（丢失）也具有很好的鲁棒性。 二、网络结构 首先来总结一下点云数据的三个特征以及由此带来的问题： Unordered ：点云在采集和存储是都是无序的，因此要求网络必须对一副点云所有可能的输入保持结果不变。 Interaction among points ：点云中每个点都与其周围的若干点表示了一定的空间结果，但是在存储来讲，并不能表示出这种结构。 Invariance under transformation ：点云表示了一定的三维结构，这要求网络的处理结果对于点云的旋转、转换等必须保持结果不变性。 针对以上的问题，本文采取的方法是：在初始阶段，对点云中每个点都单独进行相同的处理，然后再应用一个对称函数(MaxPooling)来解决点集的无序性问题。 PointNet 的网络结构如下： 网络的输入即为一个 nx3 的向量，表示 n 个点的三维坐标。可以用于分类任务与分割任务。对于分类任务，输出结果为 k 个分类类别的得分；对于分割任务，输出结果为 n 个点逐个的所属分割部分的得分。 最重要的三个部分已在图中圈出： 两个小型的 T-Net 网络用于学习一个坐标变换矩阵，并应于该坐标变换矩阵增强输入数据，使得网络对于输入的旋转等操作具有一定的不变性。 MaxPooling 操作，以对称函数解决点云输入的不变性。 Aggregation 操作，将全局特征拼接到每个点的特征后面，用于分类任务。 首先，对于 nx3 的输入数据，先经过一个两层的 MLP ，提取得到每个点的 64 维特征，此外输入数据与特征数据分别经过 input transform 和 feature transform 操作进行增强。这样我们就得到了一个 nx64 的特征，每个点的特征以一个 64 维的向量表示。在此之后，再经过一个三层的 MLP 将 64 维的特征升到 1024 维。 然后经过 maxpooling 操作提取得到一个全局的 1024 维特征。然后输入到分类网络中用以分类。 对于如何解决无序性问题，使得模型能够不受输入的排列顺序的影响。那么作者提出了三种可能的解决方法：(1)是将输入按一个规范顺序排序。这个很显然是不可行的。(2)是将输入作为一个连续的序列来训练一个RNN，并通过所有可能的排序来增加训练数据。一方面，有研究表明在RNN中顺序确实是有影响的，不能被忽略；另一方面，当point clouds 数据集很大的时候，对所有的N!个排列都处理一次也是不现实的。(3)是采用对称函数。 下面来介绍一下对称函数。所谓对称函数，通俗来讲就是参数的输入顺序不会影响函数的结果。如加法、乘法等，都是非常常见且明显的对称函数，可以任意改变参数的顺序。对于 maxpooling 操作来讲，它当然也是对称函数，无论输入的 n 个点的排列顺序如何，在对 nx1024 维的特征应用 maxpooling 操作时，得到的结果永远都是一样的。 这样借用 maxpooling 函数的对称性，我们就可以无视输入的无序性。先对每个点单独地进行相同的操作，然后再应用对称函数提取全局特征就好了。形式上来讲，可以表示为： \\[ f(x_1, x_2,...x_n)=g(h(x_1), h(x_2),...h(x_n)) \\] 函数 \\(f\\) 是作用在点集上的函数，函数 \\(h\\) 是作用在单个点上的函数，而函数 \\(g\\) 是一个作用在经过处理的点 \\(h(x)\\) 上的对称函数，这样我们就可以用函数 \\(g\\) 和 \\(h\\) 来得到关于点集的操作 \\(f\\) 。而相关的理论证明，将会在第四部分给出。 对于分割任务来讲，既要考虑全局的特征，又要考虑全局特征，所以做法便是将 1024 维的全局特征聚合到每一个 64 为的点特征之后，这样得到的特征就既包含了全局的信息，也包含了点的局部信息了，从而用于分割任务。 三、结果 在论文中，作者给出了 PointNet 网络在分类、部分分割与场景语义分割三项任务上的结果。 3.1 分类 在 ModelNet40 数据集上分类的准确率如下： 在这项任务中，与 multi-view 与 voxel 的方法进行了对比。 3.2 部分分割 所谓部分分割，就是对每个点生成一个类别标记： 在 ModelNet40 部分分割结果如下，评价指标为 IoU: 3.3 场景语义分割 场景语义分割任务与部分分割任务类似，也是为每个点分配一个类别标记，判断每个点属于哪个物体。数据集为 Stanford 3D semantic parsing data Set. 在这一项任务中，输入不在是三维向量，而是九维，包括 (三维坐标，RGB值，归一化后的三维坐标)。得到的结果如下： 四、理论分析 在这一章节中，给出一些理论上的分析。 4.1 近似逼近性 首先，给出为什么可以用 \\(g\\) 和 \\(h\\) 来近似逼近函数 \\(f\\)。 对于定义在集合上的连续函数 \\(f\\) , 有如下的性质： \\[ \\begin{align} &amp;\\chi = \\{S:S\\subseteq[0,1]^m and\\; |S|=n \\}\\\\ &amp;f:\\chi \\to \\mathbb{R},\\mbox{ 是一个连续的集合函数。}\\\\ &amp;\\mbox{Hausdorff distance } d_H(.,.) \\mbox{ 定义元素之间的距离。}\\\\ &amp; \\forall\\, \\theta&gt;0, \\exist \\,\\delta&gt;0, for\\;any\\;S_1,S_2\\in\\chi:\\\\ &amp;if\\;\\;d_H(S_1,S_2)&lt;\\delta, then\\;|f(S_1)-f(S_2)|&lt;\\theta \\end{align} \\] 由于连续函数 \\(f\\) 有了这个性质，那么我们就可以定义一个对称函数 \\(g\\) ，是一个\\(\\gamma\\) 和 max的复合函数。使得函数 \\(g\\) 作用于 \\(h(x)\\) 之上的函数值与 \\(f(S)\\) 之间的数值足够小。 换句话说，我们可以用这样一个作用于每一元素的函数 \\(h\\) 以及一个对称函数 \\(MAX\\) 来近似集合函数 \\(f\\) 。 \\[ \\begin{align}&amp;\\forall \\theta&gt;0,\\;\\exist \\mbox{ 一个连续函数 }\\;h\\\\&amp;\\mbox{ 和一个对称函数 }\\;g(x_1,...,x_n)=\\gamma\\circ MAX:\\\\&amp;\\mbox{such that for any }\\; S\\in \\chi :\\\\&amp;\\bigg|f(S)-\\gamma\\bigg(MAX_{x_i\\in S}\\{h(x_i)\\}\\bigg)\\bigg|&lt;\\theta\\\\&amp; (x_1,...,x_n \\mbox{ 是 }S\\mbox{ 中的元素。})\\end{align} \\] 4.2 稳定性分析 第二是全局特征维度的维度K对结果的影响，以及整个网络的鲁棒性分析。 首先令 \\(u\\) 是由一个点集经过 \\(h\\) 计算每个点，再进行最大池化，得到一个 k 维向量的函数，那么 \\(f\\) 可以表示为 \\(\\gamma\\) 和 \\(u\\) 的复合函数。 那么，对于任意一个点集 S，都存在另外两个点集 C 和 N ，使得在任意一个不小于 C 且不大于N 的点集 T，\\(f(S) = f(T)\\)。即对于一个集合 \\(S\\), \\(f(S)\\) 的函数值，只受到这个集合 \\(C\\) 的影响，更多的点对于函数的结果并不起到作用。 b)说明C中点的个数不大于K。这个K就是特征的维度。因为我们在用 \\(u\\) 做最大池化操作时，对于 K 维中的每一个，只会选择来自一个点的特征作为该位的最大值，也就是说 MAXPOOLING 操作只会选择 K 个起作用的点。 因此，maxpooling 时候的特征维度K会影响C，进而影响分类的准确率。 $$ \\[\\begin{align} &amp; 令\\; u: \\chi\\to\\mathbb{R}^K\\\\ &amp;u=MAX_{X_i\\in S}\\{h(x_i)\\}\\;\\;即u由一组点生成一个K维的向量。\\\\ &amp;f=\\gamma\\circ u,则有：\\\\ &amp;(a)\\;\\forall S,\\; \\exist \\mathcal{C}_s \\,\\mathcal{N}_S\\subseteq\\chi,\\, f(S)=f(T)\\;if\\;\\mathcal{C}_s\\subseteq T\\subseteq \\mathcal{N}_S\\\\ &amp;(b)\\; |\\mathcal{C}_S|\\leq K \\end{align}\\] $$ \\[ \\begin{align} &amp;(a)式说明\\;f(S)\\;的函数值由一组关键点\\mathcal{C}_S 决定\\\\ &amp;且添加的噪声点只要不超过\\mathcal{N}_S,对函数值不会产生影响。\\\\ &amp;(b)式说明关键点的个数 |\\mathcal{C}_S|存在上界,\\\\ &amp;不大于K，即最大池化时特征的维数。 \\end{align} \\] \\[ 称 \\mathcal{C}_S 为\\; critical\\; point\\; set,K\\;为\\;bottleneck\\; dimension \\] 上述证明说明了此网络对于输入中一些微小的扰动与离群点具有很好的鲁棒性，并不会很大程度上影响结果。 下面给出了一些点云输入的 $_S $ 和 \\(\\mathcal{C}_N\\) 集合可视化例子。可以看出经过这个网络提取出的 \\(\\mathcal{C}_S\\) 集合，大体上描绘了这个物体的大致轮廓。 下图是 maxpooling 的维度 K 对准确率的影响。横坐标是 K 设置的数值，纵坐标是分类的准确率。每条线是每个输入中点的数量。可以看到随着 K 的增加，准确率有所上升，但是当 K 到达 1000 左右时基本上就不再变了，所以本文中 K 的取值就是选择 1024 ，以达到效率与精确度的最好权衡。 4.3 设计分析 在之前，提到过有三种方法解决无序性问题：排序、RNN、对称函数，现在给出这三种设计方法的效果对比： 可以看到对称函数操作的准确性最高，而在所考虑的三种对称函数中，maxpooling 的准确性又是其中最高的。 此外，我们提到过 T-Net 对齐网络的作用，在这里给出它的实际效果，可以看出它可以在一定程度上提高分类的准确率。","categories":[{"name":"论文解读","slug":"论文解读","permalink":"http://maneback.github.io/categories/论文解读/"}],"tags":[{"name":"点云","slug":"点云","permalink":"http://maneback.github.io/tags/点云/"},{"name":"深度学习","slug":"深度学习","permalink":"http://maneback.github.io/tags/深度学习/"},{"name":"学习","slug":"学习","permalink":"http://maneback.github.io/tags/学习/"}]},{"title":"关于微信的一件小事","slug":"wechat-account","date":"2020-05-06T02:12:58.000Z","updated":"2021-02-24T02:22:04.806Z","comments":true,"path":"2020/wechat-account/","link":"","permalink":"http://maneback.github.io/2020/wechat-account/","excerpt":"","text":"首发于个人公众号不愿意透露姓名的松哥， 文章链接， 文章略有修改。 我开始飘了，都开始写公众号文章了，都开始思考微信公众号的产品逻辑了，都开始分析评论公众号的种种优缺点了。 零 最近，突然发现微信里面开始有了一些“小动作”。 比如文章底部开始有相关推荐，比如看一看里面开始带话题，比如信息流中开始有公众号推荐。 一 稍微思考一下微信的使用时间，基本上可以分为以下两部分：聊天刷朋友圈+公众号文章阅读。只要你的好友也还在用微信，你就不得不保证前者的使用时长。而后者呢，则是由公众号文章的质量决定的。 再看一看近来（其实也不太近了）微信其他的一些更新：公众号改为信息流的形式，增加浮窗的个数，越来越强化看一看的推荐，（还在测试中的？）付费阅读？以及上述的几个小细节。这些功能都是针对后者的优化，也就是为公众号服务的，而不是针对普通用户。 获取讯息是多数人的重要需求。如果公众号的这些创作者不再在微信中创作，就有可能去微博、去知乎、去B站等等，而普通用户这方面在微信花费的时间也会流失。 微信公众号只是平台，而不生产内容。给内容创作者以更好的体验和有效的激励（更多真实的关注和阅读量）、创造更好的生态与创作环境，留下好的创作者，留下好的内容，用户使用时长自然也会增长。而人的时间和精力也是有限的，在微信上“浪费”的时间更多了，留给其他应用的时间也就更少了。 二 微信公众号确实产生了许多高质量的文章，也有很多优质的账号。但是与其他的内容平台还是有许多的不足。比如公众号中禁止插入外部链接（真很难理解这么大的一个互联网公司的这种做法），公众号文章那（几乎等于）没有的分享功能，更不要说公众号这（近乎）残废的留言互动功能。 公众号系统是以账号为中心的，而之外的知乎和微博等，则更多的偏向以内容为中心，比如热榜、热搜的存在等等，这种形式的内容传播，是可以覆盖到其所有用户的。此外，在微博上，内容可以在用户之间任意地转发传播以及曝光；在知乎上，用户更关注的是问题与问题之下的回答与讨论，也就是内容本身，有时用户对于内容的产出者并不是关注太多。 而对于公众号来讲，其内容的传播链条很短，更何况也无法被常用的搜索引擎爬取（有几个人知道在哪里可以搜索公众号的文章呢？）。几乎没有办法借助微信官方的推荐等等，来增加自己的关注量。即使现在微信官方去出面，去强化看一看功能，增加优质内容的推荐曝光，但是这种也同样是基于微信好友关系，那么势必会影响其传播范围。与微博、知乎官方所使用的推荐算法的覆盖范围差远了。 因此在那之前，对于公众号自媒体来讲，增加关注量是一件很困难的事情，他们要在微博、知乎、博客等各种平台留下自己的账号、利用自己在其他地方的影响力来给自己增加关注。用户也只能在其他应用、或是好友分享的某一篇文章、或是公众号主们之间的互推来关注到一个高价值的公众号。 但是也不得不承认，优质公众号的用户粘性极高，你看到的内容完全是你自己的选择。公众号有更多“个人品牌”的属性在里面。对一个公众号产生了认同感，才会去持续关注，追热点蹭热度很难带来持久的关注增长。也正是因为公众号系统以账号为中心，其也特别适合那种专一于特定主题，目标群体明确的账号。点点关注不迷路。 最后 在知乎上，关于微信一些设计与功能的提问与讨论也有很多。但是该用微信的人还是在用，毕竟在这个领域完全没有拿得出手的竞争者。微信的用户数量实在是太庞大了，用户实际的使用场景实在是太多了，它在功能上有很多被人们吐槽的地方。 但是你要明白：微信它本身只是一个即时通讯类的软件，而不是一个什么都包了的软件。你所觉得的一些功能残缺，可能这并不是它当初所设想的使用场景。微信的日活超过十亿，有人用它聊天，有人用它办公，有人用它卖货，也有人用它发广告等等等等。 只要你想明白了这件事情，你就会明白它为什么对某些用户需求无动于衷。同时要考虑它做出某些改进的原因。 另外最近在微博上面也看到了这样一段话： 虽然主语讲的是微博，但是对微信来说也是同理。","categories":[{"name":"公众号文章","slug":"公众号文章","permalink":"http://maneback.github.io/categories/公众号文章/"}],"tags":[{"name":"微信公众号","slug":"微信公众号","permalink":"http://maneback.github.io/tags/微信公众号/"}]},{"title":"【转载】央行报告-中国城镇居民家庭户均总资产317.9万元","slug":"city-asset","date":"2020-05-01T08:42:14.000Z","updated":"2021-02-24T02:17:37.784Z","comments":true,"path":"2020/city-asset/","link":"","permalink":"http://maneback.github.io/2020/city-asset/","excerpt":"本文为央行发布的关于中国城镇居民家庭户均资产的调查报告，对三万余户家庭的资产情况进行了调查，可以说是当前此类调查中最为完整、详实的调查。 但是不知为何据说原链接地址的文章已经不可见，现放到这里留存。","text":"本文为央行发布的关于中国城镇居民家庭户均资产的调查报告，对三万余户家庭的资产情况进行了调查，可以说是当前此类调查中最为完整、详实的调查。 但是不知为何据说原链接地址的文章已经不可见，现放到这里留存。 2019年中国城镇居民家庭资产负债情况调查 中国人民银行调查统计司城镇居民家庭资产负债调查课题组于2019年10月中下旬在全国30个省（自治区、直辖市）对3万余户城镇居民家庭开展了资产负债情况调查。从当前掌握的资料看，这是国内关于城镇居民资产负债情况最为完整、详实的调查之一。 调查显示：第一，城镇居民家庭户均总资产317.9万元，资产分布分化明显；家庭资产以实物资产为主，住房占比近七成，住房拥有率达到96.0％；金融资产占比较低，仅为20.4％，居民家庭更偏好无风险金融资产。 第二，城镇居民家庭负债参与率高，为56.5％，负债集中化现象明显，负债最高20％家庭承担总样本家庭债务的61.4％；家庭负债结构相对单一，负债来源以银行贷款为主，房贷是家庭负债的主要构成，占家庭总负债的75.9％。 第三，城镇居民家庭净资产均值为289.0万元，分化程度高于资产的分化程度。与美国相比，我国城镇居民家庭财富分布相对均衡（美国净资产最高1％家庭的净资产占全部家庭净资产的比重为38.6％，我国为17.1％）。 第四，城镇居民家庭资产负债率为9.1％，总体稳健，少数家庭资不抵债；居民家庭债务收入比为1.02，略高于美国居民水平（0.93）；偿债能力总体较强，偿债收入比为18.4％，居民家庭债务风险总体可控。 第五，需关注两方面问题。一是居民家庭金融资产负债率较高，存在一定流动性风险。二是部分家庭债务风险相对较高，主要表现在以下几个方面：部分低资产家庭资不抵债，违约风险高；中青年群体负债压力大，债务风险较高；老年群体投资银行理财、资管、信托等金融产品较多，风险较大；刚需型房贷家庭的债务风险突出。 城镇居民家庭资产分化明显，金融资产占比低，房产占比超七成 城镇居民家庭资产分化明显 调查数据显示，城镇居民家庭总资产均值为317.9万元，中位数为163.0万元。均值与中位数之间相差154.9万元，表明居民家庭资产分布不均。居民家庭资产分布不均衡主要体现在以下四个方面。 第一，居民家庭资产的集中度较高，财富更多地集中在少数家庭。将家庭总资产由低到高分为六组，最低20％家庭所拥有的资产仅占全部样本家庭资产的2.6％，而总资产最高20％家庭的总资产占比为63.0％，其中最高10％家庭的总资产占比为47.5％。 第二，区域间的家庭资产分布差异显著，经济发达地区的居民家庭资产水平高。分经济区域看，东部地区明显高于其他地区。东部地区居民家庭户均总资产为461.0万元，分别高出中部、西部、东北地区197.5万元、253.4万元和296.0万元。东北地区居民家庭户均总资产最低，仅占东部地区居民家庭的三分之一左右。 分省份看，家庭资产最高的三个省（自治区、直辖市）为北京、上海和江苏，最低的三个省（自治区、直辖市）为新疆、吉林和甘肃。其中，北京居民家庭户均总资产约为新疆居民家庭的7倍。 △图1 各省居民家庭户均总资产 第三，高收入家庭拥有更多资产。将家庭总收入从低到高排序，总收入最高20％家庭所拥有的总资产占全部样本家庭总资产的半数以上。其中，收入最高10％家庭户均总资产1204.8万元，是收入最低20％家庭户均总资产的13.7倍。 第四，户主的年龄、学历水平及职业均影响家庭资产分布。一是家庭总资产随户主年龄的提高呈现先增加后减少的特征。户主年龄为56～64岁的家庭户均总资产最高，18～25岁的户均总资产最低。二是户主的学历水平越高，家庭户均总资产越多。户主为研究生及以上学历的家庭户均总资产明显高于均值，高中及以下学历的家庭户均总资产最低。三是户主为企业管理人员和个体经营者的家庭总资产明显高于均值，其余家庭总资产均低于平均水平。 △图2 户主分组（年龄、学历和职业）的家庭资产分布 家庭资产以实物资产为主，房产是其主要构成 调查显示，我国城镇居民家庭资产以实物资产为主，户均253.0万元，占家庭总资产的八成。 △图3 家庭实物资产构成情况 第一，住房是家庭实物资产的重要构成，居民家庭住房拥有率相对均衡。我国城镇居民家庭的实物资产中，74.2％为住房资产，户均住房资产187.8万元。居民住房资产占家庭总资产的比重为59.1％。和美国相比，我国居民家庭住房资产比重偏高，高于美国居民家庭28.5个百分点。 △图4 中国和美国不同收入组的住房拥有率 居民的住房拥有情况相对均衡。我国城镇居民家庭的住房拥有率为96.0％，有一套住房的家庭占比为58.4％，有两套住房的占比为31.0％，有三套及以上住房的占比为10.5％，户均拥有住房1.5套。美国住户总体的住房拥有率为63.7％，低于我国32.3个百分点。按家庭收入从低到高排序，美国收入最低20％家庭的住房拥有率仅为32.9％，而我国收入最低20％家庭的住房拥有率也为89.1％。 城镇居民家庭拥有的住房数量越多，其家庭资产中住房资产的占比反而越低。拥有一套住房的家庭的总资产中住房资产的占比为64.3％，有两套住房家庭的住房资产占比为62.7％，有三套及以上住房家庭的住房资产占比为51.0％。这主要是因为多房产家庭在解决了基本住房需求后，更倾向于多元化资产配置。 第二，商铺及厂房等经营性资产是家庭资产差距大的重要原因。受调查家庭中，15.9％的家庭拥有商铺或厂房等经营性资产，这些家庭的经营性资产均值为257.5万元，占其家庭总资产的33.1％。拥有经营性资产家庭的户均总资产为776.8万元，是没有经营性资产家庭的3.4倍。 家庭总资产越多，经营性资产的拥有率越高，经营性资产在家庭资产中的比重越大。按家庭总资产排序，资产最高10％的家庭中，近半数的家庭拥有经营性资产，这些家庭的经营性资产占家庭总资产的35.6％；而资产最低20％家庭中仅有3.5％的家庭拥有经营性资产，其经营性资产占家庭总资产的比重为22.4％。 金融资产分化明显，居民家庭更偏好无风险金融资产 受调查家庭中，有99.7％的家庭拥有金融资产，户均金融资产64.9万元，占家庭总资产的20.4％。与美国相比，我国城镇居民家庭金融资产占总资产的比重偏低，比美国低22.1的百分点。 △图5 城镇居民家庭金融资产构成 第一，金融资产的分化程度更明显。将家庭分别按照金融资产和实物资产从低到高进行排序，金融资产最高10％家庭所拥有的金融资产占所有样本家庭的58.3％，而实物资产最高10％家庭拥有的资产占比为47.1％。可见，金融资产的不均衡程度更显著。 第二，居民投资偏稳健，家庭无风险金融资产持有率高。调查显示，无风险金融资产的持有率高于风险金融资产的持有率，受调查家庭中无风险金融资产的持有率为99.6％，户均35.2万元；风险金融资产的持有率为59.6％，户均50.1万元。从调查样本整体看来，户均持有无风险金融资产35.0万元，占总金融资产的比达到53.9％，高于风险金融资产。 第三，高资产、高学历家庭参与风险金融市场的意愿更强，金融资产表现形式更加多元化。随着家庭资产的增加，家庭持有风险金融产品的比率稳步提高。将家庭总资产排序，总资产最高20％家庭的风险金融资产的持有率为87.9％，最低20％家庭的持有率为29.8％。而且，总资产越多的家庭参与各类金融市场的程度越高，高资产家庭在各类金融产品上的持有率均明显高于全国平均水平。 △图6 不同资产组和不同学历水平居民家庭的各类金融产品持有率 从学历水平看，学历越高的家庭金融资产表现形式越多元化。调查数据显示，随着户主学历水平的提高，家庭持有活期与定期存款的比重有所下降，而持有银行理财产品、互联网金融及股票、基金等金融资产的比例有所上升。这主要是因为高学历群体通常更了解相关的金融知识和信息，加之其往往拥有较高的收入和资产，因而在满足了预防性需求后更愿意投资高风险、高收益的金融产品。 城镇居民家庭负债参与率高，负债结构相对单一，房贷是主要构成部分 第一，家庭负债参与率较高，负债集中化现象明显。目前我国城镇居民家庭运用杠杆现象较为普遍。受调查家庭中，有负债的家庭占比为56.5％。分地区看，东北地区居民家庭负债参与率最低，为42.1％；东部、中部分别为57.9％和55.7％；西部地区最高，为60.1％。 有负债的家庭中，户均家庭总负债为51.2万元。其中，53.8％的居民家庭负债余额在30万元以下，35.6％的家庭负债余额在30万～100万元，10.5％的家庭负债余额在100万元以上。按照家庭负债余额从低到高排序，负债最低20％家庭的户均总负债3.2万元，所承担的负债仅占全部样本的1.3％；负债最高20％家庭的户均负债157.3万元，所承担的负债占全部样本的61.4％。 第二，家庭负债结构相对单一，负债来源以银行贷款为主，房贷为家庭负债的主要构成。从负债来源看，城镇居民家庭的负债以银行贷款为主。有负债的居民家庭中，户均银行贷款49.6万元，占家庭总负债的96.8％。银行体系外的负债占比低，仅为3.2％，其中民间借贷和互联网金融产品贷款的户均负债额分别为1.2万元和0.1万元，占家庭总负债的比重分别为2.4％和0.2％。 从负债用途看，房贷是家庭负债的基本构成。有负债的居民家庭中，76.8％的家庭有住房贷款，户均家庭住房贷款余额为38.9万元，占家庭总负债的比重为75.9％。调查显示，75.9％的居民家庭将负债用于购房，24.8％的居民家庭用于日常消费，12.8％的居民家庭用于买车或车位，9.6％的居民家庭用于装修或购买家电，9.3％的居民家庭用于实体经营，9.0％的居民家庭用于教育，3.9％的居民家庭用于医疗，2.3％的居民家庭用于金融投资。 第三，富裕家庭的负债参与率更高，且更容易获得银行贷款，低资产家庭对民间借贷的依赖度相对较高。按家庭总资产排序，资产最高20％家庭的负债参与率最高，为63.3％，且负债中97.1％为银行贷款。资产最低20％家庭的负债参与率最低，为38.6％。资产最低20％家庭的负债来源中，89.4％来源于银行贷款，远低于其他家庭；9.0％来自于民间借贷，远高于其他家庭。这主要是因为低资产家庭往往收入较低，或者没有稳定的收入来源，从银行渠道获得贷款相对困难，因而对民间借贷的依赖度相对较高。 第四，居民家庭负债集中于中青年和高学历家庭。受调查家庭中，户主年龄为26～35岁的家庭负债参与率最高，为73.1％。随着年龄的提高，家庭负债参与率有所下降，户主年龄为65岁及以上的家庭负债参与率最低，为25.1％。家庭负债参与率与户主的学历成正比，户主受教育程度越高，家庭负债参与率越高。 .△图7 按户主年龄和学历分组的家庭负债参与率 家庭净资产分化程度高于资产的分化程度，但中国城镇居民家庭财富分布较美国均衡 将居民家庭的资产扣除负债，得到的净资产更能真实地反映居民家庭的财富水平。调查数据显示，中国城镇居民家庭净资产均值为289.0万元。家庭净资产中位数为141.0万元，比均值低148.0万元。 居民家庭净资产分化程度高于家庭总资产。将家庭净资产从低到高排序，净资产最低20％家庭的净资产仅占全部样本家庭净资产的2.3％，而最高20％家庭的净资产占64.5％。对高资产组家庭作进一步细分，最高10％的家庭所拥有的净资产占全部样本家庭净资产的49.0％，最高1％的家庭占17.1％。 与美国相比，中国居民家庭财富的分布相对均衡。2016年，按家庭净资产排序，美国全国最高1％的家庭所拥有的净资产占全部样本家庭净资产的38.6％，略高于随后9％家庭的38.5％，而其余90％的家庭仅占22.8％，不到三分之一，说明美国居民家庭的财富向最富裕家庭集中的特征明显。我们的调查显示，在中国城镇居民家庭中，这三个比例分别为17.1％、31.9％和51.0％。即使假设我国乡村居民家庭的净资产均为零，将这些零资产的样本按乡村人口占比加入调查样本后，新样本中最高1％、随后9％和其余90％的家庭净财富占比分别为21.9％、38.5％和39.6％，我国居民家庭财富相对均衡。 居民家庭债务风险总体可控 城镇居民家庭资产负债率总体稳健，少数家庭资不抵债 总体看，我国城镇居民家庭的资产负债率相对较低。调查显示，我国城镇居民家庭资产负债率的均值为9.1％，低于美国的12.1％。其中，有负债家庭的资产负债率均值为14.8％，中位数为15.8％。 从资产负债率的分布看，资产规模越低，负债参与率越低，有负债家庭的资产负债率越高。尤其是资产规模在10万元及以下的家庭中，有负债的家庭的平均资产负债率高达111％。 △图8 不同资产负债率区间的家庭占比情况 有负债的家庭中，大部分家庭的资产负债率处于（0％，10％］的区间，少数家庭存在资不抵债的情况。调查样本中，资产负债率处于（0％，10％］的家庭占比为19.4％，占有负债家庭的34.4％。有0.4％共138户家庭的资产负债率超过了100％，这些家庭的债务占全部样本家庭债务的比重为0.4％。这些家庭主要有两种情况：一是低资产家庭（资产少于10万元），一共106户，债务规模占所有资不抵债家庭债务的比重为17％，他们的债务规模不大，但资产规模更小，资产无法覆盖债务；二是参与企业经营的家庭，一共23户，债务规模占所有资不抵债家庭债务的比重为41.1％，他们有一定规模的资产，但债务规模更大，而且借债的原因主要是实体经营。 居民家庭债务收入比为1.02，略高于美国居民水平 债务收入比是指居民家庭的债务余额与其年收入的比值，能更为直观地反映居民家庭的债务规模。调查显示，我国城镇居民家庭的平均债务收入比为1.02，略高于美国0.93的水平。其中，有负债家庭的债务收入比的均值和中位数均为1.6。有少数家庭的债务规模远高于家庭收入，有1.2％共221户家庭的债务收入比超过了10，这些家庭的债务占全部样本家庭债务的比重为5.8％。 △图9 不同债务收入比区间的家庭占比情况 △图10 不同偿债收入比区间的家庭占比情况 偿债能力总体较强 我国城镇居民家庭偿债能力总体较强。调查数据显示，城镇居民家庭偿债收入比平均为18.4％，其中房贷偿债收入比为9.1％。有负债家庭的偿债收入比的均值为29.5％，中位数为26.7％。部分家庭的偿债负担较重，12.8％的家庭月偿债收入比超过四成，这些家庭的债务占全部样本家庭债务的比重为34.7％；4.5％的家庭月偿债收入比超过六成，债务占比为12.8％。 分收入水平看，低收入家庭偿债压力相对较大。调查数据显示，按家庭总收入从低到高排序，收入最低20％家庭月偿债收入比为24.8％，高于均值6.4个百分点，比最高20％家庭高9.1个百分点。这些低收入家庭中，13.8％的家庭月偿债收入比超过四成，6.7％的家庭超过六成。 实体经营家庭的偿债压力大。调查样本中，没有经营性债务家庭的偿债收入比为16.1％，有经营性债务家庭的偿债收入比为30.1％，高于前者14个百分点。 工薪阶层债务偿还压力明显。分职业看，户主为企业一般员工和国家机关、事业单位人员的家庭月偿债收入比相对高，分别为22.5％和19.9％，均高于平均偿债收入比。 值得注意的问题 第一，城镇居民家庭金融资产负债率较高，存在一定的流动性风险。城镇居民家庭资产配置高度集中于房产，金融资产占比低，金融资产负债率相对较高。调查显示，我国城镇居民家庭金融资产负债率为44.6％，其中，有负债家庭的金融资产负债率均值为85.3％，中位数为117.3％，半数以上的家庭金融资产负债率超过了100％。可见，居民资产负债率虽整体稳健，但是资产流动性较差，存在一定的流动性风险。 第二，部分低资产家庭资不抵债，违约风险高。受调查家庭中，总资产低于10万元的共有792户，这些家庭的资产负债率为30.7％，远高于其他家庭，其中有106户家庭的资产负债率超过了100％。这106户家庭多数无房无车，仅有少量存款，户主主要从事个体经营或其他职业，没有稳定收入，负债却相对较高，一旦遇到意外情况，违约风险较高。 第三，中青年群体负债压力较大，债务风险相对较高。户主年龄在26～35岁的居民家庭债务参与率、户均债务规模、资产负债率、债务收入比都要高于其他家庭。中青年家庭由于面临购房、成家生子、子女教育等多方面的支出压力，负债现象更为普遍，债务负担相对较重，偿债压力相对较大。 第四，老年群体投资银行理财、资管、信托等金融产品较多，风险较大。调查显示，户主年龄为65岁及以上居民家庭投资银行理财、资管、信托产品的均值为23.9万元，是总体平均水平的1.4倍，占其家庭金融资产的比重为34.8％，远高于其他年龄段水平。调研发现，尽管资管新规出台后理财产品不再保本，部分银行代理销售的第三方投资理财产品风险较高，但仍有不少居民认为在银行购买理财产品本金不会损失，实际投资风险与居民投资安全性预期存在较大差距。65岁以上的老年群体处于收入来源减少的人生阶段，将大量资金投资银行理财、资管、信托等金融产品，增加了投资及养老的不确定因素。 第五，刚需型房贷家庭的债务风险突出。受调查家庭中，43.4％的家庭有住房贷款。有房贷家庭的资产负债率、金融资产负债率和月偿债收入比分别为16.5％、101.5％和29.0％，债务风险明显高于平均水平。其中刚需型房贷家庭的债务风险尤其突出，这三项指标分别为24.2％、151.3％和33.0％，均为所有群体中的最高值。相比之下，投资型房贷家庭的债务风险要小得多，其三项指标仅略高于平均水平。 △图11 居民家庭债务收入比的分布情况 附：调查样本分布说明 区域分布 本次调查涉及30个省（自治区、直辖市），共计31100户城镇居民家庭。调查采用多阶段随机抽样方法，省级样本数量分配权重为各省城镇人口占比，各省的具体样本数量如下。 人口分布 本次调查对象为县级以上城镇居民家庭，不包括农村居民家庭，与全国人口结构略有差异，但总体看人口的年龄分布与国家统计局公布的全国人口分布基本一致。 本次调查共覆盖城镇居民99868人，户均人口数为3.2人，略高于全国户均家庭规模（3.0人）。从年龄结构看，20岁以下及60岁以上人口占比略低，但总体分布与全国情况一致。具体如下。 （作者系中国人民银行调查统计司城镇居民家庭资产负债调查课题组）","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"文章","slug":"文章","permalink":"http://maneback.github.io/tags/文章/"}]},{"title":"要买要看的书","slug":"books","date":"2020-03-16T07:15:39.000Z","updated":"2021-01-06T13:26:44.838Z","comments":true,"path":"2020/books/","link":"","permalink":"http://maneback.github.io/2020/books/","excerpt":"","text":"心理、人生、认知、理财 人格障碍的认知行为疗法 谁动了我的奶酪 思考快与慢 就业 利息与货币通论 被讨厌的勇气 程序员必备 C++ Primer Plus 设计模式 编程珠玑 代码整洁之道 数据科学实战 Python3 反爬虫原理与绕过实战","categories":[],"tags":[]},{"title":"好的文章","slug":"articles","date":"2020-03-16T06:32:57.000Z","updated":"2021-01-06T13:26:44.831Z","comments":true,"path":"2020/articles/","link":"","permalink":"http://maneback.github.io/2020/articles/","excerpt":"","text":"让赚钱思路更加开阔的7个小建议- 亦仁 我差点删了这篇文章 - 曾少贤 你有很多事情可以做！- 曾少贤 我最最最希望你们去看这10本书！- 曾少贤 它是这两年最好看的慢综艺 - 三联生活周刊 科技谎言下的人类危机 - 智先生 换个维度就耐心了 - AlpahGirl 少时偶像 - AlphaGirl 巨头挤压生存空间，应该怎么办？ - caoz的梦呓 搜索已死，谁来烧纸。 - caoz的梦呓 年薪百万是种怎样的体验 - caoz的梦呓 写给应届毕业生的40条人生箴言 - 曾少贤 蒋方舟：真正的自信，就是不去讨好所有人 - 曾少贤 94青年职场槽点|人生信箱 vol4 - AlphaGirl 这一万字里藏着中国未来最大的商机 - 进击波财经 我唯一的害怕（北大毕业典礼致辞）- 半导体行业观察 高手的系统 - 有些鸟 为什么一定要掌握自学能力？- 学习学习再学习 谈谈事实和逻辑 - caoz的梦呓 那个成年人终于跪下来了 - 智先生 普通人如何逆袭 - 小道消息 人工智障2：你看到的 AI 与智能无关 我杀死了平行宇宙里的自己——古巴特别篇 - 禅与宇宙维修艺术 我所亲历的5次泡沫破灭，千万富翁沦为街边小贩 - 财经连环话 以下为按时间正序： 支付宝毕其功于一役 - 半佛仙人 为什么老板越来越不当人 - 半佛仙人 讲的很正确，为什么总是做不对 - caoz 的梦呓 技术架构如何抓大放小 - caoz的梦呓 自信，还是自卑，别傻傻分不清 - caoz 的梦呓 技术干货 CNN 网络结构的发展 - 极市平台 CNN 是靠什么线索学习到深度信息的 - 极市平台 强化学习之路—清华博士后解读 83 篇文献 - 新智元 理解卷积神经网络对局限 - 极市平台","categories":[{"name":"Amazing","slug":"Amazing","permalink":"http://maneback.github.io/categories/Amazing/"}],"tags":[{"name":"文章","slug":"文章","permalink":"http://maneback.github.io/tags/文章/"},{"name":"人生","slug":"人生","permalink":"http://maneback.github.io/tags/人生/"}]},{"title":"一个没有预料的假期","slug":"2020jiaqi","date":"2020-03-11T09:27:32.000Z","updated":"2021-01-06T13:26:44.830Z","comments":true,"path":"2020/2020jiaqi/","link":"","permalink":"http://maneback.github.io/2020/2020jiaqi/","excerpt":"","text":"2020年的一开始，一场谁都没有意料到过的疫情使全国的生活都陷入了停滞状态。如果从1月20日钟南山院士宣布疫情可以人传人开始，到现在3月11号已经过去50天了。就算从正月初十正常复工开始算起，到现在也已经38天了，然而还远没有何时恢复正常的确切消息，想着也不能就这么混日子一直混下去了，总得记录下点什么。 然而即使是确认出现人传人之后，我仍然没有正确地认识到这件事情造成的影响，没有意识到生活会停滞这么久，没有意识到会全球范围内大范围传染。就像世界上所有的国家一样，在确诊人数还没破百之时，都还是一副灾难不会降临到自己头上来的悠闲看戏姿态，而随之而来的便是爆炸性几乎直线增长。这时回过头才开始幡然悔悟。即使在中国这个世界工厂已经开始封城、停工停学之时，生产基本停滞之时，也没想过这个病毒的传播会如此之厉害。 以及我们隔天仍然头铁地出去赶集，虽然是待了口罩，但是大街上也到处都是不戴口罩以及嘲讽别人戴口罩的人。真实存在的无知与愚蠢。也没有提前囤积口罩，因为还是仍然存着一丝丝侥幸，觉得病毒不会来到这么偏僻的地方。但是当百货大楼开始出现越来越多越来越多的病例时，这时就开始真正的慌了，因为太近了，而且一个村子里的人的接触和流动性比城里的小区多多了，卫生条件也差，很容易在不经意之间被感染。 疫情期间，股票市场也是非常有趣，先是连续几天大涨，大家伙都在鼓吹这牛市的到来，说：所有人都在等着跌了抄底，那股市就不会跌。疫情期间的股票仿佛就是一针稳定剂，说明大多数资本大多数人长时间来看对于这场疫情都是持乐观态度的。但是，没想到，除了东亚的中日韩三国外，欧洲各国以及美国也都相继沦陷，股市大跌。美国股票甚至触发了熔断机制，甚至是一周内两次熔断！多少人惊呼见证了历史。另外原油价格大跌，跌到了30美元一桶，“水比油贵”真的见证到了，沙特作为曾经美国的小弟在这个需求锐减的情况下仍选择提高产量来逼死竞争对手，这个世界怎么了？金融危机要来了吗？世界格局要变了吗？中国的国际地位要改变了吗？ 我承认，我不懂股票市场，没时间收集分析各种信息，不懂金融市场的操作，没时间每天研究大盘动态，存在盲从心理，追涨杀跌，跌了之后稳不住心态，没有独立冷静的分析，害怕赔的更多，活该被当韭菜割。想当初一天赔了200多之后，转眼稳不住就卖了大多数，然而后来又涨回来了，损失却损失了。在涨得时候，却相信它会一直涨下去，不懂得适时止盈。分析了一下，自己的投资太分散了，在收益率足够高时，每一个的实际收益却并不多，但是也不能每一个都卖了。所以只能每天看着那个收益涨涨落落。对我来说，它只是个数字，并没有变成我口袋里的钱，永远都不是，很可能到最后都白辛苦一场。我的基本想法还是找个安稳的基金，一年安安稳稳地赚个5%-7%的收益率，这一年下来刚刚够买个AirPods的，不也挺好的吗。 这次的疫情应该说会改变了我的消费观，必须承认，过去两年有些过度消费了。但是承认归承认，必须改变这种情况。从乐高，到台式机，到iPhone，到降噪耳机，一次次外出吃饭。然而其实我并没有如此强的消费能力，我还很穷，所以一定要想方设法省钱。因为你完全不知道明天和意外哪个先到来。像现在这样一连两个月没有收入，能不能坚持下去？遇到其他类似的意外能不能挺过去？这都需要慎重的考虑。 所以消费之前仔细思考思考，切忌盲目消费，不要落入了消费主义的陷阱。而且我的家庭条件比较来讲，我并不能一人吃饱全家不饿的样子。所以必须从现在开始就省吃俭用，省钱。淘宝看的那些衣服应该不会全买了，食堂也该也不会一天两顿都去学三二楼那种一顿饭十二三起步的地方去吃了。一天三十五和一天二十五的标准一个月下来就差了三百了，一年就是2400了。所以必须学会开源节流，没法开源就得更加节流。 现在想起来每花一笔钱都觉得很心疼，因为对自己的未来是悲观的预期。我承认我一直都是悲观保守的心态，但是之前仿佛没有如此之悲观，就犹如这两天绿油油的股票市场一般的绝望心态，找不到变好的路，什么都想尝试，但是又觉得尝试。 就在昨天，2020年03月10号，全网发生一个重大事件，关于某一医生的专访在全网刷屏与全网删帖之间反复摇摆。然而仿佛越删，越能激发广大网友的“创造力”与热情，各种语言的版本都开始出现了。其实不明白为什么要删，是上面有人怕被追责吗。 李文亮被称为吹哨人，但是被训诫。从某种意义上讲，《人物》也可以算是某种意义上的吹哨人，但是再一次被删帖，这充分说明这个魔幻的世界，你觉得它经历了之前的事件之后它会做出一些改变，然而并没有。 当这个社会就只有一个声音的时候，所有人都报喜不报忧，以稳定为借口隐瞒真相的时候，并不是说隐患就被解决不存在了，它只是被压抑了，在等待着下一个出口。所有人也都看到了，隐瞒真相只会产生错误的评估与决策。这次的事件不得不说与先前的忽视与误判有着很大的关系。讨论与批评并不是坏事，大多数普通人的想法都不是怎样怎样，他们只关心自己的生活能变好，吃得好过得好，能够多赚一点钱，活得更滋润一点，悠闲一点。而批评也只是希望能够解决某些不好的问题，让自己的生活更稳定，而不是把它干翻，或者被别人干翻。这并没什么不好，他们不会到处乱喷，到处惹事 互联网是有记忆的，然而人没有，过不了多久，人们就会忘记了这件事，估计只有下次再次出现疫情的时候才会被人们想起。 冷静思考了一下，看了一下前几条微博，自己仿佛一个喷子一样，发的微博都是在网上喷这喷那的。 肖战事件 或许我就应该平平淡淡找个角落孤独地过完一生，没有年薪百万，没有多的需求，没有欲望，没有这的那的，就一天挣够一天的饭钱然后抬头望着天。不能够适应这个残酷的社会。真的不能吗？为什么自己一点继续前进的动力都没有了？一次次信心满志又一次次在沉默中慢慢消亡了。难道真的是我习惯了怠惰，陷入舒适圈无法自拔？还是因为自己一直以来都没有目标，就这么浑浑噩噩地耗着，而恰巧之前耗得比较好，而现在比较难熬，就原形毕露了。 学习来讲，如果从2月14日最开始的第一次正式组会汇报开始算起，到现在已经到了第五个星期了，然而学习的热情大概只保持了三个星期，到后来就看着这个想别的，看着别的想这个。仿佛已经失去了学习的热情与创新的灵感。就只是一味地在被动地接收知识，而不是消化吸收，举一反三。 校历也来到了第四周，八周的课程上完了一半，但是基本上还是没学会什么知识。就网课这个形式来讲，就王某老师讲课的方式来讲，感觉这个老师讲课完全抓不住重点，简单的东西也细致地讲，然后复杂的东西可能就一句话带过了。对比了MIT的公开课，以及本校老师的数学课程的讲课方式。你会发现非常大的差别，本校老师完全就是照着PPT讲着看不懂的高深概念，而这是一个通病，只要看着高大上，看着困难，看着牛逼，就说明书写得好，课教得好。而不是以教学易懂为目的，忽略了学生的接受能力和水平。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"http://maneback.github.io/categories/碎碎念/"}],"tags":[{"name":"人生","slug":"人生","permalink":"http://maneback.github.io/tags/人生/"},{"name":"不定期更新","slug":"不定期更新","permalink":"http://maneback.github.io/tags/不定期更新/"}]},{"title":"Music","slug":"music-test","date":"2020-03-03T13:22:16.000Z","updated":"2021-01-06T13:26:44.852Z","comments":true,"path":"2020/music-test/","link":"","permalink":"http://maneback.github.io/2020/music-test/","excerpt":"","text":"终于找到了在博客中插入音乐的方法了。之前在网易云生成外链的方法不知道怎么就失效了呢。 新的方法使用了 hexo-tag-aplayer 和 MetingJS 。 先来一首最近非常非常喜欢的一个翻唱歌手唱的一首歌： 1. 安装 1npm install --save hexo-tag-aplayer 2.使用 aplayer可以引用本地的音乐文件，但是有时候显然会比较麻烦 1&#123;% aplayer title author url [picture_url, narrow, autoplay, width:xxx, lrc:xxx] %&#125; title : 曲目标题 author: 曲目作者 url: 音乐文件 URL 地址 picture_url: (可选) 音乐对应的图片地址 narrow: （可选）播放器袖珍风格 autoplay: (可选) 自动播放，移动端浏览器暂时不支持此功能 width:xxx: (可选) 播放器宽度 (默认: 100%) lrc:xxx: （可选）歌词文件 URL 地址 需要开启hexo的文章资源文件夹功能，将图片、音乐文件、歌词文件都放在与文章相对应的资源文件夹中，然后直接引用 3. MetingJS 现在hexo的配置文件_config.yml中设置： 12aplayer: meting:true 接着就可以用\\ 在文章中使用播放器了。 12&lt;!-- 简单示例 (id, server, type) --&gt;&#123;% meting \"60198\" \"netease\" \"playlist\" \"mini:true\" %&#125; 选项 默认值 描述 id 必须值 歌曲 id / 播放列表 id / 相册 id / 搜索关键字 server 必须值 音乐平台: netease, tencent, kugou, xiami, baidu type 必须值 song, playlist, album, search, artist fixed false 开启固定模式 mini false 开启迷你模式 loop all 列表循环模式：all, one,none order list 列表播放模式： list, random volume 0.7 播放器音量 lrctype 0 歌词格式类型 listfolded false 指定音乐播放列表是否折叠 storagename metingjs LocalStorage 中存储播放器设定的键名 autoplay true 自动播放，移动端浏览器暂时不支持此功能 mutex true 该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停 listmaxheight 340px 播放列表的最大长度 preload auto 音乐文件预载入模式，可选项： none, metadata, auto theme #ad7a86 播放器风格色彩设置","categories":[{"name":"Amazing","slug":"Amazing","permalink":"http://maneback.github.io/categories/Amazing/"}],"tags":[]},{"title":"latex 速查表","slug":"latex","date":"2020-02-18T09:15:00.000Z","updated":"2021-01-06T13:26:44.851Z","comments":true,"path":"2020/latex/","link":"","permalink":"http://maneback.github.io/2020/latex/","excerpt":"","text":"一、 集合操作 \\mid \\(A \\mid B\\) 属于\\in \\(a_i\\in A\\) 不属于\\not\\in \\(a_i\\not\\in A\\) 包含于\\subset \\(A \\subset B\\) 子集 \\subseteq \\(A \\subseteq B\\) 真包含于\\subsetneqq \\(A \\subsetneqq B\\) 包含\\supset \\(A \\supset B\\) 真包含 \\supsetneqq \\(A \\supsetneqq B\\) 交集\\cap \\(A \\cap B\\) 并集 \\cup \\(A \\cup B\\) 实数集合 \\mathbb{R} \\(\\mathbb{R}\\) 空集\\emptyset \\(\\emptyset\\) 二、数学运算 分数 \\frac{}{} \\(\\frac{a}{b}\\) 花体字母\\mathbb{} \\(\\mathbb{ABC}\\) \\nabla \\(\\nabla\\) \\partial \\(\\partial x\\) 不等号\\neq \\(x \\neq 1\\) 角度`\\sin\\!\\frac{\\pi}{3}=\\sin60^\\{operatorname{\\omicron}} \\(\\sin\\!\\frac{\\pi}{3}=\\sin60^{\\operatorname{\\omicron}}\\) 三、逻辑 逻辑与 land \\(A \\land B\\) 逻辑或 lor \\(A \\lor B\\) 逻辑非 \\lnot \\(\\lnot B\\) \\to \\(p\\to q\\) 三、上标、下标及积分等 前置上下标{}_1^2X_3^4 \\({}_1^2X_3^4\\) 向量 \\vec{x} \\(\\vec{x}\\) 无穷 \\infty \\(\\infty\\) 求和 \\sum_{k=1}^n x_k \\(\\sum_{k=1}^n x_k\\) 求积\\prod_{k=1}^n x_k \\(\\prod_{k=1}^n x_k\\) 极限 \\lim_{n \\to \\infty} x_n \\(\\lim_{n \\to \\infty} x_n\\) 积分 \\int_{-N}^{N} e^x \\(\\int_{-N}^{N} e^x\\) 双重积分 \\iint_{D}^{W}\\,dx\\,dy \\(\\iint_{D}^{W}xy\\,dxdy\\) 三重积分\\iiint_{E}^{V}\\,xyz\\,dxdydz \\(\\iiint_{E}^{V}\\,xyz\\,dxdydz\\) 曲线曲面积分\\oint_{C}x^3\\,dx+4y^2\\,dy \\(\\oint_{C}x^3\\,dx+4y^2\\,dy\\) 四、分数、矩阵和多行列式 分数\\frac{1}{2}=0.5 \\(\\frac{1}{2}=0.5\\) 小分数\\tfrac{1}{2}=0.5 \\(\\tfrac{1}{2}=0.5\\) 二项式系数\\dbinom{n}{r}=C_n^r \\(\\dbinom{n}{r}=C_n^r\\) 矩阵\\begin{matrix}x&amp;y \\\\ z&amp;v\\end{matrix} \\[\\begin{matrix}x&amp;y \\\\ z&amp;v\\end{matrix}\\] 矩阵\\begin{vmatrix}x&amp;y \\\\ z&amp;v\\end{vmatrix} \\(\\begin{vmatrix}x&amp;y \\\\ z&amp;v\\end{vmatrix}\\) 矩阵\\begin{Vmatrix}x&amp;y \\\\ z&amp;v\\end{Vmatrix} \\(\\begin{Vmatrix}x&amp;y \\\\ z&amp;v\\end{Vmatrix}\\) 矩阵 1234\\begin&#123;matrix&#125;x &amp; y \\\\z &amp; v\\end&#123;matrix&#125; \\[ \\begin{matrix} x &amp; y \\\\ z &amp; v \\end{matrix} \\] 12345\\begin&#123;bmatrix&#125;0 &amp; \\cdots &amp; 0 \\\\\\vdots &amp; \\ddots &amp; \\vdots \\\\0 &amp; \\cdots &amp; 0\\end&#123;bmatrix&#125; \\[ \\begin{bmatrix} 0 &amp; \\cdots &amp; 0 \\\\ \\vdots &amp; \\ddots &amp; \\vdots \\\\ 0 &amp; \\cdots &amp; 0 \\end{bmatrix} \\] 1234\\begin&#123;Bmatrix&#125;1 &amp; 2 \\\\3 &amp; 4\\end&#123;Bmatrix&#125; \\[ \\begin{Bmatrix} 1 &amp; 2 \\\\ 3 &amp; 4 \\end{Bmatrix} \\] 1234\\begin&#123;pmatrix&#125;a &amp; b \\\\c &amp; d\\end&#123;pmatrix&#125; \\[ \\begin{pmatrix} a &amp; b \\\\ c &amp; d \\end{pmatrix} \\] 条件定义 12345f(n)=\\begin&#123;cases&#125;n/2, &amp; \\mbox&#123;if &#125;n \\mbox&#123; is even&#125; \\\\3n+1, &amp; \\mobx&#123;if &#125;n \\mobx&#123; is odd&#125;\\end&#123;cases&#125; \\[ f(n)= \\begin{cases} n/2, &amp; if\\; n\\;is\\; even \\\\ 3n+1, &amp; if\\; n\\; is\\; odd \\end{cases} \\] 1234\\begin&#123;align&#125;f(x)&amp;=(m+n)^2 \\\\&amp;=m^2 + 2mn + n^2\\\\\\end&#123;align&#125; \\[ \\begin{align} f(x)&amp;=(m+n)^2 \\\\ &amp;=m^2 + 2mn + n^2\\\\ \\end{align} \\] 12345\\begin&#123;alignat&#125;&#123;2&#125;f(x) &amp; = (m-n) ^ 2 \\\\f(x) &amp; = (-m+n) ^ 2 \\\\&amp; = m^2-2mn+n^2 \\\\\\end&#123;alignat&#125; \\[ \\begin{alignat}{2} f(x) &amp; = (m-n) ^ 2 \\\\ f(x) &amp; = (-m+n) ^ 2 \\\\ &amp; = m^2-2mn+n^2 \\\\ \\end{alignat} \\] 1234\\begin&#123;array&#125;&#123;lcl&#125;z &amp; = &amp; a\\\\f(x,y,z) &amp; = &amp; x+y+z\\end&#123;array&#125; \\[ \\begin{array}{lcl} z &amp; = &amp; a\\\\ f(x,y,z) &amp; = &amp; x+y+z \\end{array} \\] 12345\\begin&#123;cases&#125;3x + 5y + z \\\\7x - 2y + 4z \\\\-6x + 3y + 2z\\end&#123;cases&#125; \\[ \\begin{cases} 3x + 5y + z \\\\ 7x - 2y + 4z \\\\ -6x + 3y + 2z \\end{cases} \\] 12345678 \\begin&#123;array&#125;&#123;|c|c||c|&#125; a &amp; b &amp; S \\\\\\hline0&amp;0&amp;1\\\\0&amp;1&amp;1\\\\1&amp;0&amp;1\\\\1&amp;1&amp;0\\\\\\end&#123;array&#125; \\[ \\begin{array}{|c|c|c|} a &amp; b &amp; S \\\\ \\hline 0ooo&amp;0&amp;1\\\\ 0&amp;1&amp;1\\\\ 1&amp;0&amp;1\\\\ 1&amp;1&amp;0\\\\ \\end{array} \\] 五、字体 希腊字母 大写 \\(\\Alpha\\) \\(\\Beta\\) \\(\\Gamma\\) \\(\\Delta\\) \\(\\Epsilon\\) \\(\\Zeta\\) \\(\\Eta\\) \\(\\Theta\\) \\(\\Iota\\) \\(\\Kappa\\) \\Nu \\(\\Lambda\\) \\(\\Mu\\) \\(\\Nu\\) \\(\\Xi\\) \\(\\Omicron\\) \\(\\Pi\\) \\(\\Rho\\) \\(\\Sigma\\) \\(\\Tau\\) \\(\\Upsilon\\) \\\\\\\\\\\\\\ \\(\\Phi\\) \\(\\Chi\\) \\(\\Psi\\) \\(\\Omega\\) 小写 \\(\\alpha\\) \\(\\beta\\) \\(\\gamma\\) \\(\\delta\\) \\(\\epsilon\\) \\(\\zeta\\) \\(\\eta\\) \\(\\theta\\) \\(\\iota\\) \\(\\kappa\\) \\(\\varkappa\\) \\(\\lambda\\) \\(\\mu\\) \\(\\nu\\) \\(\\xi\\) \\(\\omicron\\) \\(\\pi\\) \\(\\rho\\) \\(\\sigma\\) \\(\\tau\\) \\(\\upsilon\\) $$ \\(\\chi\\) \\(\\psi\\) \\(\\omega\\) \\(\\varepsilon\\) \\(\\vartheta\\) $ $ \\(\\varpi\\) \\(\\varrho\\) \\(\\varsigma\\) \\(\\varphi\\) 字体 粗体 1\\mathbb&#123;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#125; \\[ \\mathbb{ABCDEFGHIJKLMNOPQRSTUVWXYZ} \\] 只有大写拉丁字母才能正常显示，使用小写字母或数字时会得到其他符号。 1\\boldsymbol&#123;\\Alpha \\alpha \\Beta \\beta&#125; \\[ \\boldsymbol{\\Alpha \\alpha \\Beta \\beta} \\] 粗体的希腊字母，大小写均可 1\\mathbf&#123;012,abc,ABC&#125; \\[ \\mathbf{012,abc,ABC} \\] 拉丁字母和数字的粗体，不能用于希腊字母。 哥特体 123\\mathfrak&#123;abcdefghijklmnopqrstuvwxyz&#125;\\mathfrak&#123;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#125;\\marhfrak&#123;1234567890&#125; \\[ \\mathfrak{abcdefghijklmnopqrstuvwxyz}\\\\ \\mathfrak{ABCDEFGHIJKLMNOPQRSTUVWXYZ}\\\\ \\mathfrak{1234567890} \\] 手写体 1\\mathcal&#123;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#125; \\[ \\mathcal{ABCDEFGHIJKLMNOPQRSTUVWXYZ} \\] 注意：手写字体仅对大写拉丁字母有效。 六、括号 其他 加帽子^ \\hat 或者\\widehat \\(\\hat A\\) 上划线 \\overline $ A$ 下划线\\undweline \\(\\underline{A}\\) 加波浪线 \\widetilde \\(\\widetilde A\\) 加点 \\dot{} \\(\\dot A\\) 加两个点 \\ddot \\(\\ddot A\\) 加箭头 \\vec \\(\\vec A\\)","categories":[{"name":"knowledge","slug":"knowledge","permalink":"http://maneback.github.io/categories/knowledge/"}],"tags":[{"name":"latex","slug":"latex","permalink":"http://maneback.github.io/tags/latex/"}]},{"title":"python内置函数","slug":"python-functions","date":"2020-02-10T11:20:25.000Z","updated":"2021-01-06T13:26:44.860Z","comments":true,"path":"2020/python-functions/","link":"","permalink":"http://maneback.github.io/2020/python-functions/","excerpt":"介绍一些python内置函数的用法 emumerate / join / zip","text":"介绍一些python内置函数的用法 emumerate / join / zip 1. emumerate() 对于一个可迭代/可遍历的对象（如列表、字符串等），可以使用enumerate()同时获得索引值和数值，将得到以下object 1(0, lis[0]), (1, lis[1]), (2, lis[2]) 对于一个列表，既想遍历索引，又想遍历元素时，我们可以这样写： 12345678lis = ['python', 'java', 'cpp', 'html']for index, item in enumerate(lis): print(index, item)####&gt;&gt;&gt;0 python1 java2 cpp3 html enumerrate 还可以接收第二个参数，作为索引的起始值。 12345678lis = ['python', 'java', 'cpp', 'html']for index, item in enumerate(lis, 1): print(index, item)####1 python2 java3 cpp4 html 注意：第二个参数不是修改遍历的起始位置，仍然是遍历所有元素，它只会修改索引的值。 2. join python 的join() 函数可用于将序列中的每个元素，以指定的分隔符连接成一个新的字符串。(很是方便。) PS: 连接符可以是字符串，而不需要是单个字符。 123456sql = ['a', 'b', 'c', 'd']' '.join(sql)'-'.join(sql)','.join(sql)'.'.join(sql) 3. zip zip()函数以可迭代的对象作为参数，将对象中对应位置的元素打包成为一个个元组，再返回有这些元组组成的一个列表。 若各个迭代器的元素的个数不相同，则返回的列表长度与最短的对象相同。 1234567a = [1,2,3]b = [4,5,6]c = [7,8,9]zipped = zip(a, b)# ====&gt;[(1, 4), (2, 5), (3, 6)] 4. 反向迭代 reverse 123l = [1,2,3,4,5,6]for x in reversed(l): print(x) 5. 迭代器 12345678# filter 实现带有筛选功能的迭代器def upper(val): if val&gt;0: return True else: return Falselis = [1,2,3,4,-1,-2,-3,-4,1,2,3,4]g = filter(upper, lis)","categories":[],"tags":[{"name":"python","slug":"python","permalink":"http://maneback.github.io/tags/python/"}]},{"title":"一台电脑设置多个github账户","slug":"2github","date":"2020-02-10T03:23:55.000Z","updated":"2021-01-06T13:26:44.830Z","comments":true,"path":"2020/2github/","link":"","permalink":"http://maneback.github.io/2020/2github/","excerpt":"","text":"0. 前言 不知是否有人像我一样，搞了两个GitHub账号，一个公开使用，另一个用来自己留着偷偷搞事情，要做到两个本地账户和远程账号都完全隔离，没有联系，也不会混淆使用 反正我是这么搞的，自从之前那个GitHub账号被公布出去之后，就自己搞了个新的没人知道的账号来搞一些见不得人的事情。（其实只是喜欢保密一些事情。） 但是，一台电脑怎么假装出两个GitHub账户呢？ 当初的我以为只要把同一个SSH公钥分别添加到两个GitHub账户就万事大吉了，后来发现我太天真了，并不行。 然后就到处找教程，但是都是错误的，而且错误都是一样的，最后终于七拼八凑整成功了。 1. 方法 首先，当然是生成两个ssh秘钥，对应两个身份。 假设你当初已经用ssh-keygen -t rsa -C “youremail@gmail.com”生成了一对秘钥id_rsa和id_rda， 保存在了~/.ssh文件夹内。 然后，你需要再生成一对个人秘钥： 1ssh-keygen -t rsa -C “private_email@gmail.com” 这时，在执行命令的过程中，要在注意修改文件的命名，因为默认仍然是使用id_rsa的文件名，这样就会把之前的秘钥文件覆盖掉。 假设我们生成了一对新的秘钥private 和private.pub。 然后我们编辑~/.ssh/config文件。如果该文件不存在的话，直接创建一个就好。里面的内容如下： 1234567891011# 公共Host github_publicHostname ssh.github.comIdentityFile ~/.ssh/id_rsaport 22#个人Host github_privateHostname ssh.github.comIdentityFile ~/.ssh/privateport 22 网上大部分教程的配置文件中Hostname都是github.com，配置成这样是不能正常SSH访问的。我也不知道大家为什么都那样写，难道之前的就是这样？ 修改完之后，在git bash运行下列命令，检查是否正常： 12ssh -T git@github_publicssh -T git@github_private 如果都能返回以下信息，就说明配置正常 1Hi xxx! You've successfully authenticated, but GitHub does not provide shell access. 同样的方式你就可以配置多个以SSH登录的不同git用户。 当然这种方法也不仅仅限于github的远程仓库。 然后我们还要删除GIT配置的全局用户名和邮件地址，然后在每个项目仓库中按照需求设置不同的user.name和 user.email： 12git config --global --unset user.namegit config --global --unset user.email 然后在添加远程仓库的时候，把github.com 修改成github_public 或者github_private就好了（即上述文件中的HOST选项），如： 12git remote add origin git@github_public:xxx/example.git # 公开内容git remote add origin git@github_private:xxx/example.git # 个人内容 其实，上面的配置信息意思就是，按照不同的Host名称，查找~/.ssh/config文件使用不同的SSH文件连接到GitHub。","categories":[{"name":"技术","slug":"技术","permalink":"http://maneback.github.io/categories/技术/"}],"tags":[{"name":"github","slug":"github","permalink":"http://maneback.github.io/tags/github/"},{"name":"git","slug":"git","permalink":"http://maneback.github.io/tags/git/"}]},{"title":"python3中列表的操作","slug":"python-list","date":"2020-02-09T09:37:13.000Z","updated":"2021-01-06T13:26:44.860Z","comments":true,"path":"2020/python-list/","link":"","permalink":"http://maneback.github.io/2020/python-list/","excerpt":"","text":"列表(list)是python中的一个基础的数据结构。 创建列表，访问、修改列表中的值 12345list0 = []list1 = [1,2,3,'a','b','c']# 通过index索引值访问列表中的值，更新列表中的值print(list1[0])list1[0] = 'a' +可以用来组合连接列表，*用来重复列表元素，如 1234567len(list1) # result =6[1,2,3] + [4,5,6] # result = [1,2,3,4,5,6]['aa'] * 3 # result = ['aa','aa','aa']3 in [1,2,3] # False'3' in [1,2,3] # Falsefor x in [1,2,3]: print(x) 通过index截取 12345# 包括元素list[l]，不包括元素list[r]list[l:]list[:r] list[-a]list[l:r] 有用的函数方法 1234567891011len(list) #长度max(list) #最大值min(list) #最小值list.append(pp) #在末尾添加新的元素list.count(pp) #计算pp在列表中出现的次数list.index(pp) #返回pp值第一个匹配项的索引位置list.insert(index, pp) # 将元素pp插入到index位置list.pop() #移除列表中的最后一个元素，并返回该元素的值list.remove(pp) #移除列表中pp的第一个匹配项list.reverse() # 反向列表元素list.sort(key=None, reverse=False) # 对列表进行排序","categories":[{"name":"knowledge","slug":"knowledge","permalink":"http://maneback.github.io/categories/knowledge/"}],"tags":[{"name":"python","slug":"python","permalink":"http://maneback.github.io/tags/python/"}]},{"title":"影评 - 小丑joker","slug":"joker","date":"2019-12-30T11:02:42.000Z","updated":"2021-01-06T13:26:44.851Z","comments":true,"path":"2019/joker/","link":"","permalink":"http://maneback.github.io/2019/joker/","excerpt":"Joker 不正常的到底是我还是这个世界。","text":"Joker 不正常的到底是我还是这个世界。 在一个心情很糟糕，内心阴暗的晚上看完了Joker这部电影，甚至，有那么一刻我多想变成一个像小丑一样的人，去把这个世界搞乱。 然而一想也并没用，搞乱这整个世界，也不能使我自己的生活变好。 心情不好的时候，看电影好像并没有使自己的心情变好，反而会更差，就像是你一直在想，为什么不能是我去f**k这个世界，即使是做一个失败者，也是一个平凡的失败者，也没有人会提起，更不会有人记住，只是做一个平凡的人，淹没在这茫茫的世界之中。我为什么就不能向着这整个世界发泄自己的怒火与怨气啊！找不到出口就只能在自己的想法里乱窜。 为什么自己的科研这么不顺利，为什么自己的研究生生活过得这么辛苦，这么苦，完全看不到科研的乐趣和希望。我的2019过得好惨惨啊，学习，科研，生活，感情，几乎没有一件事情是顺顺利利的。我感觉我一直非常悲观，非常消极，非常焦虑。 其实我感觉曾经的我也是挺有拼劲的，是什么时候开始就让自己懈怠了呢？不用拼搏了吗？人生成功了吗？不，还完全没有。以为考上大学就是成功了？不，还完全没有。现在的你，还什么也不是。 我仿佛已经在安逸的生活中慢慢懈怠，其实这是很可怕的一件事，然而更可怕的一件事就是自己虽然意识到了这个问题，但是却完全没有能力把自己从懈怠中揪出来。只是日复一日地一边愧疚一边继续懈怠着。 但是现在的生活真的好苦好想哭啊。","categories":[{"name":"movie-review","slug":"movie-review","permalink":"http://maneback.github.io/categories/movie-review/"}],"tags":[]},{"title":"记一个非常消沉的周末","slug":"weekend","date":"2019-12-29T14:00:13.000Z","updated":"2021-01-06T13:26:44.871Z","comments":true,"path":"2019/weekend/","link":"","permalink":"http://maneback.github.io/2019/weekend/","excerpt":"","text":"记一个非常消沉的周末 一、 周五开组会被老师骂了。这时候我还有大作业，考试，英语展示 讲到一半就被叫停了，说我做的不行，说我浪费大家的时间。说我的PPT就做了十分钟就能做完了。 可是我一句都没有反驳。 后来我发现自己的PPT做得比较差劲，但是再怎么样，也不可能说是花十分钟做完PPT就敢上来讲了啊，那么看论文花费的时间就不算是准备了吗，组织语言花费的时间就不算是准备了吗。我明明花了一整个上午，甚至放弃了去考试补考的机会，就得来这种评价。是，我确实做得差劲，但是不能对我付出的时间努力做出错误的估计和贬低的评价。 是啊，谁会看你背后的努力和准备呢，只是最后show这一下能不能成功，不成功，说多少都没用，做多少努力和准备都没用。没人在意的。鲜花和掌声只会留给成功的人。 那个周五晚上到整个周末，真的是我研究生开学以来最难过的几天，没有之一。至于是不是我大学以来最难过的一天，我不太能确定。我不知道是这几天比较难过还是大一时候，纠结表白，表白被拒绝的那一天比较难过。 二、 后来，周末英语考试的时候看到班里的一个妹子还不错。 说实话，其实早就注意到这个人了，大概第一次或者第二次上课的时候。 甚至考试前还想着老师能抽到自己给这一组提问，可没想到竟然反了过来，老师叫了这一组给我们提问，而该组的代表，正是这位LTY同学，我们准备的问题，刚好有一个问题是我的。这算不算是老天给我的天大的缘分。 可我最后还是退缩了，再一次退缩了，一次又一次。如果自己能够再努力一点，是不是就能够再勇敢一点。虽然觉得自己已经有所进步，有所改变，但是还是不能。 三、 今天又去找老师汇报了，明明是他叫我来找他的，我进门他问的第一句话竟然是“啥事啊”。 不过还好没有被骂，担惊受怕了一晚上，压抑了一个周末的消极情绪，终于在汇报完放松了一些。 估计是老师看出来我的精神状态不佳，所以特意开导开导我。他真的是很好一个人，从他对我说的那些话看得出来，他对于我还是抱有很大期望的，是我不够优秀辜负了他。 而且他确实思维很发散，找各种角度各种问题来说明一些事情。 老师说得没错，确实不能做那种只会等别人给安排的才会做的工作，要有主动的思考。要找到科研、工作的乐趣，才有一直继续做下去的动力。 四、 那么我现在变成这样，变得这么懈怠，到底是谁的问题呢？到底是我的问题，还是学校教育的问题。 是我太沉迷于网络上面的垃圾，沉迷于这种低成本，易得却没什么收获的快感？例如微博，知乎，巴拉巴拉吧，浪费了大量的时间精力却没有任何收获。还是大学的教育制度出现了问题，为什么学生不喜欢上课，感觉学不到东西，觉得课上教的东西没有用，更没有培养出关于科学的思维。 到现在还是没有找打科研的正确方法。没有专业的科学素养，前途很是堪忧。 但是为什么还是有人成功，那反过来我们是应该把成功归因为个人还是学校教育呢？ 成功都是相辅相成的，只有失败的人才会被互相甩锅。成功的人只会努力跳到下一个成功的环境中取得更大的成功。而失败的人只能沦落到更失败的环境中继续沉沦。这么一想这是多么可怕的一件事情啊！ 五、 现在的我到底有没有心理问题，焦虑问题，我不确定，我是倾向于有的。因为我已经一个月没有睡好觉，没有好好吃早饭了。早上起不来难道是因为天气冷了，不想起？我觉得应该不会是，是心里有一股懈怠的念头让自己再躺一会，再睡一会。是觉得自己还是很累，不管是精神还是身体。 那么我到底是应该把它归结于心理问题，还是归结于自己太懒了呢？ 人总有人的活法，现在的你不开心，只是因为自己没达到自己想要的样子，没过上自己的想要的生活，但是最根本的原因还是因为自己不够努力。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"自省","slug":"自省","permalink":"http://maneback.github.io/tags/自省/"}]},{"title":"人总是健忘的│2019年11月纪","slug":"2019-11-01","date":"2019-11-01T14:23:13.000Z","updated":"2019-12-21T14:24:48.000Z","comments":true,"path":"2019/2019-11-01/","link":"","permalink":"http://maneback.github.io/2019/2019-11-01/","excerpt":"其实想想又已经很久没有动笔写点东西了，一天天也不知道在忙什么。","text":"其实想想又已经很久没有动笔写点东西了，一天天也不知道在忙什么。 时间一点一点，已经走到了2019年的倒数第二个月，想想这一年过得也真是飞速。上半年在做毕设，在虚度；下半年进了实验室，在迷茫。真正用来好好学习的时间有多少。 今年双十一（算是吧）入了个大法的耳机，入了个飞利浦的电动牙刷。说实话，花这么多钱买个耳机真的是心疼，说没犹豫那是假的。现在又甚至想买iPhone11。钱我是有的，虽然不多，但是还能买得起。再加上今年买的主机，今年真的是花钱最多的一年。但是钱到底该不该这么花，如果当初没有买主机的话，现在应该会是毫不犹豫地换了手机了，主机放在那里大部分时间都是在吃灰，只有一部分时间用来看电影，看视频，更小一部分时间用来打一会游戏，基本不会用来我以为它能实现的用途——学习。 实际上，我们在这个世界上会一直遇到各种诱惑和无穷无尽的欲望。如减肥时候看到淘宝上各种诱人好吃的零食，如现在想买新手机，如该学习的时候浪费时间划水。这些都是与你期望的终极目标相违背的。也许真的在未来，我不会这么纠结于是否用这几千块钱买个手机，又或许我还承担着很多的很大的压力。现在的我，说白了还是没有来自任何方面的经济负担和经济压力，我只是在用我的额外收入来实现自己额外的欲望。 换个角度想，那我到时候会后悔没有买这个手机吗？它对于未来的我有什么实际的帮助吗？我想是没有的。所以现在想换手机只是现在的我管不住自己的欲望了，就像自己一次次地放任自己随心所欲一样。其实我早就失去了对自己的掌控力。从不断地逛淘宝刷微博就可以看出，这些基本上对我毫无用处的行为都占用了我大量的时间。所以说，要想成功，要想出人头地是很难的，必须耐得住寂寞，正因为做到的人很少，所以成功的人才很少。在变得牛逼之前要学会隐忍。 我应该树立什么样的消费观，我真的需要一个新手机吗？我为什么想要买它，是因为我需要它，还是因为我想要用它来象征什么。其实，第一的原因，还是觉得它好，而且以自己现在的能力能够够得到，这个“好”那就可以包括多方面的好了，排到最后才是我需要一个新手机这个原因，毕竟当初那个破vivo手机也能坚持用两年，这么强的小米6用两年还很能挺，但是我现在还有必要将一个手机用到不能用吗？现在还会有人把手机用到不能用吗？ 所以人生在每一个纠结的时候应该如何选择，如何能够忍住自己的欲望，去追求更长远的目标，而不是为了眼前一时的享受。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"人总是健忘的","slug":"人总是健忘的","permalink":"http://maneback.github.io/tags/人总是健忘的/"}]},{"title":"碎碎念|近来的一股脑思考","slug":"qinsuyu","date":"2019-10-25T01:01:47.000Z","updated":"2019-10-25T01:20:46.000Z","comments":true,"path":"2019/qinsuyu/","link":"","permalink":"http://maneback.github.io/2019/qinsuyu/","excerpt":"我并没有对别人的倾诉欲或表达欲","text":"我并没有对别人的倾诉欲或表达欲，只会对自己。特别是负面情绪，我所抱怨的几乎百分之七十的问题，都不是很关键的问题。很多时候，我都会把好长的一段话反反复复在脑海里对自己默念好久，尤其是安静的时候，比如现在，半夜，躺在床上，睡不着的状态下，就像过去一周的每一个晚上一样。然后思绪就会越飘越远，无边无际。这样有用吗？我不知道。 我的真实感受，尤其是负面情绪，大概只会跟别人说百分之三十。越是表面看起来很熟，但是关系不咋好的人，越是不想说，想要封闭起来，想要逃离；对于不太熟的人，可能会没有“形象”的问题会有所保留地多说一点？为什么？因为太好面子？太注重形象？但是其实并没有人把你当回事。在自我幻想中渴望被关注，被发现，被重视，到头了只是一场空。 虽然我也注意到了过于要面子这个问题，虽然我也意识到了没有人关注我的这个事实，并且在尝试着做一些不要脸的改变，但是人的性格的惯性还是有的，还是十分大的。 能真正完全了解我的人有多少？愿意了解我的人又有几个？我自己又真正完全了解我的所有想法吗？别人看到的我是什么样的我？是不是真正的我？哪个我才是真正的我？别人对我的看法对我来说重不重要？我会不会对一个人完全敞开心扉？我是不是有心理问题？ 虽然我是个计算机的研究生，将来大概率也会工作在互联网行业。但是我到现在仍然不喜欢跟别人隔着屏幕在网上聊天。总感觉少了点什么。 除了有什么事情要联系，要通知，要商量，很少会跟别人在网上闲聊。我数了一下，目前能够做到想聊就聊，想停就停，在任何地方戛然而止都不会觉得突兀和尴尬的，只有六个人，只有这六个人。其他的都安安静静躺在列表里，等待着一个时机去联络，等不到的话就等不到了。只是多数情况下，我会选择做那个在该停止的地方不再回复的“坏人”，以让对方心里舒服一点。所以在别人看了，我是让他们感到解脱呢，还是疏远呢，这是个问题。 而且我还是个不会跟别人平等合作的人。或者是我主导，或者是我被主导。而我即不擅长主导别人，又不喜欢被别人安排。我又不喜欢主动。 我是不是太过脆弱？太过敏感？是不是又太过于健忘和没心没肺？曾经太过一帆风顺，没有经历过太大的挫折。总是在抉择的时候选择了那个简单的道路去逃避痛苦，看似是解决了问题，实则百分之四十是逃避过去的，百分之四十是因为选择的路太过简单。可是，痛苦和困难都是会一点点积累的，而你却没有使自己升级变得更强大。 在人生中，中考、高考、保研、读研、就业是不是同等重要。在每个人生的岔路口的选择是不是都会造就完全不同的人生。我只是一个普普通通的普通人，没有任何奇迹，甚至是幸运会发生在我身上。我是不是曾经做出了错误的选择？一次错误的选择就会带来错误的人生吗？会有弥补的机会吗？人生是二元决定论的吗？看似人生会被一件事情完全决定，其实是因为你没有变好的可能，也不愿意去深入考虑变差的概率，而变差是真实存在的。 我对于Z是什么？是我想太多还是怎样？我是个渣男吗？我并没有想法。第一眼的感觉，没有。没有勇气，我总会特意抗拒。却又不敢明示怎样，又想给她留一丝可能，然而没人最先开始跨过这个界限，就没人开始。 我一直十分不倾向于在实验室内部找另一半。主要并不是在意别人的眼光和看法会怎样。毕竟实验室内部已经有了一对了，还是挺让人羡慕的一对，再一对又会怎样。而那些曾经认识的，高中同学，又是怎样最终走到一起的？还是要有人勇敢地跨出从朋友到恋人的关键一步。不能犹豫，不能胆怯，不能矫情。《1988》里面不是有很好的例子吗？只要爱情伟大，是没有什么人，什么事情能挡住的。而且身边人，会有更多的机会接触且产生交集。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"http://maneback.github.io/categories/碎碎念/"}],"tags":[{"name":"letter","slug":"letter","permalink":"http://maneback.github.io/tags/letter/"}]},{"title":"车展感悟","slug":"chezhan1910","date":"2019-10-20T07:39:40.000Z","updated":"2021-01-06T13:26:44.839Z","comments":true,"path":"2019/chezhan1910/","link":"","permalink":"http://maneback.github.io/2019/chezhan1910/","excerpt":"","text":"感悟了好久，今天终于闲下心来有时间把感悟这篇文章写完。 在网上看半天图片、看再多视频、看测评，都不如去现场实际感受一下。感受车漆的光感，感受内饰的细腻，感受座椅的包裹与舒适。当你坐在车里，把着方向盘，手指划过内饰，按动着一个又一个按钮，这个满足感，是你看再多的图片和视频都给不了你的。能体会的就去体会一下。 我还是想要买豪华车。曾经，我也以为我会接受高尔夫，接受卡罗拉，接受一个普通品牌，但是当你体验过所谓的豪华品牌BBA的内饰的细腻与质感，你就会觉得这豪华品牌，真的不是白叫的。豪华品牌，就算是不懂车的人，也能看出这个车很高级。从设计，用料，做工，质感，都给你一种你说不清道不明的高级感和舒适感。当然，你说这个很虚幻的高级感，很虚幻的豪华感，是不是真的值这个高溢价，是不是真的能让人买单，这一点上见仁见智。毕竟A4与迈腾两者之间的选择是一个永恒的问题。至少我觉得，在我尚还年轻，还能玩耍的年龄，买一辆A3或者A级这种豪华品牌入门级还是可以的。 内饰风格。说实话，我还是喜欢物理按键给我的感觉。在我看来，车先是一个机械产品，才是一个电子产品。在自动驾驶完全普及之前，像特斯拉，奥迪这种全触屏内饰操作我是很难接受的，这一点也是目前我对新一代A6 Avant唯一的迟疑的地方（前提是我买得起的话），我曾经最喜欢的MMI旋钮和飞机档把，前者在新的设计中已经被砍掉了。无论是滚轮，按钮还是旋钮，都给你一种很实际，很实在的反馈。那么问题来了，你既然选择了使用触摸屏，为什么非得在触摸屏上模拟实体按钮的按键反馈质感呢？这难道不是多此一举了吗。 PS: 10月21日更新：Z同学想让我带他去车展，我该不该答应，该不该拒绝。是我想得太多，还是我假装的过于明显。我是不是一个渣男。","categories":[{"name":"mylove","slug":"mylove","permalink":"http://maneback.github.io/categories/mylove/"}],"tags":[{"name":"车展","slug":"车展","permalink":"http://maneback.github.io/tags/车展/"}]},{"title":"岁月静好","slug":"suiyuejinghao","date":"2019-10-07T13:50:11.000Z","updated":"2021-01-06T13:26:44.861Z","comments":true,"path":"2019/suiyuejinghao/","link":"","permalink":"http://maneback.github.io/2019/suiyuejinghao/","excerpt":"我最向往的生活，该是什么样子的？ 有你，有我，有车，有娃，一条狗，一只猫。","text":"我最向往的生活，该是什么样子的？ 有你，有我，有车，有娃，一条狗，一只猫。 什么是岁月静好？ 今天，重阳节，也是国庆节假期的最后一天。 若说最近发生了什么，压抑已久的爱情萌芽又开始迸发，终于鼓起勇气去试一试，但是却没有得到任何回应，肯定的也好，否定的也罢，都没有。我也不知道我胃疼吃不下饭是不是因为这个原因，但是那天晚上没有睡好觉绝对是因为这个原因。 今天假期结束，我搭我姐夫的车回学校。 车行驶在高速上，我姐在后排抱着孩子，孩子在她怀里睡着了，我姐也睡着了，姐夫在开车，阳光从车的右边照进来，后备箱装满了孩子的各种用品和从老家带来的各种不值钱但是亲情满满的乱七八糟东西。路的一头是一大家，另一头是他们自己的小家。我作为一个旁观者看着这一切，心想：这一个场景真的是太美好了。 我记得我高中时候住校，每次回家都要我妈买一点水果、牛奶带到学校去。后来，上了大学，路程远了很多，回家频率也由两周一次变成了一个月左右一次。每次回去，我妈还会问我，要不要买点苹果带着，要不要买点橘子带着，要不要买点xxx带着，要不要把这箱奶带着……有一段时间我都以”学校有卖的、带着太麻烦了“为理由拒绝了。 然后有一天，我忘记我看到了什么我才明白，这些看着稀松平常的小东西都包含了父母对出门在外的孩子的牵挂啊，从那以后，我妈再问我要不要带什么我都说行，这时候我会看到我妈很高兴地答应我，然后就出门去买了。可能也就是八个苹果，但是里面都是满满的亲情和牵挂啊，也为了让我妈能放心。我们总自以为自己已经足够成熟闯荡社会了，可是父母却一直在家里牵挂着自己的孩子。 只有亲情才是最无私的，只有母爱才是最伟大的。小时候经常骑着我打，把我脸挠破的大姐现在已经有了自己的孩子当妈妈了。还记得去年她结婚那天，结婚典礼时候我一直躲在角落里背对着人双手捂着脸地哭，止不住地哭。丢人吗？不丢人，可笑的是我从来没觉得自己会在这一天哭，亲情总能在不经意间深深地戳你一下。 一直以来，我都十分向往老婆孩子热炕头的生活。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"爱情","slug":"爱情","permalink":"http://maneback.github.io/tags/爱情/"},{"name":"人生","slug":"人生","permalink":"http://maneback.github.io/tags/人生/"}]},{"title":"人总是健忘的|2019年10月纪","slug":"2019-10-01","date":"2019-10-01T13:36:18.000Z","updated":"2019-10-01T14:39:42.000Z","comments":true,"path":"2019/2019-10-01/","link":"","permalink":"http://maneback.github.io/2019/2019-10-01/","excerpt":"首先，先祝祖国母亲生日快乐。","text":"首先，先祝祖国母亲生日快乐。 研究生开学已经一个多月了。每当以类似这样一句话开头，都开始讨厌自己。是啊，一个多月了，该怎么办。下定的决心越坚定，放弃遗忘得也就越快。整个九月，也都没有写过一篇文章，感觉在宿舍里写文章还要背着舍友来写。 我是一个及其重视个人隐私的人，写什么说什么做什么都不想让人知道，但是舍友又喜欢站在我背后看我，就，搞得我很毛骨悚然。我不是不喜欢他这个人，我只是单纯地不喜欢这样一种行为，这样一种让人坐立难安，不知道干什么的状态。特别是这个博客网站，更是不能让人知道了。 今天国庆上午看了阅兵，真的是振奋人心，作为一个中国人的自豪感。沉浸在国家富强的荣誉感中，沉浸在节日的欢乐气氛中举国欢庆。也是真的敬仰那些革命先人们，能够将国家和民族的利益放在自身利益之前，舍身忘我，他们得到怎样的待遇，得到怎样的荣誉都是应得的。反观自己，已经到了应该成家立业，承担责任的年龄还是一事无成，想着要找简单的方法逃避。我说过我要做一个乐观的人，但是自己的努力却始终无法让自己满意。 有时候也在想，自己将来某一天能不能也站在天安门的城楼上去看阅兵仪式。全中国十三亿人也就那么几百人能够受邀站到天安门上面看，自己能不能成为那样的人呢？ 下午又再一次自己一个人去看了车站，感觉还是蛮失望的，没有看到几个那种值得一看，值得细细品味的车，大部分都是走量的常见车。那种坐在车里，抚摸着方向盘，摸着车里的按钮，被座椅包裹着，这些个给你带来的快感与享受，跟你在网上看图片的感觉是完完全全不一样的，而且我也已经爱上了这个感觉。 第二点是关于普通品牌和豪华品牌，之前我也感觉我可能也会选择普通品牌，大众高尔夫，马自达3，卡罗拉，等等这些。但是，对比了豪华品牌之后，我可能还是会选择一个BBA豪华品牌的车，即使是入门的A级、A3、Q2等。为什么？因为豪华品牌在做工、用料、设计、细节上面给你带来的舒适度、满意度和高级感都是普通品牌的车不能带给你的，它就是能给你一种你说不清道不明的高级感与极致，让你感到舒服。豪华有被叫做豪华的原因，贵也有它贵的理由。当然这不是车的全部，但是这却是你坐进去一辆车它能带给你的第一直接感受。关于普通品牌与豪华品牌的选择从来都是一个讨论的话题。我想在满足我的用车需求的前提下，是可以选择一个让自己喜欢的车的。 第三点谈一谈关于按键的感觉。我从来没有意识到我会这么喜欢机械按键和滚轮带给我的感觉，可能在我的认知里，车先是一个机械产品，才是一个电子产品。我现在就很难接受像奥迪新一代这种完全无机械按键的设计语言，即使我很喜欢奥迪。(我最喜欢的MMI旋钮和飞机档把啊，我还记得去年这时候对这两个爱不释手的感觉。)可是新的奥迪已经把机械按钮都取消了，虽然到所有车全部取消还得有几年，但是我的终极梦想Avant已经是了啊，已经没有MMI了啊。 车这种东西真的是越看越喜欢啊，也越想为之奋斗。 回来之后还恰巧碰到了ZYW和LXX要出去玩，就跟着一起去了，确实啊，自己还是太乖了一点，而且貌似从高二开始就变得越来越乖，越来越孤单的去过一生，这样怎么能行。就像相声说的一样，太俗或太雅都不行，人也一样。完全没有优点、和完全和完美高大上的两个极端都是不行的。该严肃的时候严肃，该活跃的时候活跃，该套路的时候套路。人都是有多个不同的性格的，不要总拿一个标签来标榜自己。每当想到自己沉闷的性格的时候，都会想到大一的时候的自己并不是这样的啊，都是大二大三两年过得很压抑，而且现在思考问题也很轴，很慢，思路越来越封闭。看来我真的得好好注意一下改变一下了。 机会不是时时刻刻都有的，也不是谁都能抓住的。一样的机会摆在不一样的人面前，每个人都会取得不一样的成果。加油吧。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"人总是健忘的","slug":"人总是健忘的","permalink":"http://maneback.github.io/tags/人总是健忘的/"}]},{"title":"人总是健忘的|2019年09月纪","slug":"2019-09-01","date":"2019-09-04T11:17:08.000Z","updated":"2019-09-04T11:48:56.000Z","comments":true,"path":"2019/2019-09-01/","link":"","permalink":"http://maneback.github.io/2019/2019-09-01/","excerpt":"2019年09月，我成为了一名研究生，一名真正意义上的研究生。 作为研究生，像成年人一样思考。","text":"2019年09月，我成为了一名研究生，一名真正意义上的研究生。 作为研究生，像成年人一样思考。 暑假留在这里学到了什么，取得了什么进步，貌似没有。别再自欺欺人，欺骗自己了。认清现实吧。 曾经以为一切都已经确定，人生不会再有什么变化，但是其实，可能发生的不确定的事情都还很多，只是看不到变好的可能，但是谁说不会变坏？ 这几天才确定了导师，想想自己当初的两次选择，甚至是三次选择会不会后悔。说实话，会，真的会。看着好多本科学校不如自己的人都选到了厉害的导师，甚至是不出名的学校的学生也都选到了很厉害的导师，而我呢，占据着非常好的资源，自我感觉良好很多年最后却跟了一个不怎么强的导师 这世界最公平的地方就是它就应该是不公平的。绝对的完全的公平就是个笑话，不是吗？有多大能力就占多大好处，天经地义。曾经我认为这世界就应该是这样，因此对于厉害的人常心怀敬仰，虽然自己没有能力做到成为一个厉害的人。但是后来发现这世界不是想我想象的那样运转的。 作为研究生，要学会像成年人一样思考，一样做事。没有人会再耐心地教你，指导你，告诉你该做什么，不该做什么。甚至他们跟你说的话都要认真思考有没有深层含义，是非常严肃地说的还是就只是随口一说。最美好的大学本科四年已经过去了，现在才明白别人常说的，你们还年轻，还有很多可能。那时候根本不觉得自己年轻，不觉得有多少可能，可是，只有到了过了这个阶段，当你真的面对事情力不从心，无能为力的时候，才会恍然大悟。然而时间永远都是单向流动的。我们已经不可能再回到过去。 我们一边抱怨着这世界这不合理，那不合理，但是身处其中遗憾地发现我们一个小小个人的力量和声音还是太渺小了，根本翻不起波澜，更无力改变。只得默默被它同化，被它湮没，或者选择退出。而退出的人，只会被其他人嘲笑为懦夫，虽然他们也曾想着抗争，但是抗争着抗争着就放弃了。这世界就是有它的运行规则，那是被无数的人踩出来的路。 研究生了，我想脱个单，找个女朋友。也反思了一下自己为什么没有女朋友。太怂，太被动，太腼腆。 我说过，我要做个乐观的人。 以后的路，就要靠自己了。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"人总是健忘的","slug":"人总是健忘的","permalink":"http://maneback.github.io/tags/人总是健忘的/"}]},{"title":"影评-哪吒之魔童降世","slug":"nezha","date":"2019-08-04T14:27:15.000Z","updated":"2019-08-05T07:18:48.000Z","comments":true,"path":"2019/nezha/","link":"","permalink":"http://maneback.github.io/2019/nezha/","excerpt":"","text":"今天去看了口碑与票房非常好的国产动画电影--《哪吒之魔童降世》。我想如果是我自己出去玩的话，去看这部电影的动力会非常小吧，而跟了其他的人一起去就会想着追一追热点。不过，就结果来看，还好是追了这个热点，没用令我失望。 先不说剧情的事情，说一点题外话，最最激动人心的事情不单单是这部电影，而是最后的彩蛋。而且一下就爆出两个：一是哪吒的续集，另一个是姜子牙的故事。这妥妥的就是封神榜动画电影宇宙的节奏啊。而且第一步走得非常稳。哪吒这个人物形象应该有很大的知名度，都少人都能哼唱那一首“是他是他就是他，我们的朋友小哪吒”。而且对比于漫威电影宇宙的开山之作《钢铁侠》，这个动画的形式、画风、以及剧情真的是老少皆宜，在电影院也看到了好多家长带着小孩子来看。想象一下如今的小学生看着“封神电影宇宙”长大会是什么样子。 下面开始来说一下剧情。最最开始，我也是实在不能接受这个“太乙真人”和“哪吒”的人物形象，有点反主观。开头又加了过多的搞笑元素，而且人物行为作为太乙真人真的不应该发生在他身上。当时粗略地想一下以为是为了让这部电影更有趣，但是我却认为很低级，加入了很多“故事发生时不该有的搞笑元素”。但是这又有什么不好的呢，看电影就是为了娱乐，加上一点这些又不是主要的关注点。没想到我现在就已经开始认为不符合自己的观点和经验的事情都是错的了。 说回剧情，当哪吒在画里面，他妈（怎么像是骂人）对他说的那些话，以及他回忆的片段才理解他的痛苦与内心。而后又理解了他为什么和敖丙踢完毽子会哭，又不承认自己会哭；为什么他的父母告诉他生日宴的时候他无动于衷，而父母离开之后自己又在那里很开心。他为什么不在父母面前直接表现出来？因为是没人爱他的，人们都害怕他，讨厌他。 只有不懂事的小孩子才是没有主观误解的，每一个大人都有。村民们都认为是哪吒抢走了那个孩子，却不想想合理不合理，看到小孩子毫发无伤，甚至在说着刚刚发生的事情，但是小孩子的声音实在是太小了，大人又怎么会认真去听呢。 想一下哪吒，从小开始，就被关在家中，他也不知道为什么大家都害怕他，都讨厌他，甚至是叫他妖怪，他也无力去辩驳。既然你们认为我是妖怪，我就成为妖怪给你们看咯。反正你们也不会听我解释，你们也不会给我机会证明。而且他的一系列举动都更增加了村民对他的害怕，然而这一切并不是因为他内心是恶的，而是因为在他面对这种偏见时，没有人教他去如何面对这些非议，如何去控制和使用自己的能力。他没有意识到自己做错了什么，但是却是一再被人们怨恨。 好多时间都会随着时间消逝，但是误解和偏见不会，至少说很难。当我们选择带着自己的主见去看某件事的时候，那么他早就做错了。 还好最终他终于醒悟了，事是证明他的内心并不邪恶，甚至一点都不。他那时摘下乾坤圈单纯是为了报复，因为愤怒。有的人顺着偏见越走越远了，有的人却说出了“我命由我不由天”，大胆反抗。","categories":[{"name":"movie-review","slug":"movie-review","permalink":"http://maneback.github.io/categories/movie-review/"}],"tags":[]},{"title":"神盾局特工6观后感","slug":"shield6","date":"2019-08-03T15:32:18.000Z","updated":"2019-08-04T14:25:40.000Z","comments":true,"path":"2019/shield6/","link":"","permalink":"http://maneback.github.io/2019/shield6/","excerpt":"","text":"虽然标题为神盾局特工6观后感，但是内容并不局限于第六季，而是从头贯穿到尾。 四年前，高考结束，开始刷神盾局前两季。四年后，本科毕业，第六季播放结束，最终季拍摄完成。英雄终将谢幕，我们终将说出再见。 这部剧真的是贯穿了大学四年，一直追到了现在。可以的是每一季结尾神盾局都没有逃出基地被毁/入侵 的结局。本人最喜欢的是第四季，最不喜欢的是第五季。可能是第五季达到了我理解不了不了的高度。然而早就脱离了与漫威电影的联动，如何使这部剧避免落入普通特工电影的俗套。更加发达的科技，但是又不那么离谱，说得过去、外星人入侵等等，都拔高了这部剧的高度。 向着即将终结的结局，这个第六季真的是贯穿了前几季的诸多线索。但是话说，那块巨石不是九头蛇为了把他们的领袖救回来的传送门吗，怎么又成了另外一个外星人的工具了。那个我都忘记了在第五季中做过了什么的小石子人物，竟然还会再一次出现，这线索真的是棒呆了。每次出现这样的场景都会惊叹于编剧的细腻想法和思考。 话说之前定的第五季是最终季，以寇森之死为结局。然而又续了两季，那么该如何把主角复活救回来。再次看到穿着西装的寇森，仿佛又回到了第一季，除了发际线。想想后面几季神盾局混得多么惨，寇森身为局长都变得胡子拉碴那么沧桑了。明明是在做着拯救世界的事情，却没有一点荣耀与嘉奖。 说说第六季 ，感觉的有一点就是前期剧情进展太过缓慢，但是后期结尾两集剧情又太过仓促。铺垫了那么久的大boss，被肉体压制了那么久可以理解，就理解为什么什么量子效应吧。但是却又死得那么突然，好像除了打不死，搏斗很厉害，也没有什么作为外星人特殊的地方，被那一把剑克得那么厉害。然而话说巨石是到处都有的吗，Izel为啥要去长生人星球搞破坏。而且就跟第四季结尾一样，为了为下一季的剧情挖坑，非常突然而又强硬的推进新的线索与剧情，而不考虑。 脑洞最大的一处剧情就是Deke想到了克制Izel附体的方法，而且是用科学的方法解释了看起来略为玄幻的能力。从最开始开始，Fitz-Simmons作为科学家都一直用科学在解决超能力的事情，所以说这个世界还是建立在科学 的基础上的。即使如知乎所说的，这个世界其实是某个文明发达到某种程度之后按照自身创造出来的文明--就像现在人类开始研究自身的奥秘，研究人工智能--，但是这个虚拟的世界也是有其科学根基的存在的。就像天际线里面的人一样，他们也有着自己完整的世界，也会有工作，也会上学，某种意义上就像是简化的人类，那么他们知不知道自己是虚拟出来的呢？当游戏推出的时候，他们会是处于什么状态的呢，或者说是他们能不能感受到这个间隙呢。“时间”在其中以什么意义存在。如果游戏进展的时间足够久，他们中的科学家会不会发现什么奥秘。 可能“造物主”会吃惊于他创造出来的人物竟然会有这种想法，但是其实谁又会关注到我呢。","categories":[{"name":"movie-review","slug":"movie-review","permalink":"http://maneback.github.io/categories/movie-review/"}],"tags":[]},{"title":"人总是健忘的│2019年08月纪","slug":"2019-08-01","date":"2019-08-01T13:37:29.000Z","updated":"2019-08-03T14:57:20.000Z","comments":true,"path":"2019/2019-08-01/","link":"","permalink":"http://maneback.github.io/2019/2019-08-01/","excerpt":"","text":"不知是什么原因，这一次又来得如此缓慢而推迟。可能是因为这个七月写得太多，想法枯竭；抑或单纯是因为自己的懒惰。 不知识什么原因，人们到现在还是愿意去相信，每年的第一天，每个学期的第一天，每个月的第一天，甚至每周的第一天，都会是一个新的自己。还会给自己立下一个又一个flag。日子是新的，但是你不是。你还是像原来那样。 这个七月，我毕业了。 关于毕业也写了好多。现在总结的话，就是，当初觉得无所谓的人，现在一想，可能再也见不到了，也会去想念；但是又很难开口去问一句“在吗”。不知道怎么开始，不知道怎么持续，不知道怎么结束。 以及，最大的遗憾，非常想念的人，非常遗憾的事。 虽然我也想每天聊天，但是实在真的是没有什么可以一聊聊一天的内容，虽然我们都知道。但是其实我更害怕这种低质量的聊天会一点点消磨掉彼此之间的期待。 想到这四年都从来没有送过她一份礼物，也好像没有以让她喜欢我为目的去做什么事情。想为她准备一份礼物，以毕业为借口也好，以即将到来的生日/七夕为借口也好，以下一次见面也好，总要送出去一份。但是又不知道送个啥，在我心目中仿佛对于她会喜欢什么，仿佛没有什么概念，感觉不像那些人似的对于喜欢什么表现得那么明显。又感觉在我心目中没有什么礼物能配上她的形象。怎么办啊。 这个七月，是滑水的七月。现在感觉总是没有动力去支撑自己去努力，也没有什么新鲜感去支撑自己去奋斗。总是在闲下来的时候，想着，我要为了某一件事情努力；但是一到了该学习的时候，就忘记了这码事。一直以来都是这样。 这个七月，组装了一台比较好的台式机。其实它只是工具，还是不知道用它来做什么。好像用起来与笔记本+显示器的组合没有太大的差别。还是以玩天际线为开始。后来装了Adobe一系列软件，期待着自己能学一学，扩展一下技能。又希望自己用它来做一些有趣的事情、黑客的事情。工具有了，要真正用好，发挥作用哇。 再有一个月就开学，开始研究生阶段了。回顾自从保研接近一年以来，对于研究生阶段的学习貌似没有太大的长进，没有太多的认识。出于对未来的未知。 我爸跟我说了我们村另一个人也和我考上了同一所大学(今年我本科都毕业了。)一直问我认不认识。其实我也不认识他，我对这件事情，真的没什么兴趣。 我是一个既被动，又慢热的人。现在已经很难去满怀热情地去结交新的人，都是小心翼翼慢慢地来。我仿佛已经习惯了这种孤独的生活，这种孤独的自由。除了极少数一些我真心愿意为他们付出的人。 今天自己去吃饭的时候碰到学姐，她问我为啥自己去，不跟他们一起。其实大多数时候我感觉这样挺好的，不用商量着去哪，不用商量着吃啥，吃的快的慢的也不用等了。没钱的时候哪里便宜去哪吃，想改善伙食的话就去吃好一点的，或者叫上一两个人一起去得了。 我仿佛很难再对什么事情提起兴趣，也很难再消耗这么多的时间精力去讨好一个人。我们浪费了四年的时间，最后也没走到一起，而你甚至不愿意再去回顾，去留恋。所以，浪费就浪费了吧，人总是会面对现实所低头。 六月七月落了两次，而且应该是比较重要的两次。唉。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"人总是健忘的","slug":"人总是健忘的","permalink":"http://maneback.github.io/tags/人总是健忘的/"}]},{"title":"碎碎念|写给自己的一封信","slug":"lettertome","date":"2019-07-17T13:25:31.000Z","updated":"2021-01-06T13:26:44.852Z","comments":true,"path":"2019/lettertome/","link":"","permalink":"http://maneback.github.io/2019/lettertome/","excerpt":"","text":"致自己： 一 本来今晚是想着撕下一张纸练字的，但是打开这个本子有不经意地翻开了，随便看了几眼。便有了一股写一些东西的冲动，估计80%的人的留言都提到了一个人：小内——李某人。这个人是谁，这个称呼由何而来，不是那么重要。 知道现在，我还是不敢一个人，或是与别人分享这段感情经历，目前想分享、想回顾的人估计一个人数的过来。TB、YX、QZY、WJY、LJ以及之后自己的另一半，没有了，因为我感觉大多数人都是抱着一种看热闹的心态去听故事，他们既不那么关心，更是没有经历过。 其实想想那是怎么开始的，怎么就产生了好感，那仿佛是很短时间内萌芽，出现、生长、直至最终爆发。也或许只是我第一次因为阴差阳错给予一个人全方位的关注，那么这到底算不算爱？至少在班里还能算作是让大家羡慕的模范情侣吧，得到了诸多的赞美羡慕与祝福。我也以为我们能够一直走下去，以为人生可以简单到一眼望到尽头，什么都不会变，什么也都不会失去。 但是再想想它是怎么结束的，它就那样结束了，同样悄无声息、没有任何征兆地在很短时间内结束了。或许是我的新鲜感没有了，或许分班了没有机会朝夕相处了，又或者是我就是个渣男。我还记得当时的场景，在一楼的楼道里，我对于她的任何举动都没有任何反应，没有任何表示，就是这么绝情的分开了，从此之后就再也没有了联系。 也许之后的一次又一次的表白失败就是对我的惩罚。好感，是需要时间、精力培养的、表白的时候我说的是什么？我说的是我会等，没有任何表示的等。拜托。从来没有以对方喜欢上自己、以增进好感为目的去做一些什么事情，去做什么努力。 好像不管做什么，都喜欢拖延、等。你以为自己的美丽很大吗？大家都争着抢着来找你，你以为你会吸引所有人的注意力吗？并不能。 二 回头再看看那些留言，虽然大多数都没有兑现，甚至是进入了同一所大学的兄弟都没有兑现。但是这不能怪谁，至少那时候，我们提笔写下承诺的时候，我们都是真心的，只是事实没有朝着我们希望的方向发展。我们逐渐在各自的道路上不断遇到新的人，逐渐地走散了。不得不承认，这么多年过去了，我们都变得不一样了，或许多年后重聚，只能再干巴巴地一遍遍从记忆深处翻出泛黄的历史，尽量去避免尴尬。因为我们没有当下，可能也没有未来可聊，只能将过去的事情翻来覆去。 我们都有自己的许多糟事要忙，朋友一年见不了几次面，说不了几句话，会不会显得生疏？我们都会回想起当时作为同班同学的时候关系是多么的好，想回到那种状态，而当下没有话题可聊也是事实，但是谁又都不愿戳穿这件事情。 三 我发现，越是我重视的人，当他们要离开时，我就越是想以一种赌气、显得无所谓的态度去面对，想着用冷漠压过自己心中的好感。仿佛自己在这段关系中付出更多、表达出更多的留恋和不舍是一件很丢人的事情一样。分开之后，大多数更是从来没聊过，时间越久，也就越没得可聊了。因为如果你想开启一个新的话题，你就要花费很大的力气，去从头讲起，而你也知道其实这件事情也许并没有那么有趣，甚至都过去了好久了，甚至没有再提的必要，而对方也只是处于礼貌的听一下。 四 当时大一结束的时候想着写这个本，也只是跟风写了一下，当时看着也没什么，心想着，这些每天一起上课的人，这些每天24小时待在一起的人，怎么可能这么轻易地就分别了？见过了最后一面，说过了最后一句话。这些在特定场景才聚到了一起，离开了这个场景就有断了联系的人，到底算不算真正的朋友？如果算是的话，那为什么现在都没有了联系？如果不算的话，那为什么现在又会想念？我觉得算不算，就看你有没有冲动，想要去见他就好了。 这个本子，现在看来才会怀念，而我又很庆幸当时抓住最后的机会搞了这个。想带着这个本子再拿给你们每个人看一看。每当我想到这，我就会因为没有合照的事情而万分自责，感到万分后悔。所以，有些事，我们不是为了当下才去做的，而是为了将来我们能够拿来回忆的。如果你现在后悔之前没有做过什么，现在就去做吧，不要让自己再一次地后悔。 在写这个的过程中，刷了一下朋友圈，看到了王某人的文章，第一反应是想点赞，第二反应竟然是害怕谁会看到，会多想？我？你也太拿自己当回事了吧？会多想的只有你自己。别人不会，别以为别人都在一直关注你。第三反应是想要评论却不知道说什么。与她写的内容一比，自己说什么都显得相形见绌了，而见不到面，不知道对方是什么心情。但是自己孤家寡人在北京生活，能好的了吗？只能说一句，照顾好自己。 五 我也很后悔毕业前没有面对面认真严肃地找一些人把该聊的聊了，该哭的哭了。我们都可以假装没有分别，但是心里都很清楚，时间终究会让你觉得无从开后。只有努力，非常努力，才会再说上一句话，更加努力，才能专门去见上一面。 我发现现在的我跟高一毕业的时候变了很多，我也不知道两年的实验班生活究竟让我失去了什么，整整两年没有怎么跟女同学说过话。其实想想大一时候也可能那些人并不是有多么的喜欢我，而只是单纯地有求于我。 说真的，我感觉我一直比较佛系，能够在我脑海里留下印象的事情、能够吸引我注意力的事情貌似没有多少，对好多事情都比较后知后觉。所以才需要用另外的方式去记忆。 我一直都比较悲观，有时候因为自己写的东西太过现实，自己都不不敢去看第二遍。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"http://maneback.github.io/categories/碎碎念/"}],"tags":[{"name":"爱情","slug":"爱情","permalink":"http://maneback.github.io/tags/爱情/"},{"name":"人生","slug":"人生","permalink":"http://maneback.github.io/tags/人生/"},{"name":"毕业","slug":"毕业","permalink":"http://maneback.github.io/tags/毕业/"},{"name":"letter","slug":"letter","permalink":"http://maneback.github.io/tags/letter/"}]},{"title":"碎碎念|七月","slug":"qiyuesuixiang","date":"2019-07-16T13:30:51.000Z","updated":"2019-08-01T13:58:54.000Z","comments":true,"path":"2019/qiyuesuixiang/","link":"","permalink":"http://maneback.github.io/2019/qiyuesuixiang/","excerpt":"","text":"今天，是7月16日，又是一个星期二。上上个星期二是毕业典礼，今天是在实验室滑水的第二个星期二。今天是小区断网的第二天，在这里移动信号也不好，可以说基本是与互联网生活告别了，没有网竟然连单机的天际线也玩不了，只能在这里码码字，发发牢骚了。 不想再像这样滑水虚度光阴了。 写到现在我也是害怕这样的码字，虽说这里写的任何东西应该都是没有人能看到的，我也害怕这样自己面对最真实的自己。尽管我可能在我外人印象中形象挺好的，但是在我自己看来，自己却是有着这样那样的缺点，完全看不到自己有什么闪光点，每次总结的时候，基本上就是定期循环地抱怨自己的生活。也可以说是我把自己的价值建立在别人对自己的认可上，我也知道这么做不妥，但是该怎么改正呢。 有些人还仍然是朋友圈三天可见，羡慕有的人，公众号已经真的写起来了，也敢大胆地转发到朋友圈。给别人看，接收评论，这对自己也是一种激励。而我呢，还是太要脸。其实这玩意，并没人真的在意，只有少数几个人在意，而你真的在意他们在不在意吗？发个朋友圈都畏畏缩缩的，一边想着自己的朋友圈自己做主，发自己想发的；一边又想着别人看了怎么想。你管那么多干啥啊，你发的什么，估计过了一两个小时就忘了。不要把自己当做世界的中心，真的没人那么在乎你做什么，说什么，除非是那些想抓住你把柄想要害你的人。想明白了这一点估计就能活得轻松一点吧。 还有，我今天找到了一个能够正确表达我在毕业期间心态的恰当的词语：赌气。一种极其无所谓的态度来对待，但是如果有人和我拍照又会显得很开心很开心，这也能成为一种炫耀吗？炫耀自己很受欢迎吗？给谁看的？幼稚！极其幼稚！你又不是校长，凭啥人家都排着队来找你拍照？毕业想和谁拍就拍不就好了？为什么要一直等着别人来找你？ 拍照留念，重要的是留念，而不是拍照。现在想不想不重要，想想一下，十年后会不会后悔没有留下一张照片？如果会的话，那就去拍一张吧。 想一想从初中到大学这十年，是人生青春中最美好的十年。而人生观更成熟、相对自由的大学四年更是这十年中最最美好的四年，时间也最长。而我呢，竟然没有和这四年来最喜欢的人留下一张合影？这尼玛我不得哭死。毕业使我多愁善感，每一次都觉得不再适合再发第二封信，但是每次一聊上天，就想着把第二封信发出去。 这两天断网了反思一下，自己从互联网上都获取到了什么？刷知乎，逛淘宝，刷微博，逛B站。每天都是浪费大好光阴。网上明明有很多的学习资源，却没有好好利用起来。公众号的文章也都积累了二三十篇，攒的越多，打开从头看的动力也就越小了，而看过一遍之后，又能收获什么呢。到处找这教程、那教程，这想学，那想学，又有哪个从头到尾学出来了呢？比如蝴蝶刀，你不付出一两个月坚持地练，哪能入门学得会。比如到处找的瘦腿教程，缓解驼背教程，你不坚持做怎么会有效果。想试着把这个博客网站搞起来搞好，但每次都是自己选择放松了，放弃了。 你必须坚持做一件事，最终才能看到成果。你必须付出足够多的艰辛努力，才能在人前显摆。光羡慕没有用，光想没有用，要实际付出。所以不要再自怨自艾了，不要再把自己的价值强加在别人的认可上了，如果没有人联系你，就享受孤独，利用好独处的实践好好提升自己。 希望有朝一日我也能成为别人口中，被别人羡慕的人。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"http://maneback.github.io/categories/碎碎念/"}],"tags":[{"name":"毕业","slug":"毕业","permalink":"http://maneback.github.io/tags/毕业/"},{"name":"不定期更新","slug":"不定期更新","permalink":"http://maneback.github.io/tags/不定期更新/"}]},{"title":"我们会为了爱情舍弃什么","slug":"chulian","date":"2019-07-11T12:05:53.000Z","updated":"2021-01-06T13:26:44.839Z","comments":true,"path":"2019/chulian/","link":"","permalink":"http://maneback.github.io/2019/chulian/","excerpt":"","text":"全文转载自微博用户写不出稿苏见祈， 未经修改。 朋友讲了个故事给我听。 说是有一对校园情侣，在一起整个大学四年，恩爱非常。毕业前两个人也商量好一起留在城市发展，大家都很羡慕这一对。 然后他们突然分手。 原因很是诡异——在这样的约定下，男生报名了老家的公务员考试。 据说那只是一场重在参与的裸考，是想用“我试过了考不上”挡住父母的压力，然后过自己的人生。可让我迷惑的是，在笔试和面试中，他显然尽了全力。 因为他考上了。 男生考上了一个有五年服务期的、录取就必须到岗的岗位。如果不报到，五年内就不能再考。 后来的结局就不用多说了。男生回老家上班，女孩也离开了他。男生得知自己录取时暴跳如雷，大骂命运弄人，但最终还是选择了回家上班。 他是真心不希望自己能考上，这样既可以说服父母，也能让自己的选择不留遗憾。 但天不遂人愿。 几年后的今天他回首往事，神色落寞萧索。他说没有和女孩在一起，是一生的遗憾。 可你有的选啊，你明明有的选的。哪怕走错了前面的所有，到了录取的结果公布之后，“暴跳如雷”的时候，你还是有的选的。 只要牺牲一点东西，你无比珍视的爱情就回来了。 你不愿意。 然后再为失去爱情百转愁肠。 我们身边有一种常见的分手模板。比如一方要出国，一方在国内，分手；或者一方回老家，一方要北漂，分手，诸如此类。 所有这些故事都有个共同点：在大多数人眼里，当爱情和更好的人生冲突的时候，大家都会选择更好的人生。 很多年后，我们这些功利主义分子会一脸沉痛地回首往事，感伤逝去的青春，就好像分离是无法对抗的天命似的。 有很多事是天命，但这种分离不是。这是我们自己选的。 有人说人性利己，我不反对。但这不只是与生俱来的人性，我们是被后天训练成这副模样的。 在我们学习世界的规则、形成人生观的少年时期，说到恋爱，老师、家长、社会舆论都众口一词： 反对，因为早恋会“影响学习”。 恋爱对学习的影响是正面还是负面，有待商榷，这里先不讨论。至少可以确认的是，我们从小接受的教育就告诉我们： 学习比恋爱重要。 即，“我的人生”比“两个人的爱情”重要。 如果爱情可能会对自己的未来有不好的影响，我们就该把爱情掐死在襁褓里。 所有人都反对早恋，所有人都觉得这理所当然。 问题在于，道理是通用的。 如果少年的爱情理应让位给现实，那成年人的爱情，不是也一样吗？ 少年鸳鸯们被纷纷拆散，大人告诉孩子们，等你们长大了就可以恋爱了。 但无论大人还是孩子都没有想到，“爱情为功利让位”的观念一旦种下，会收获一大批深谙利己主义的成年人，以及整齐划一的分手模板。 学习是为了自己，不能被感情耽误。那出国深造，考公务员同样是为了自己，自然也不能被感情耽误。只要是对自己有利的事，都不能被感情耽误。 可感情这个东西，是属于两个人的。那另一个人，那个和你约好牵着手走向未来的、傻乎乎的、没有那么聪明的人，怎么办呢？ 那没办法了。我也痛哭流涕，我也心痛如绞，我也满怀歉意，都是真心的。但无论如何，我的“学习”一定不能被影响了。 后来孩子们长大了，“不能影响学习”的规则举一反三，适用在“工作”“前途”“薪水”“房子”之类的东西上。 小时候没有人挑战这条规则，长大以后更加没有。每一次选择都经过精心的计算，为了更大的好处，可以牺牲掉一些美好却“无用”的东西。 天经地义，理所当然。 当孩子们还是一张白纸的时候，我们在上面画了什么？ 我们画出了一个个“聪明人”。 价值观不分对错。有人功利至上，也有人浪漫主义，都无可厚非。 但有很多人怀念青春的时候，或痛心疾首，或神情落寞，或泪眼婆娑，仿佛自己是个爱情至上的浪漫主义者。 但他们的行动却是实打实的功利主义，他们牺牲两个人的爱换得了如今的生活，却反过来怀念亲手献给命运的祭品。 我们看言情小说，我们看爱情电影，我们为了故事里的爱泪流满面，想着自己能不能遇到那样美好的感情。 但那些最好的爱情都伴随着牺牲，有些甚至要付出鲜血和生命的代价。 我们只是普通人，我们平凡的感情也不需要为爱赴死，但事实是，我们连一个工作机会都不愿意放弃。我们想要世界上最美好的东西，却不愿意支付一丁点的代价。 如果自知我就是这样的人，那其实没什么问题。但回过头又伤春悲秋，扼腕落泪，就会显得有点黑色幽默。 那不是自己选的吗，夺走幸福的不就是自己吗，难道这不是冷静地权衡利弊的结果吗。 我们从小就被训练成这样冷漠的人啊。 怪谁呢。 我们说海枯石烂，我们说此心不渝，但我们更爱自己。 大家都很聪明。 “在这个总要有一个人牺牲的过程中，我们发现，还是牺牲掉这段爱情比较划算。”","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"爱情","slug":"爱情","permalink":"http://maneback.github.io/tags/爱情/"},{"name":"文章","slug":"文章","permalink":"http://maneback.github.io/tags/文章/"},{"name":"dreams","slug":"dreams","permalink":"http://maneback.github.io/tags/dreams/"}]},{"title":"Python中的MapReduce用法","slug":"Map-Reduce-in-python","date":"2019-07-09T12:48:14.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/Map-Reduce-in-python/","link":"","permalink":"http://maneback.github.io/2019/Map-Reduce-in-python/","excerpt":"","text":"这一篇主要介绍python3中的Map函数与Reduce的用法。 Map与Reduce函数不止在python中支持，在JavaScript语言中也有对应的Map与Reduce函数，二者在思想与原理上相同，只是对应的语法标准与特定的语言相关。 Map是将一个相同的函数应用于序列或者迭代器的每一个元素上，并返回一个经过函数处理后结果的map对象。若函数包含两个参数，则应应用到两个序列上。 Reduce是将一个函数迭代累积的方式应用到序列或迭代器的所有元素上，并返回一个唯一的结果。函数接收两个参数。 在python3中使用Reduce函数要import一个包 1from functools import reduce 例子： 123456789101112131415161718from functools import recude#1 map一个参数x = [1,2,3,4,5]def add1(x): return x+1list(map(add5, x))#2 map两个参数x = [1,2,3,4,5]y = [1,2,3,4,5]list(map(lambda x,y: x*y, x, y))#3 reducedef add(x, y): return x+yx = [1,2,3,4,5]reduce(add, x) # 15","categories":[{"name":"knowledge","slug":"knowledge","permalink":"http://maneback.github.io/categories/knowledge/"}],"tags":[{"name":"python","slug":"python","permalink":"http://maneback.github.io/tags/python/"}]},{"title":"碎碎念|写给你的第三封信","slug":"lettertoyou3","date":"2019-07-08T13:27:06.000Z","updated":"2019-10-25T01:19:40.000Z","comments":true,"path":"2019/lettertoyou3/","link":"","permalink":"http://maneback.github.io/2019/lettertoyou3/","excerpt":"","text":"这是我给你写的第三封信，不过你应该是看不到了，就当是写给我自己，作为结束。 其实，写下这封信的时候，你连第二封信都还不知道是什么，甚至是连第一封信还没看完。但是搞笑的是我却已经知道了最终的结局，所以我不知道还有没有必要再把这第二封信给你，那就像DL对我说的：该说了的想说了的，就都一股脑说了吧，也不需要回复。表达自己的心意，表达自己的喜欢，任务就结束了。 其实我认为你会更喜欢第一封信的结局。但是，我不知道为什么，当我们开始认真严肃地讨论我们的感情时，你最先冒出的是这样一句话，问我能不能从阴影下走出来。难道过了这么久还是害怕我纠缠不清吗？不知道为什么我很难过。我还以为，过了四年，至少作为亲密的普通朋友，怎么也会得有点留恋之情吧。 其实我早就猜到了，当我准备请你吃饭的时候，你竟然拉上了另一个人，其实是害怕我会表白吧。没想到过了四年你都还不想给这段感情留下一个清晰完整的结局。那我算是什么，需要用到我的时候想到我，不需要的时候就晾到一边吗。那我也太惨了吧。 也许一直以来都是我想得太多，过于敏感，太以自我为中心，而你却毫不在意。 我就把这份喜欢当做毕业季的一次冲动，把恋恋不舍当做了喜欢，把一直的喜欢当做了喜欢。但是现在我还放不下对你的喜欢，还是会想着你。不过这些你都不会知道了，你也不需要知道了。如果还有机会，还想再见你一面。 我忍着自己心里的痛去成全你想要的结局。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"http://maneback.github.io/categories/碎碎念/"}],"tags":[{"name":"爱情","slug":"爱情","permalink":"http://maneback.github.io/tags/爱情/"},{"name":"毕业","slug":"毕业","permalink":"http://maneback.github.io/tags/毕业/"},{"name":"letter","slug":"letter","permalink":"http://maneback.github.io/tags/letter/"}]},{"title":"碎碎念|毕业感言（三）","slug":"biye3","date":"2019-07-08T13:17:35.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/biye3/","link":"","permalink":"http://maneback.github.io/2019/biye3/","excerpt":"这是我在本科毕业季第三篇毕业感言，估计也是最后一篇了，应该不会发到pyq，不过话说我一天到晚为啥这么多感慨。","text":"这是我在本科毕业季第三篇毕业感言，估计也是最后一篇了，应该不会发到pyq，不过话说我一天到晚为啥这么多感慨。 今天中午回了趟八斋宿舍楼，走在楼道里还没什么，但是到了四楼，看着满楼的垃圾和一个个空荡荡的房间，又一次感到了毕业的伤感。 今天又是一个新的周一了，大家走的走，工作的工作，旅游的旅游，毕业这件事都已经都过去了，但是我为什么还在因为毕业的事情感到伤感。最近一个星期，以这种高密度写了这么多，感觉自己都有点词穷了。 与学弟溜了溜校园，聊了一聊。我时不时就冒出一句伤感的话，这也伤感，那也伤感。对啊，为什么啊。因为大家都走了，而且有的人可能走了可能就不会再回来了，甚至躺在列表里再也不会聊一次天，只能从朋友圈窥探对方的生活。 人终究还是感情动物，我依然不能放下对你们的想念与感情。人生的青春能有几个宝贵四年？这个时间，比初中高中都要长。一直以来，我都觉得与高中同学的关系好于大学同学。但是到最后要分开的时候，才懂得要珍惜，才懂得我一直都在比较，却没有像对待高中同学那样去培养大学的同学关系。直到分别了，才意识到你们很重要，才意识到要珍惜你们。 大学有了更多的选择，更多的可能，也有着更多的接触途径和交流方式，但是也同样精力更加分散，甚至是疲于应对。是我，没有去认真对待他们，而导致了毕业才有了这么多的遗憾。 这么想来，我的大学四年是多么的失败。活得越来越孤独，甚至开始享受孤独，却在孤独的时候难过得想哭。难过的时候不知道找谁倾诉。 回想这四年，仿佛给人留下了一个老好人的形象，有求必应。我却不屑于开口寻求别人的帮助。但是却没有遇到多少可以真正深入探讨人生的人，可能我也不适合这个沉重的话题，我的想法，根本就达不到那个深度。大家都是把自己的心封闭了起来，真确实是真正的我，但不是完全的我。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"http://maneback.github.io/categories/碎碎念/"}],"tags":[{"name":"毕业","slug":"毕业","permalink":"http://maneback.github.io/tags/毕业/"}]},{"title":"碎碎念|写给你的第二封信","slug":"lettertoyou2","date":"2019-07-07T12:54:28.000Z","updated":"2019-10-25T01:19:28.000Z","comments":true,"path":"2019/lettertoyou2/","link":"","permalink":"http://maneback.github.io/2019/lettertoyou2/","excerpt":"","text":"L同学： 我现在怀着十分真诚又忐忑的心情为您写下第二封信。 不知道第一封信您看了没，没有收到回信倍感不安，不知道您有何感想。所以也怀疑这第二封信是否还有必要，不知道是不是合适 毕业以来，几天未见，甚是想念： cot 之所以你一直没有收到这句话，是因为我太怂了，虽然我也不知道自己怂什么。 可能因为对你的感情太过重要，我没法假装不经意间将这句话对你说出口，但又害怕气氛太过沉重。 分别之后，我发现我对你的感情发生了变化，又或者说一直没变，只是我到现在才明白过来，我才知道你对我最重要，会留恋。我以为我会毫不在乎地毕业，但是因为有你，我不能。 直到毕业典礼的那一天，我都从来没有认真想过你会离开，即使那时候你早就跟我说你考研要回江苏，而我还接着在这里读研，我都还没意识到分别，原谅我的后知后觉。我可能是已经习惯了经常跟你聊天的生活，就算今天没有聊，但是明天也会有话题可以聊；就算今天没见面，明天也会有机会见到你，怎么会有见不到的那一天呢？可笑的是，翻看了一些聊天记录，很感谢您还能有耐心跟我一直聊下去。我一直认为我对你的感情是十分特殊的，我很重视你，但是看了聊天记录，只感觉当时的自己很智障，在你看来根本感觉不到。 你问我毕业典礼为什么没有和你合影，这是我在毕业季期间第一次想哭。原因我想明白了，因为我对你的喜欢。你可能会觉得很可笑是吧。但是这个问题一直存在，我却从来没有这么明白过。一直以来我都不敢去大胆追求自己喜欢的事物，总是过于矜持，怕这怕那的，多少次因为害怕结局不如意而退缩了，却从没勇敢去试一试。因为自卑？因为焦虑？因为悲观？我不清楚。我觉得现在也不用考虑什么能说不能说的了，现在再不说就没有机会说了。 毕业典礼之后你就匆匆离开了，也没有机会好好道别一下。毕业只有一次，没有留下一张合照，这个遗憾我真的没有办法弥补了，说再多的对不起也没有用了。你也不必因为问了我这个问题而自责，这完完全全就是我的错。这些天以来我一直都在想这个问题，都在想你，是你让我明白了我有多么舍不得你。 我明明都已经给你写了，多少事情可以借着毕业的借口大胆地做了，而企图得到宽容谅解，可我还是不够大胆。我的勇气始终还是抵不过我对你的喜欢，抵不过我对你的珍惜。毕竟当初的结局摆在眼前，我不知道你对我的想法，一直以来都不知道。但至少大学四年，这个时候怎么也得有一丁点点的留恋吧。 说喜欢你是真的，说想念你也是真的，说要去南京看你也是真的。为什么只有当分别了、失去了人才会幡然醒悟。我开始后悔最后的一段时间没有多和你去图书馆自习几次，没有和你出去玩几次，虽然你也不一定会去。只是感觉这样每天聊来聊去最终也会觉得差点什么，留下遗憾，人与人还是要多一些面对面的交流。 说了这么多，最后我想说，毕业使我明白了我一直都很喜欢你，我曾经甚至把喜欢你当成了生活的常态，那种跟你在一块很开心的喜欢，那种想念你的喜欢，也是那种习以为常的喜欢。不过这也反映出我的自私吧，仗着自己喜欢你的借口为自己的过错辩解。你也可以选择不作答复，但是我还是要因为对不住你而有所交代。 你可能更喜欢以第一封信作为结局，不管结局怎样，我都希望它是好的。一想到我们之后聊天的频率可能越来越低了，能够见面的机会也可能不是很多了，我就想直接地告诉你。你可以把这封信看作是毕业的冲动，但是我对你的喜欢，可不是因为毕业才有的。 所以让我们彼此珍惜吧，年轻时候校园里的纯真友情或是爱情，不都是美好又让人羡慕的吗？人这一生，能有多少机会用四年去相处、去培养一段感情。况且我也早就已经认清了显示，即使退回到第一封信的结尾，也要互相珍惜。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"http://maneback.github.io/categories/碎碎念/"}],"tags":[{"name":"爱情","slug":"爱情","permalink":"http://maneback.github.io/tags/爱情/"},{"name":"毕业","slug":"毕业","permalink":"http://maneback.github.io/tags/毕业/"},{"name":"letter","slug":"letter","permalink":"http://maneback.github.io/tags/letter/"}]},{"title":"碎碎念|毕业感言（二）","slug":"biye2","date":"2019-07-03T09:15:10.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/biye2/","link":"","permalink":"http://maneback.github.io/2019/biye2/","excerpt":"","text":"今天回来纯属偶然 最后打扫了一遍434 没有像往常一样感受到打扫的乐趣 我已经不再称之为宿舍 小小屋子 竟然那么宽敞那么空荡 在里面说话都能有回声 当宿舍最后一个人在我不知道的情况下离开的时候 我想把自己锁在屋子里 转遍了每一个常去的宿舍 有的人还在，更多的人走了，有的锁了门 追着人到一个又一个还有人的宿舍 不想自己一个人呆在宿舍 明明昨天下午发毕业证的时候还很开心 我还给好多人的毕业证学位证装了封皮 我想不明白自己昨天晚上为什么要急急忙忙搬走 或者说逃走 昨天被直击内心的一问 真的真的是太大太大的遗憾了 我感觉从我意识到毕业的那一天起 我的情绪就出现了问题 这真的是我的问题 我也没有对谁讲过 多少事情可以借着毕业的借口大胆去做了 而能得到宽容谅解 PS: 当我最后截图发pyq的时候，我考虑来考虑去，还是没有将最后一句话截上。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"http://maneback.github.io/categories/碎碎念/"}],"tags":[{"name":"毕业","slug":"毕业","permalink":"http://maneback.github.io/tags/毕业/"}]},{"title":"毕业感言(一)","slug":"biye1","date":"2019-07-02T11:49:15.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/biye1/","link":"","permalink":"http://maneback.github.io/2019/biye1/","excerpt":"","text":"毕业 什么时候我才算是毕业 这个问题我被问了好久 交完论文那天？ 拍毕业照那天？ 班级聚餐那天？ 毕业典礼那天？ 领毕业证那天？ 离开学校那天？ 保研本校的我 一直自称新生 也就基本没有意识到自己快要毕业了 都不会离开学校哪里能想得到要毕业 第一次发觉毕业是聚餐回来后的凌晨 我觉得可能是酒精或者深夜起的作用 之后又看见米老师离开后留下的空位 直到听说一个又一个人都离开了学校 直到发现跟好多人都没有最后聚一次 直到发现跟好多人都没有拍一张合影 直到发现蜘蛛侠也没机会一起去看了 直到看见宿舍床位一个又一个地空了 直到意识到这些人离开就不会回来了 直到曾经一直推门就进的宿舍锁了门 直到你开始以各种方式开始回忆过去 直到我再次翻开高一结束时的留言本 …… 我逐渐明白 当看到这些朝夕相处的人去了不同地方 当一个个人还没当面说声再见就离开了 当你可能再也没机会见到这些人的时候 当那是和这群人最后一次打麻将的时候 当你发现这些人会找各种借口聚在一起 当我毕业前最后一次撸串喝酒彻夜未眠 我们就一点点地毕业了 它不像上次毕业时那样 高考就像是毕业的信号 这次它不知不觉就来了 可能你都还没有意识到 很多事都是最后一次了 很多事都还没机会去做 我会为了什么感到可惜 很多人都还没再见一面 就消失在彼此的记忆里 我不认为世界是美好的 只是有人让它变得美好 好多事情没有如果 我是一个悲观的人 也总是替别人着想 不会因此感到可惜 如果你不觉得可惜 离校的人越来越多 失落感也越来越强 一个人拍了毕业照 现在想想幸好拍了 没有留下太多遗憾 感谢摄影师小迪迪 我可能最后才离开 但想想就觉得可怕 我以为我会无所谓 但我真的很爱你们 我也真的感谢你们 有人问我会不会哭 我一直都过于敏感 不过我应该不会哭 毕业也是件开心事 希望你们没有遗憾 也没有什么可后悔 祝今天的你也快乐 跟谁在一块会开心 一直以来我都清楚 这是我无法假装的 人终归是要往前走 我们还有机会再见 我会去找你们蹭吃 我永远是你大松哥 提醒十年之后那位 和盼着我结婚那位 我总是会羡慕别人 但也有人说羡慕我 虽然我有挺多遗憾 也没理由怪罪别人 都是我自己造成的 真的犹豫就会败北 更何况还不长记性 还没找借口告诉你 那天晚上梦到了你 有些话还没说出口 但至少挽救了一个 熬掉了好多个深夜 越到深夜就越清醒 一百字写到一百行 没想到会写这么多 不想写得过于矫情 更不想让它成鸡汤 这不符合我的形象 我也没有那么文艺 感觉自己没有文化 平平常常唠唠叨叨 只希望你感同身受 所有的美好都一樣： 晴天里的可爱云朵， 草原上的漂亮小花， 沙滩上的精致贝壳， 和远胜过这些的你。 斜体因为这是抄的 送给你们每一个人 也包括每个毕业生 亦或是何时的同学 初中高中大学都算 虽然有些许久未见 但我仍然想着你们 想去找你们看一看 反反复复修修改改 却不知道怎么结尾 过去四年发生太多 好像怎么也写不完 那就这样结束了吧 不结束就还有可能 如果这世界有如果 我写的是个啥东西 明显有凑字的嫌疑 为了对齐不择手段 再见，后会有期 ——送给那些没有当面说声再见就离开了的人 再见 保重 ❤要记得想我❤","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"毕业","slug":"毕业","permalink":"http://maneback.github.io/tags/毕业/"}]},{"title":"碎碎念|写给你的第一封信","slug":"lettertoyou1","date":"2019-06-30T23:52:28.000Z","updated":"2019-10-25T01:19:16.000Z","comments":true,"path":"2019/lettertoyou1/","link":"","permalink":"http://maneback.github.io/2019/lettertoyou1/","excerpt":"","text":"想了很久要不要给你写一封信（其实也就不到五分钟），最后还是动笔写了。我就假装你应该想要看，你可能会期待。 我很清楚我后来一直都在刻意回避某件事，或许是因为我怂，就像你说的犹豫就会败北。但是它当时确实发生了，曾经在大一的我的心里发生了，没有办法，只是那时候我的想法还很幼稚，又有一点点冲动，一个少年躁动不安的心。不过还好，我还没有失去你，我感觉这样也挺好。 所以，我想说 我还是很喜欢你，真的真的很喜欢。不是那种单纯想占为己有的喜欢；是很高兴认识你的那种喜欢，是觉得跟你聊天跟你在一块很开心的那种喜欢，是离别之后真的会想念你的那种喜欢。甚至是产生了一点点心理上的依赖感。 我不想用“友情之上，恋人未满”这种屁话来给它定性。感觉说这种话的人都动机不纯，又有一股酸酸的味道在里面。就用“深厚的革命战斗友谊”来形容吧，LJ同志。 我觉得你也许可以找到一个人来替代我的角色，对于你未来的事情我也无能为力。希望你还会怀念会记得。面对自己喜欢的一切，人都是有一点点自私的。毕业分离会是怎样，没必要说什么无法做到的谎言来欺骗感情，安慰自己。我们又不是没经历过毕业。你应该也有一些高中同学，一学期或一年见一次依然如旧，我只希望多少年后我们也能这样。 你能算是大学里面和我关系最好，聊天最多，也是最频繁的人了，但是其实我真的，话非常少。可能是临近毕业让人变得多愁善感，变得矫情吧。我以为我会没什么留恋的，但是一点点发现确实还有。 多少事情都可以借着毕业的借口大胆去做了，而企图得到宽容谅解。我一直在找合适的词语，在找一个合适的表达方式，来描述我们之间的感情，或者说是我对你的感情。不至于太过暧昧使你感到不安，又可以把这种深厚又微妙的情感表达得恰到好处。你明白我意思吧。 对于重要的事情，真挚的感情，我还是最喜欢用写信这种传统的方式，因为它最真实，拿在手里就可以想象到写下一个一个字的场景。尽管我的字很丑吧。还有，给你写信比写思想汇报轻松多了。 最后，祝你毕业快乐，学业有成。 记得开心，记得想我。 其实我是完全回来自欺欺人的 看了毕业感言一，完全能猜到我是谁，那么名字改不改也无所谓了。 猜不到我是谁的，看到名字也不知道是谁，更无所谓了。 但是我打心底还是想改一下。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"http://maneback.github.io/categories/碎碎念/"}],"tags":[{"name":"毕业","slug":"毕业","permalink":"http://maneback.github.io/tags/毕业/"},{"name":"letter","slug":"letter","permalink":"http://maneback.github.io/tags/letter/"}]},{"title":"在github提交中插入emoji表情","slug":"emoji-in-git-commit","date":"2019-06-07T13:02:24.000Z","updated":"2019-08-01T13:58:54.000Z","comments":true,"path":"2019/emoji-in-git-commit/","link":"","permalink":"http://maneback.github.io/2019/emoji-in-git-commit/","excerpt":"","text":"给你的github提交中添加一些emoji表情 git commit只有文字描述太无趣了，考虑来点有趣的，在github提交中加入一些emoji表情。💢 后来才知道，这个玩意，早就有人做出了规范说明，什么情况下，哪个表情用于什么用途，都是有规定的。方法很简单，遵循以下格式 :emoji1: :emoji2: information 额外要求：首字母大写，祈使语气，句末不要加句号 emoji使用指南 emoji emoji代码 使用说明 🎉 庆祝 :tada: 初次提交 ✨火花 :sparkles: 引入新功能 🔖书签 :bookmark: 发行/版本标签 🐛bug :bug: 修复bug 🚑急救车 :ambulance: 重要补丁 🌐地球 :globe_with_meridians: 国际化和本地化 💄口红 :lipstick: 更新UI和样式文件 🚨警灯 :rotating_light: 移除linter警告 🔧扳手 :wrench: 修改配置文件 ➕加号 :heavy_plus_sign: 增加一个依赖 ➖减号 :heavy_minus_sign: 减少一个依赖 ⬆上升箭头 :arrow_up: 升级依赖 ⬇下降箭头 :arrow_down: 降级依赖 ⚡闪电🐎赛马 :zap::racehorses: 性能提升 📈上升趋势图 :chart_with_upwards_trend: 添加分析或跟踪代码 🚀火箭 :rocket: 部署功能 📝备忘录 :memo: 撰写文档 ✅白色复选框 :white_check_mark: 增加测试 🔨锤子 :hammer: 重大重构 🎨调色板 :art: 改进代码结构/代码格式 🔥火焰 :fire: 移除代码或文件 ✏铅笔 :pencil2: 修复typo 🚧施工 :comstruction: 工作进行中 👷工人 :construction_worker: 添加CI构建系统 💚绿心 :green_heart: 修复CI构建问题 🔒锁 :lock: 修复安全问题 🐋鲸鱼 :whales: Docker相关工作 🍎苹果 :apple: 修复macOS下的问题 🐧企鹅 :penguin: 修复Linux下的问题 🏁旗帜 :checked_flag: 修复windows下的问题 PS：我还找到了如何在markdown文档中添加的emoji的方法。 使用搜狗输入法自带的emoji太大的，而且本地图片无法在网页中加载。 我也不知道在网页上会显示多大，会不会调整，但是我找到了一个网站： emoji之家 可以在上面的链接中搜索想要的emoji，然后直接点击复制，在markdown文件中粘贴就好了。😎","categories":[{"name":"Amazing","slug":"Amazing","permalink":"http://maneback.github.io/categories/Amazing/"}],"tags":[{"name":"github","slug":"github","permalink":"http://maneback.github.io/tags/github/"},{"name":"git","slug":"git","permalink":"http://maneback.github.io/tags/git/"},{"name":"emoji","slug":"emoji","permalink":"http://maneback.github.io/tags/emoji/"}]},{"title":"碎碎念|朋友圈","slug":"sui1","date":"2019-05-16T13:36:33.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/sui1/","link":"","permalink":"http://maneback.github.io/2019/sui1/","excerpt":"","text":"不管是微博，还是朋友圈，每次以为自己下定决心离开，最后都会因为真香回来。 可能我还是需要一个地方来记录一下自己的所感所思，不然每天没有人可交流，没有表达，感觉大脑会变得迟钝，人会变得极端，变得诡异。有时候想法太过零碎，这里不行；日记软件给人的感官是每天只记录一次，想不起来，QQ空间在老人中早已被遗弃，老人纷纷转向朋友圈。 这么一来，想一想能用的地方，只有两个了：一个是没人认识的微博，一个是全是熟人的朋友圈。 而最近开始使用的soul，虽然一部分替代了微博的功能，但是因为有目的地去经营，不得不考虑维护某些形象，不敢像微博一样肆意妄为，而且对于某些爱好来讲，明显微博的效果更好，因为区分更明显，氛围更浓烈。 当初因为朋友圈折叠了我辛辛苦苦原创大几百字，辛辛苦苦写了自己热爱的事物，却还没有别人发个自拍点赞的人多，于是决定关闭朋友圈，三天可见，然后转向微博的怀抱，还写了一篇逃离朋友圈 来吐槽。 而渐渐地，我发现微博对我来说，已然成为了一个时间黑洞，但是却没有多大的帮助，最终看来看去都是那些，每次回想起来，其实只是暂时使我忘记那些困难，最终还会陷入更深的焦虑。而且又经历了某次大V集体沉默事件，就对这个平台失望了。同时，我们总会被一些舆论带偏，我们在这里渐渐会失去一些自由，老祖宗教育我们防民之口甚于防川，而一般情况下，总会被搞过头。 经历了几次朋友圈三天可见，半年可见；也经历了几次卸载微博，安装微博。现在我也看开了，朋友圈也完全打开了，微博也装上了，新的分类碎碎念也在这里开始了。 在这个网络时代，朋友圈几乎成为了一个新的好友了解我，对我产生兴趣和好感的一个重要途径，毕竟不能把它们带到soul和微博上面去。如果把这个路都堵死了，对于新的好友，当打开朋友圈想要了解我时，看到仅展示最近三天的朋友圈岂不是太心寒了，要让一个人对另一个人感兴趣，是多么困难的一件事，然而你却一边抱怨着自己认识不到新的朋友，一边用朋友圈三天可见把自己封闭起来，可笑至极。 其实，对于朋友圈这么一个熟人社交平台，完全可以开放朋友圈，然后屏蔽那些因特殊原因不得不加的临时好友、不喜欢、觉得有恶意的人，给好人一些温暖吧，他们只是想多了解你一点，从你少得可怜的朋友圈中和你互动一下，或是找一些共同话题，不要再让他们只能看那个横杠杠了。 又想起一点，其实你远没有自己想象的那么重要，你既不是整个世界的中心，也不是朋友圈的中心，没人会整天想着去翻你的朋友圈，也很少有人想着从你的朋友圈发现的什么东西去害你。承认吧，你就是一个普通得不能再普通人。朋友圈从来没有什么有价值的东西，都没人点赞，甚至因为学英语打卡早已被别人屏蔽了而不自知。 至于在朋友圈中发什么内容，如何维护自己在朋友圈的形象。曾经的我，发朋友圈之前总会反复检查，反复纠结，万一没人点赞怎么办，万一有人不喜欢看怎么办，总想通过被点赞获得别人的认可。陷入一种迫切希望被人认可的焦虑当中。 不去在意朋友圈有没有被点赞，才是一个人成熟的表现。就把它当做一个类似微博的记录软件，就假装这里没人认识你，了解你，不再对这些人抱有希望就好了。 后来我想明白了，这是我自己的朋友圈，我想发什么就发什么，我从没有发过反动的内容，不涉及价值观，只是发自己喜欢的东西，发自己觉得有趣的东西。你觉得无趣也好，你觉得不喜欢也好，你不想点赞也好，都随意，大可以屏蔽我。我只是想在这里记录一下我的生活，以后留给自己看，留给以后想要了解我、对我有兴趣的人看，而不是给你看的。你不想看，总会有人想看；你不在意，总会有人在意；你不感兴趣，总会有人感兴趣。 其实微博也好，朋友圈也好，soul也好，我们总是选择性、带有目的性地把我们的一部分展现给世人看。甚至连自己也不敢去面对多变的自己。但其实这每一个我都是真的我，但都不是完全的我，只是我的一个方面。我们必须去经营自己的人设，所有人都是如此，只有在与自己面对面的时候，才敢稍微深入地去挖掘真正的自己。 但是面对自己时，通常都会陷入那些往常不敢展现给世人的那些方面，比如每次写人总是健忘的 那些文章，总是陷入悲观的自我怀疑，比如在soul上，总是陷入悲观，而在朋友圈中表现得乐观，表现得爱好广泛，在微博上大胆说出自己热爱的东西。朋友圈越乐观，soul上也就越悲观。 没想到自己这么能扯，第一篇碎碎念就扯了一千多字，将近一小时，当时还害怕自己能写的太少，只能凑一段，没想到balabala得写了这么多。其实这篇文章构思了好久，也经历了一点点的修补，越想越复杂，越想越多。今天就这样吧，以后想起什么再补新的。 还是那句话，不要想着一下子就把文章写得完美。 看得过去就行了，反正你也不指着这个吃饭。注意时间，注意效率，不要细节地去扣每一个字眼，每一个标点，每一处分段，分清主次，你看那有的公众号一两句话就分一段，不也挺好的吗，内容为主，形式看得过去就行了。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"http://maneback.github.io/categories/碎碎念/"}],"tags":[]},{"title":"巴斯夏--看得见的与看不见的","slug":"see-and-not-see","date":"2019-05-14T14:41:49.000Z","updated":"2021-01-06T13:26:44.860Z","comments":true,"path":"2019/see-and-not-see/","link":"","permalink":"http://maneback.github.io/2019/see-and-not-see/","excerpt":"","text":"《看得见的与看不见的》是巴斯夏写于1850年的一篇文章，虽然过去这么久了，但是对于现在的我们仍有教育意义。现将复制原文如下： 原文 在经济领域，一个行动、一种习惯、一项制度或一部法律，可能会产生不止一种效果，而是会带来系列后果。在这些后果中，有些是当时就能看到的，它在原因发生之后立刻就出现了，人们都能注意到它；而有些后果则得过段时间才能表现出来，它们总是不被人注意到，如果我们能够预知它们，我们就很幸运了。 一个好经济学家与一个坏经济学家之间的区别就只有一点：坏经济学家仅仅局限于看到可以看得见的后果，而好经济学家却能同时考虑可以看得见的后果和那些只能推测到的后果。这种区别可太大了，因为一般情况都是，当时的后果看起来很不错，而后续的结果却很糟糕，或者恰恰相反。于是，事情经常就是，坏经济学家总是为了追求一些当下的好处而不管随之而来的巨大的坏处，而好经济学家却宁愿冒当下的小小的不幸而迫求未来的较大的收益。 当然，无论在卫生和道德领域都存在同样的现象。通常，一种当时让人觉得舒坦的好习惯，后来总是带来痛苦，比如，生活放荡、懒隋、挥霍浪费。一个人如果仅仅注意到一种习惯的可以看得见的后果，而没有洞悉那些当时看不到的后果，他就会沉溺其中而不能自拔。他这样做，不仅仅是天生的嗜好，也自以为是经过深思熟虑的。 这说明了人必然要经历一个痛苦的过程。当他还在摇篮中的时候，处于无知之中，因此，他就根据行动的当下的后果调整自己的行动，在他年幼的时候，他也只能看到这种后果。只有在经过较长时间后，他才知道还应该考虑其他后果。有两个截然不同的导师教会他认识到这一点：经验和远见。经验有效而残酷地教育了他。我们的深切感受教导我们了解一个行动的所有后果：火如果烧到我们自己，从这一感受中，我们最终必然认识到，火在燃烧。不过，我还是想尽可能地用一个更温和的导师即远见替代这位过于粗暴的老师。为此，我将研究一下几个经济现象的各种后果，把看得见的后果与看不见的后果进行一番对比。 1、破窗理论 你是否见过这位善良的店主 —— 詹姆斯・“好人” 先生生气的样子？当时，他那粗心的儿子不小心砸破了一扇窗户玻璃，如果你置身于这样的场合，你恐怕会看到这样的情景，围观者，哪怕有三五十个人，都会异口同声如此这般地安慰这位不幸的店主：“不论发生什么不幸的事，天下总有人会得到好处。人人都得过日子呀，如果玻璃老是不破，要玻璃工干什么呀。” 现在，这种千篇一律的安慰已经形成为一种理论，我们将用这个简单的例子来说明这一理论。我们会发现，很不幸，就是这样的理论在指导着我们绝大多数的经济制度。 假定这块玻璃值 6 法郎，你就会说，这个事故给玻璃工带来了 6 法郎的生意 —— 它提供了 6 个法郎的生意 —— 这我承认，我绝不会说这不对。你的话很有道理，这位玻璃工赶来，履行自己的职责，然后拿到 6 个法郎，在手里掂量掂量，而心里则感激那个莽撞的孩子。这些都是我们能够看到的。 但是，另一方面，假如你据此推论，得出结论 —— 人们确实常常得出这样的结论 —— 说打破玻璃是件好事，说这能使资金周转，说由此可以导致整个工业的发展，那就容我大喝一声：绝不会有这种好事！你的理论只看到了能看到的一面，而没有考虑看不到的一面。 看不到的那一面就是，由于我们的这位店主在这件事上花了 6 个法郎，他就不能用这 6 法郎办别的事了。你没有看到的是，如果他不修补这扇窗户，那么，或许就可以换掉自已的旧鞋，或者给自己的书架上再添一本新书。简而言之，如果没有发生这起事故，他就可以用这 6 法郎干别的事。 下面让我们把工业作为一个整体，来看看这一事故对它的影响。现在窗户打破了，玻璃工的生意增加了 6 个法郎，这是我们已经看到的。如果窗户没有破，鞋匠（或别的什么人）就会增加 6 个法郎的营业额，这是我们看不见的。 而如果在看得见的一面之外 —— 这是积极的事实，也考虑一下看不见的一面 —— 这是消极的事实，那么，我们就会明白，不管窗户是打破还是完好，对整个工业，乃至全国的就业，都没有好处。 现在，让我们站在詹姆斯・好人先生的角度考虑一下。第一种情况，如果窗户被打破了，他花了 6 法郎，那么，他从窗户中得到的享受，既不会比从前少，但也不会比从前多。第二种情况。假如窗户没有被打破，他也就可以拿这 6 个法郎去买鞋，于是，他在继续享用窗户的同时，还可以得到一双鞋。而由于詹姆斯・好人先生是社会的一个组成部分，因此，我们必然可以得出结论：综合起来考虑，对享用和劳动进行一下估计，那么，我们已经丧失了被打破的窗户的价值。 作一个概括，我们可以从中得出这么一个出人意料的结论：“有些东西被毫无意义地毁灭了，社会损失了某些价值”。我们必然会同意这么一个令贸易保护主义者毛骨惊然的公理：“破坏、损坏和浪费，并不能增加国民劳动力”，或者更简单地说，“破坏并不是有利可图的”。 《工业观察报》对此会有何看法？或者令人尊敬的查曼斯先生的弟子们，你们对此还有何话说？你们的老师曾经那么精确地计算过，如果烧毁巴黎，那将有那么多房子要重建，会带来多少生意啊。 我很抱歉打扰了人家很有独创性的计算，尤其是因为这种精神已经渗透到我们的立法中。不过我还是请他另算一遍，先把那些能看见的一面放到一边，考虑一下那些看不见的一面。 读者在进行观察时，必须谨记，在我讲的那个小故事中，并非只有当事的两个人，还有第三个人隐藏在幕后，我请他对此予以关注。一方是詹姆斯・好人先生，他代表着消费者，他本来可以有两样享受，但由于一个破坏行为，而只能享受一样。代表另一方出场的是玻璃工，表示生产者，他张开双臂欢迎窗户打碎的事故。第三方则是鞋匠（或者别的行当的商人），他的劳动却由于同一事故而遭受了同样大小的损失。这第三个人一直藏在阴影中，使我们一直没有留意到，但他却是这一问题中一个必不可少的因素。正是他向我们揭示了我们从破坏行动中能得到利润的想法是多么地荒唐。正是他，马上就可以教导我们。以为从限制贸易中能够得到多少好处的想法，其实更荒唐。毕竟，所有的破坏性行为中，再也没有比这更荒唐的了。因此，如果你把所有为贸易限制辩护的论证追根溯源，你所看到的，其实就只是这种老百姓的话：如果没有人打破窗户，玻璃工干什么去呀。 2、军队复员 一个国家跟一个人差不多。如果一个人想让自己舒服一些，他就得弄清付出的代价是否值得。对一个国家来说，获得安全保障可以说是最大的幸福。如果为了获得这种保障，必须动员十万人，花费一亿法郎，那我就无话可说了。这是付出了巨大的代价来换取的一种享受。 对于我想就这个问题发表的看法，请大家不要有误会。 一位议员提出要复员十万军人，这将减轻纳税人一亿法郎的税负。假定有人现在对他的提议作出反应：“这十万人和这一亿法郎是维护我们的安全所不可或缺的，这的确是某种代价。但是如果不付出这些代价，法国就会陷人内乱，或者可能会遭外敌人侵。” 在这里，我不想反驳这种看法，这种看法在不同的场合，可能正确，也可能错误，不过，至少从理论上说，却不算经济学上的胡言乱语。真正的胡言乱语是说，这种代价本身就体现了某种收益，因为它能给有些人带来好处。 如果我没有弄错，提出这一复员议案的人刚从讲台上走下来，就有一位雄辩家冲上去，开始讲起来： 裁撤十万人！你在想什么？他们会成为什么样子？他们靠什么生活，他们从哪儿搞到收入？你难道不知道现在到处都有失业现象吗？所有的职位都有很多人等着想干？难道你想把他们扔进市场，加剧竞争，压低工资水平？如果最后他们不足以维持基本的生存，不得不由国家来供养这十万人，又有什么好？再考虑一下军队所消费的酒、服装和武器，这些，让很多工厂和驻军城镇有生意可做，对于无数供应商来说，这可是飞来的横财啊。想想你的那种想法可能让这么多工厂关门大吉，你就无动于衷吗？ 从这番讲话中我们弄清楚了，他之所以赞同维持十万兵员，并不是因为国家需要这么多人在军队中服役，而是由于经济理由。我下面要驳斥的正是这些说法。 纳税人花上一亿法郎，不光能使十万将士自己过得不错，这一亿法郎也能让他们的供应商过上好日子：这些是看得见的。 但是，来自纳税人口袋的这一亿法郎，就不能用于这些纳税人和他们的供货商的生计了，数额也是一亿法郎。这是看不见的。算一算，想一想，然后你说说，对于全部国民来说，好处在哪儿？ 我本人则会告诉你我们在哪儿蒙受了损失。为了让事情容易理解，下面我不说十万人和一亿法郎，我们就说说一个人和一千法郎吧。 假定这儿有个 A 村庄，征兵官到处转悠，征召到一个人。税务官也同样在村里转了一圈，征到一千法郎的税款。这个人和这笔钱都被押送到东北部的梅斯城，这个人在这里可以过上一年跟以前不一样的生活，什么也不用干。如果你只注意梅斯 —— 是的，你确实已经看了几百遍了 —— 你觉得这样可真不错，有利可图啊。但是，如果你回头再看看 A 村庄，那么，除非你是个瞎子，否则，你就会看到，这个村庄损失了一个劳动力，也损失了可以作为他的劳动报酬的一千法郎，也损失了他细水长流地花这一千法郎所能带来的生意。 乍一看，这些损失似乎己经弥补上了。本来应该在村庄里发生的事现在搬到了梅斯。村庄里的人、钱，仍然好好地在梅斯呢，似乎什么也没有丧失。在那个村庄中，他是一个土里刨食、辛苦劳动的人，是个劳动人民；而在梅斯，他成了位士兵，他的生活整天就是 “向右看齐！”、“向左看齐！” 而已。在两个地方，金钱的使用和循环是一样的。然而在一个地方，有某个人每年三百天都在从事生产性的劳动；而在另一个地方，他每年三百天却是在干没有收益的事。当然，我们这是假设，对于公共安全来说，军队的一部分是必不可少的。 现在，要遣散这些军队了。你跟我说，市场上突然增加了十万工人，会加剧竞争压力，从而抑制了工资水平。这是你所看到的。 不过，还有你没有看到的一面。你没有看到，把十万士兵遣散回家，并不是把一亿法郎给弄没了，而是把它归还给纳税人了。你没有看到的是，用这种办法把十万工人扔进市场的同时，也把一亿法郎投人到市场中用以支付他们的劳动；因而，在增加劳动力供应的同时，劳动力的需求也等量增加了，据此，可以得出结论，你说工资将被压低，仅仅是幻觉而已。你没有看到，在遣散之前和遣散之后，与十万人配套的都有一亿法郎，而惟一的不同之处在于：在遣散之前，国家把一亿法郎给那十万人，他们却什么也不干；而在遣散之后，这一亿法郎却可以让十万人工作。最后一点，你也没有看到，纳税人交出白己的钱，不管是给一位士兵结果什么也得不到，还是给一位工人换取某种产品或服务，在这两种情况下，这些钱周转的比较长远的后果都是相同的，惟一不同的地方就在于，在第二种情况下，这位纳税人能够得到某种东西，而在第一种情况下，他什么也得不到。结论就是，对于国家来说，维持没有用处的军队是净损失。 我在这里批判的这种诡辩，不可能经受住将其推论到极致的考验，而这是所有理论原则的试金石。不妨考虑一下，如果扩大军队规模能够有利于国家，那么，干嘛不征召本国所有的男人都穿上制服呢？ 3、赋税 你是否曾经听什么人说过：“纳税是最好的投资；它们是生命的甘露。想想吧，赋税让多少家庭得以维持生存，然后再想象一下它们对工业的间接影响，它们的好处可真是无穷无尽，就像生活本身一样无边无际。” 为了驳斥这种说法，我不得不重复前面的论证。政治经济学非常清楚，它的论点井不怎么有趣，以至于随便什么人都能说三道四；重复则是最让人高兴的。因此，跟 Basile一样，政治经济学也为自己的应用 “准备” 了好几个谚语，可以肯定，在它看来，教育就是重复。 政府官员花销他们的薪水所享受的好处是可以看得见的，这些钱给他们的供应商带来的好处也是可以看得见的。就你那有限的视野而言，那些话是正确的。但是，竭力想减轻税收负担的纳税人的不幸，你却没有看见。供应他们必需品的那些商人由此而遭受的损失，你就更看不见了，尽管这些事实是明摆着的，完全可以从理智上认识到。 假如一位政府官员自己多花了 100 苏（法国过去的一种货币单位，20 苏等于 1 法郎 —— 译者注），这就意味着，纳税人自己就要少花 100 法郎。政府官员的花费是看得见的，因为这种事情已经发生了，而纳税人那边的情况却是看不见的，因为，唉，他没办法再花那笔钱了。 你把国家比喻成一块炎热干旱的土地，而赋税就是救命的及时雨，的确如此。不过，你也应该问问自己，这场及时雨是从哪儿来的，这场及时雨是不是从潮湿的地方吸上来从而使这个地方也变得干涸了？ 你要应该再进一步问问自己，这块土壤从这场及时雨中得到的宝贵的雨水，是不是比它由于蒸发而损失的水分要多？ 完全可以确定的一点是，当詹姆斯・好人先生掏出 100 苏给税务官时，他什么回报也没有得到。后来，当一位政府官员在消费 100 苏的时候，又把它还给詹姆斯・好人先生，以换取他所需要的同等价值的小麦或者服务。最终的结果是詹姆斯・好人先生损失了 5 个法郎。 政府官员确实 —— 如果你愿意的活，也可以说几乎总是 —— 能够向詹姆斯・好人先生提供等值的服务，补偿他交纳的那笔税款。如果是这样，那么，双方就都没有损失。这仅仅是一种交换关系、因此，我们的论点一点都不涉及官员的那些有用的功能，我想说的是：如果你想创造一个政府职位，那么，就请先证明它的用处何在。向詹姆斯・好人先生证明，他付出那笔钱是物有所值，他能得到它所提供的等值的服务。而除了这些内在的固有的效益之外，不要再像支持创建新的官僚机构的人士那样，说什么这些机构可以为官僚本身、为他的家人、为那些供应他们日常用品的商人带来多大的好处；也不要说这能创造多少就业机会。 如果詹姆斯・好人先生把 100 苏给某位政府官员并得到了真正有用的服务，那么，这种情况就跟他把 300 苏给某位鞋匠从而换到一双鞋一模一样。这是种买卖交换关系，其结果对双方都是公平的。但是，如果詹姆斯・好人先生交出 100 苏给政府官员，却没有得到相应的服务，甚至给自己带来了麻烦，那么，这就相当于他把自己的钱给了个盗贼。说政府官员花费的这 l00 苏会给我们国家的工业生产带来多大的好处，这种说法毫无意义；比起政府官员来说，盗贼也可以用这些钱做更多的事，詹姆斯・好人先生如果没有倒霉地碰上这两位非法的或合法的寄生虫，也完全可以给这笔钱派上更多用场。 因此，我们一定不能仅仅根据看得见的方面就作出判断，而要习惯于根据看不见的方面进行评价。 去年我还在议会财政委员会，因为当时反对党的成员还没有被人从制宪国民大会中全部给轰出来。当时，制宪者们的行为还算很明智。我们曾经听梯也尔先生说：“我毕生都在跟那些保王党人和教会党人作斗争，但自从我们都面临共同的危险以来，我开始了解他们，我们也经常在一起面对面谈话，我发现，他们并不是以前想象中的怪物。” 是的，如果双方不能经常接触，那么，敌意就会被夸大，而仇恨就会越来越强；如果多数派能够允许少数派成员进人各个委员会的圈子，那么，也许双方都会认识到，他们的理念之间的差异并不如想象中的那么大，而最重要的是认识到，他们的意图并不像想象的那样不正当。 这种情况并非不可能，去年我就在财政委员会。每次，我们的同事一说到要把共和国总统、内阁部长、驻外大使的工资固定在一个比较适中的水平上时，就会有人对他说： 为了得到良好的服务，我们必须让某些官员能够置身于某种声望和尊严的气氛中。这是吸引这些人士奉献他们的才智的办法。无数不幸的人都有求于共和国总统，而如果他总是不得不拒绝帮助他们，他就会处于痛苦之中。各部委和驻外使馆某种程度的奢华，正是宪政政府正常运转的一个组成部分，如此等等。 不管这样的说法是否值得商榷，但总是值得严肃对待的。不管他的想法是对是错，这样的说法总是基于公共利益的；而就我本人而言，我可以比我们的很多反对这种说法的人士给出更有说服力的论证，这些反对者不过是被狭隘吝啬和嫉妒心理所驱使罢了。 但真正触动我的经济学家良知的，让我为我的祖国的知识声誉感到羞愧的是，他们从这些论点继续发挥（他们总是忍不住继续发挥一番），最后提出下面这种荒唐的陈词滥调（却总是有人乐于接受）： 除此之外，政府高官的奢华生活也可以促进艺术、工业和就业。国家首脑和他的内阁部长们如果不能举行欢宴盛会，就无法把自己的生活完全融入到政治中去。降低他们的工资，就必然使巴黎的经济成为无源之水，从而也使整个国家的经济陷入萧条。 看在上帝的份上，先生们，您至少得尊重算术吧，别不知羞耻地跑到国民制宪大会上说，一个数字加另一个数字的总和，会由于是用这个加那个还是用那个加这个而有所不同，还怪人家不支持你。 那么，好吧，假设我正准备找个工人来帮我在我的田里挖一条沟，为此我准备出 100 个苏，就在我跟工人快要谈妥的时候，税务官跑来，拿走了我的 100 苏，经过一系列的程序，最后这 100 苏到了内政部长手里。我跟工人的生意没法做了，而部长大人的晚宴上多了一道莱。你是根据什么竟然可以断言，这位官员的支出，增加了全国的经济总量？你难道不明白，这仅仅是一次简单的消费和劳务的转移？一位内阁部长的餐桌上的确更加丰盛了，这没错，但相应地，一位农民的田里的排水却不畅通了，这同样是千真万确的。我承认，巴黎的某位包办宴会者能拿到 100 苏了，但你也得承认，外省的某个挖沟工人也少挣了 5 个法郎。对此我们所能说的就是：官员的餐桌和心满意足的包办宴会者是看得见的，而让雨水淹了的田地和挖沟工人没活可干就是看不见的了。 上帝啊，在政治经济学中要证明 2 加 2 等于 4 竟是这么地艰难！而如果你竟然证明了这一点，有人肯定会大喊起来：“这本来就很简单嘛，谁不明白？你烦不烦啊？” 然而，在他们投票的时候，却仿佛你从来就没有证明过任何东西一样，他们该怎么来还是怎么来。 4、剧院与高雅艺术 —— 国家应该补贴艺术吗？ 关于这一问题，正反双方都能说出一大堆理由。 有些人会说，艺术可以扩大民族的视野，提升民族的精神水平，并使民族的心灵富有诗意，为此，国家应该扶持艺术。这些人说，艺术可以将本民族从物欲的沉迷中解救出来，可以使本民族对优美的东西有一种渴望，因而也可以对她的行为方式、对她的习俗、她的道德甚至还有她的经济产生有益的作用。他们会问，如果没有意大利剧院（Theatre-Italien）和音乐学院，那么，法国的音乐会是什么样子？如果没有法兰西剧院（Theatre-Franais），法国的戏剧艺术会是什么样？如果没有我们的画廊和博物馆，我们的绘画和雕塑艺术会是什么样？人们甚至可能更进一步指出，如果没有对高雅艺术的集中管理（centralization）和补贴，那么，是否能够发展出这种高雅的趣味？这是法国人的心血所取得、并奉献给整个世界的高贵的成就。面对这么高尚的成就，放弃这种补贴，难道不是最轻率的行为吗？这种补贴分摊到每个公民身上，根本就没有多少，而归根到底，艺术的成就可以让我们在整个欧洲人面前觉得自豪和光荣。 这种种理由，我得承认当然是很雄辩的，不过，我们也可以给出很多同样雄辩的驳斥。首先，我们可以说，存在着一个分配性正义（distributive justice）的问题。立法者的权力是否大到可以使他研究艺术家的工资水平问题，从而对艺术家的利润给予补贴？拉马丁曾说过：“如果你取消对剧院的补贴，那么，你在这条路上要走多远？按你的逻辑，你是不是也要关闭大学各个系科、关闭博物馆、研究所和图书室？” 对此，人们可以这样回应：如果你想补贴所有美好而有用的事业，那什么时候才是尽头？按你的逻辑，是不是也应该为农业、为工业、为商业、为教育同样拨出王室专款？而且，你怎么就那么确定，补贴就一定有利于艺术的进步？这是一个远没有答案的问题，而我们亲眼看到，那些繁荣兴隆的剧院恰恰是那些靠自己的努力维持生存的剧院。最后，如果从更深层次进行考虑，我们就会着到，需求和欲望是此消彼长的，要想让全国的财富满足这些需求和欲望，那么，必然是越高级的欲望，占的比例就越小：政府决不能多管闲事干预这一过程，因为不管现在全国的财富有多少，通过税收来刺激奢侈品产业，都不可能不伤害基础产业，从而必然会逆转自然的文明进程。人们也会指出，人为地扰乱需求、趣味、劳动和人口之间的相应比例，将把国家置于一种不稳定而危险的境地，便之丧失稳固的基础。 这是反对国家于预某种秩序的人士提出的一些理由，在这种秩序中，民众相信他们应该满足自己的需求和欲望，因而可以自己决定自己的行动。我坦白承认，我也认为选择和刺激应该来自下面而不是上面，来自民众而不是立法者；而与之相反的理论，在我看来，将导致自由和人的尊严的毁灭。 然而，你知道现在人们是怎么根据错误而不公正的推测而骂经济学家的吗？如果我们反对补贴，人们就指责我们反对要进行补贴的这一艺术活动本身，我们被看成所有这些艺术活动的敌人，原因仅仅是因为我们想让这些艺术活动成为人们的自愿活动，应该自己去寻找恰当的报酬。因此，当我们要求国家不要用税款干预宗教事务时，我们就被人看成是无神论者；如果我们要求国家不要用税款干预教育，那么我们就被人看成是憎恨启蒙；如果我们说国家不应该通过税款人为地虚增某块土地或某个工业部门的价值，我们就成为财产权和劳工的敌人；如果我们认为国家不应该补贴艺术家，在某些人眼里，我们就成了觉得艺术无用的野蛮人。 我决不能同意上面的这些推测。我们决不会荒唐到想取消宗教、教育、财产权、劳工和艺术的地步，尽管我们要求国家保障所有这些人的活动自由发展，但不应该用别人的钱来供养他们；恰恰相反，我们相信，所有这些至关重要的社会活动都应该在自由的气氛中协调地发展，不管是哪一类活动，都不应该成为麻烦、弊端、暴政和混乱的根源，而这种状况今天恰恰所在多有。 我们的论敌则相信，一项活动，如果不给予补贴或者不加以节制，就等于取缔该活动。我们认为恰怡相反。他们所信任的是立法者，而不是普通人。而我们信任的是普通人而不是立法者。 于是，拉马丁先生说了：“根据这项原则，我们恐怕就不得不取消能够给这个国家带来财富和荣誉的公共博览会。” 对拉马丁先生，我的回答是：按照你的观点，不予以补贴就是取缔，因为你是从下面的前提出发的：除非依靠国家，否则，任何东西都不能存在，据此你得出结沦，如果不用税款来支撑，任何事情都办不成。但是我会就你说的事举一个恰恰相反的例子，我要告诉你，迄今为止最大、最壮观的博览会，就是现在伦敦正在筹备的博览会，这个博览会乃是建立在最自由、也最普遍的概念基础上的，我想就是用 “人道主义” 这个词在这里也并不算夸张，而正是这个博览会，政府却一点都没有插手，也没有一点税款补贴。 回头再来看看高雅艺术吧，我想重复一遍，人们可以提出很充分的理由来赞成或反对补贴制度。而读者当然明自，为了与本文的具体目的保持一致，我无须再陈述这些理由，或者在两种立场中间进行选择。 但是拉马丁先生提出的一个论证，却是我不能假装没有看到、坐视不理的，因为他的论证正好就落在我的经济学研究的范围之内。他说：“剧院的经济问题可以用一个词来概括：就业。这种职业的性质就不用多说了，它跟别的任何行业一样，在创造就业机会方面也是很有潜力很管用的。你们都知道，剧院的工资支撑着不少于 8000 名各式各样的人的生活 —— 美工、砖瓦匠、装演、服装道具、建筑师等等，他们都是活生生的生命，他们的产业的产值占我们的首都的 1/4 强，他们应该有资格获得你们的同情！” 你们的同情？翻译过来就是：你们的补贴。 还有呢：“巴黎的赏心乐事为外省各部门提供了就业机会和消费品，富人的奢侈是整个共和国靠复杂的剧院经济为生的 20 万各行各业工人的工资和面包之所在，他们都通过这些高雅的活动获得报酬，而这些高雅的活动使得法国的形象光辉灿烂，正是这些高雅的活动使他们得以维持自己的生计，并给他们的家人和孩子提供生活所必需的东西。你们拨付的这 6 万法郎，正是为了这一目的。”（好啊！好啊！热烈的鼓掌。） 而从我的角度看，我不得不说：糟透了！糟透了！当然，我的这一判断仅仅是针对拉马丁先生的经济观点。 是的，我们现在讨论的这 6 万法郎至少有一部分会到达剧院员工的手中。肯定有不少会在路上就被人截留。如果仔细地进行追究，我们甚至可能会发现，馅饼的大部分都落入了别人的手中。如果竟然有一些碎渣留给他们，实在就是他们的福气！不过现在我倒愿意假设，全部的补贴都能送到美工、装潢、服装道具、发型师等人士的手中。这些是看得见的。 然而，这些补贴是从哪儿来的？这是硬币的另一面，考察这一面跟考察它的正面一样重要。这 6 万法郎是从哪儿蹦出来的？假如某次议会投票没有抢先一步让这笔钱从市政厅流向塞纳河左岸，那么这笔钱会流向什么地方？这则是看不见的。 确实，没有谁会说，议会的投票活动能让这笔钱从投票箱中自己孵出来；没有人敢说这笔钱是对国民财富的一个净增加；也没有人敢说，如果没有这奇迹般的投票，这 6 万法郎就仍然是看不见、摸不着的。我们恐怕必须得承认，议会投票时的多数派惟一能够做到的，就是来决定，从某个地方拿出这笔钱，然后把它派送到别的地方，这笔钱只有从一个地方转移出来才能被送到其要去的地方。 这就是事情的真相。很清楚，纳税人一旦交出了一个法郎后，就再也不能使用那一个法郎了；很清楚，他被剥夺了那一个法郎所能带来的享受，而本来准备满足他这一个法郎的享受的工人，不管他是谁，就都得不到这一个法郎的收入了。 因此，我们千万不要有那种天真幼稚的幻想，以为 5 月 16 日的投票真的凭空增加了国民财富和就业机会。它只不过是重新分配了财富，重新分配了工资，如此而己。 是不是有人会说，它所补贴的那种能给人满足的事物和那种职业，是一种更急需、更道德或者更合理的东西或职业？对此我无话可说。我要说的是：你拿走纳税人的 6 万法郎，提高了歌唱家、发型师、装演工和服装师的收人，那么，庄稼汉、挖沟工、木匠、铁匠的收人就相应减少了同等数量。没有任何东西可以证明前一个阶层就比别的阶层更重要，拉马丁先生也并没有这样说。用他自己的话说，跟其他行业相比，剧院的工作是一样地有效率，一样地有成效，而不是更多。然而，这种说法似乎值得商榷，因为剧院行业没有比别的行业更有效率的最好的证据就是它竟然呼吁别的行业来补贴它！ 不过，对不同职业内在价值和优点的这种比较，并不是本文的目的所在。我在这里竭力要证明的只是，拉马丁先生及那些为他的说法鼓过掌的人士，如已经看到了那些向演员们提供必需品的商人们所获得的收益，那么，他们也应该看到另一面，看到那些供应纳税人必需品的人们所蒙受的收入上的损失。如果他们做不到这一点，他们就难兔被人讥笑为把某种重新分配错当成了某种净收益。如果他们的理论讲究逻辑性，那么，他们就应该要求对所有东西给予补贴；因为在一个法郎或 6 万法郎身上应验的东西，放在 10 亿法郎身上，也不应该失灵吧。 先生们，如果涉及税款的问题，我们可以用某些理由来证明它是有用的，但千万不要用下面这种拙劣的说法：“公共支出能使劳动阶级维持生存。” 这种说法的错误之处在在于它掩盖了个我们必须从根本上了解的事实：即公共支出无非是私人投资的一种替代而已，其结果也许会很有力地支持一位工人替代另一位工人，但却不会让作为一个整体的工人阶级的总体收人增加一丁点。你们的看法很时髦，但十分荒唐，因为你们的推理过程是不正确的。 5、公共工程 当国家确信在某个行业创办一个大企业会为社会带来好处后，就用从民众那儿征收上来的资金创办这样的一家企业，天下再也没有比这更自然的事了。不过，当我听到有人竟然用这样的经济学谬论 ——“除此之外，这种企业还是为工人创造就业机会的一条办法”—— 来为这种事情辩护时，我承认，我立刻就火冒三丈。 国家开通一条公路，建筑一座官殿，修缮一条街道，挖掘一条运河…… 这些工程确实可以为某些工人带来就业机会、这是可以看得见的。但这种做法也剥夺了另一些工人的就业机会，这是不大容易看得见的。 假定正在修筑一条公路有一千名工人日出而作，日落而息，并挣得自己的那份工资；这一点是确定无疑的。如果政府不准备开辟这条道路，如果议会没有投票为其建设拨出资金，这些善良勤劳的工人就干不了这份工作，也拿不到这些的收入；这点也是确定无疑的。 但这就是事情的全部吗？再全面地考虑一下，整个过程中是否还有点别的什么事情我们没有注意到？当迪潘先生以庄严的语言宣布：“议会已经决定……” 的时刻，那几百万法郎难道真的像不可思议的月光一样，自然而然地就洒落进富尔德先生和比诺先生的保险箱中？为了完成这一过程，国家除了花钱之外，难道不得组织人征集这笔资金？难道不得先派税务官到全国各地征税，纳税人个个不都得作出贡献？ 因此，必须要从两个方面来研究这一问题。一方面要注意到，国家要用议会拨付的几百万法郎干某些事情，同时也不能忽视纳税人本来可以用这几百万做什么事情 —— 而现在再也不能干这些事情了。因此，你明白了，公共企业是一枚有两面的硬币、一面画的是一位忙碌工作的工人，这幅图案是看得见的，另一面画的则是一位失业的工人，这幅图案却是看不见的。 把我在本文中批判的诡辩运用到公共工程中，就更为危险，因为这种诡辩就是在为最愚蠢的浪费事业进行辫护。如果一条铁路或一座桥梁真的有用，那么，还可以根据这一事实来论证它所带来的种种好处。而如果这些公共工程并没有多大用处，那些人会怎么做呢？他们一般都会搬出下面的胡言乱语：“我们必须要替工人们创造就业机会。” 从有人先是下令修建战神兵营（the Champ-de-Mars）后来又下令废弃不用这样的事实中，我们就能看出这种意思。据说，伟大的拿破仑在下令挖开一条沟然后又填上之时，也自豪地认为自己在干一件很有博爱精神的事业。他也曾说过，“这样做的结果，有什么意义呢？我们是想让财富流入到劳动阶级中。” 让我们从根子上探讨一下这个问题。货币使我们产生了一种幻觉。以货币的形态要求所有的公民对一项公共工程提供资助，实际上就是要求他们提供真实的物质上的资助，因为，他们每个人所交纳的税款都是通过自己的劳动才挣来的。现在，假如我们把所有公民都召集起来，要求他们为一件有利于所有人的工程贡献自己的一份力量，提供劳役，大家都会理解这件事情，因为他们的报酬就是这项工程所能发挥的作用本身。但是如果把他们召集起来之后，强迫他们修筑一条根本不会有人要走的道路，或者修建一座根本没有人愿意住的房子，惟一的理由是这项工程可以为他们创造出工作来，那也未免太荒唐了，他们当然有正当的理由予以反对：我们宁肯不要这样的工作，我们还不如自己给自己干呢。 如果公民们拿出来的不是劳役，而是货币，事情的性质并没有任何改变。但是，如果公民上交的是劳役，损失要所有的人承担，而如果公民们贡献的是金钱，那些由国家出面雇佣的人就不会损失他们的那一份，而那些已经上交了一笔税款、但没有在这里谋到工作的人，却还得再蒙受更多的损失。 《宪法》中有一条是这么写的： “社会要…… 通过国家、各部委、市政当局所组织实施的、雇佣失业者的适当的公共工程，以帮助和鼓励劳工的发展。” 作为应付严冬的一种临时应急措施，代表纳税人进行的这种干预具有良好的效应。这并没有增加就业数量，也没有提高工资总晕，而是把平时的一部分就业和工资拿出来，在困难时期作为一种慈善事业，施舍给他们，这实际上是一种损失。 而把这作为一种持久性的、普遍的、系统的措施，就完全是只有负面影响的骗人的把戏，是根本不可能坚持实行的，是自相矛盾的；表面上，它似乎创造出了一点点就业机会，并且搞得大张旗鼓，这是可以看得见的；但它却掩盖了一个事实：有更多的就业机会却因此而被排挤掉了，这是看不见的 6、中间人 社会是人们强制或自愿地彼此互相提供的所有服务的总和，强制提供的即公共服务，自愿提供的即私人服务。 第一种是由法律所强加或管制的，一般都不大容易随着需求的变化而调节，它们总是具有超长的生命力，即使已经没有任何用处而完全成了公共害人精，但却仍然大言不惭地自称为公共服务。第二种则是自愿的、也即个人承担责任的领域。在交易之后，每个人都卖出他所拥有的而买进他所希望得到的。我们可以认为，这些服务肯定都是有真正的用处的，这种用处的大小可以用它们的比较价值来准确地衡量。 正是因此，前者就通常都是静态的，而后者则遵循着进步的法则。 尽管公共服务部门过度的发展已经导致了资源的大量浪费，在社会中造成一群病态的寄生虫，然而，令人惊奇的是，很多现代经济思想流派却把这些坏现象归罪于自愿的私人服务部门，他们企图转变这些职业所发挥的功能。 这些思想流派在攻击他们所说的中间人的时候简直是义愤填膺。他们强烈地要求消灭资本家、银行家、投机分子、企业家、商人和小店主，指责他们横插在生产者与消费者之间，向两边都榨取钱财，没有为生产者和消费者增加任何价值。不过，这种中介的职能好像不大容易彻底消灭，于是，改革家们宁愿由国家担负起中间人的角色。 有人关于这点的诡辩就在于，他们大肆宣扬公众为其获得的服务向中间人支付了什么，而刻意掩盖如果取消中间人他们将向国家支付什么。我们又一次遇到了同样的冲突：找们可以亲眼看到的，与我们只能在心智中意识到的，也即看得见的与看不见的。 尤其是在 1847 年和大饥荒时期，社会主义学派成功地普及了它们那些错得离谱的理论。它们明白，即使是这荒唐的宣传，也能够吸引那些正在遭受灾难的人们；饥饿是魔鬼的引路人。 于是，这些动听的词语就有如神助：人对人的剥削，饥荒中的投机行为，垄断，他们的目的没有别的，就是抹黑企业的名声，就是抹煞企业的好处。 他们说：“为什么要把从美国或克里米亚进口食品的任务要交给那些批发商呢？找们国家或各部委或市政当局不能组织一个供应服务机构、建立储备货栈？这些机构可以以成本价出售商品，于是，人们、穷人就不用再向那些自由的、也即自私的、个人主义的、无法无天的商人上贡了。” 人们支付给商人的那些利润，是看得见的而在社会主义制度下，人们支付给国家或其办事机构的贡品，却是看不见的 人们支付给商人的这种所谓的贡品是什么？它的来源是这样的：两个人在竞争的压力下、根据协商后达成的某一价格，充分自由地互相对对方的某种服务给予补偿。 如果巴黎人的胃觉得饿了，而能满足这种欲望的小麦是在俄罗斯的奥德萨，那么，在小麦进到胃里之前，人们的痛苦是不会消失的。有二种办法可以使胃得到满足：饥饿的人自己跑去寻找小麦；他们也可以把这事完全托付给专门从事这门生意的人；第三种办法则是他们甘愿让国家征收一笔税款，然后由政府官员来承担这一任务。 在这三种办法中，哪一种最有优势？ 在所有时代的所有国家中，比较自由、文明、有阅历的人，如果可以自愿选择的话，总是毫不例外地选择第二种。我承认，在我看来，这已经足以证明它的优势了。我的心智不会承认人类会在这么一个显而易见的问题上自己欺骗自己。 不过，我们还是仔细来研究一下这个问题吧。 让 3600 万人都统统跑到奥德萨去搞到他们必需的小麦，显然是不可行的。第一种办法没有任何可行性。消费者不可能事必躬亲；他们不得不转而求助于中间人，不管是政府官员还是商人。 然而，我们得注意到，这第一种办法应该是最自然的办法。从根本上说，谁觉得饿了，那他自己就有责任去搞到自已要吃的小麦。这是一个只关乎他自己的任务，按说，这项任务只能由他自己来完成。假如别人，不管他是谁，为他提供了这项服务，替他完成了自己本该完成的任务，那么，这个人就有权获得补偿。我们就这里所谈论的其实正是这一点：中间人的服务内含着某种获得补偿的权利。 不过，我们必须面对社会主义者所说的寄生虫的问题。我们姑且承认中间人是寄生虫，那么，两种寄生虫 —— 商人或公共服务机构 —— 中，到底哪一个的寄生性少一点？ 商行（我假定它是自由的，否则的话，我的论证就无法进行下去了）是受它自己自私自利的动机驱使的，它研究季节的变化，日复一日地了解农作物的生长环境，接受来自世界各地的报道，预测人们的需求，采取预防措施。它的轮船时刻准备着，它在所有地方都有合伙人，它完全是自私自利的，而正是这些，使它能以尽可能低的价格买进，能有效地利用经济运转过程中的细枝末节，从而能以最小的代价获得最大的结果。时刻忙碌着满足法国人的日常需求的，不仅仅是法国的商人，还有世界所有地方的商人；如果自私自利能驱使他们以最低的成本完成他们的任务，那么，他们之间的竞争也同样能够迫使他们让消费者从他们己经实现的实惠中分享好处。一旦小麦运到，商人就希望能在最短时间内将其售出，以降低自己的风险，实现自己的利润，如果有机会的话，把这一过程再重复一遍。私人企业在价格比较的指引下，会把食品配送到整个世界范围内，而且总是从最紧缺的地方开始，也就是说从人们的需求最殷切的地方开始。因此，我们无法想象，还有别的什么组织能够更好地满足饥饿的人的利益？这么一个美好的组织的，不是出自社会主义者的想象，恰恰是由于下面的事实：它是自由的，也就是说，是自愿的。是的，消费者必须向商人支付他花在陆上运输、跨洋运输、存储、委托等方面的费用，但是在哪种体系下，那些消费小麦的人可以不支付将其运送到自己手里的费用呢？当然，除此之外，消费者还必须为商人的服务买单；但是，中间人的份额，可以通过竟争压缩在最低水平；至于公正问题，如果马赛的商人能够为巴黎的工匠服务，那么，巴黎的工匠怎么会不为马赛的商人服务？ 如果按照社会主义者的方案，在这些交易中由国家取代私人商人，将会出现什么局面？求求你，让我看看这样做能给公众带来什么样的实惠。零售价格会降低？然而想象一下，4 万个市政当局的代表在某一天 —— 在需要小麦的那一天 —— 同时涌到奥德萨，你以为这对价格会产生何种影响？运输费用会降低？然而，运输同样东西所需要的轮船、水手、远洋货轮、仓库会减少吗？或者我们真的可以不为所有这些东西花一分钱？商人的利润会减少？然而，那些市政代表和政府官员到奥德萨难道一无所求吗？他们大老远跑去难道是出于兄弟友爱？他们就不需要生活吗？他们的时间就不值钱吗？你以为这些费用不会达到商人准备获得的 2-3% 这样的利润率的上千倍？ 然后，再想想征收这么多税款来配送这么多食品的难度，想想必然伴随这样的活动而来的那些不公正和陋习，想想政府是否能够担负起这么重大的责任。 那些发明了这些愚蠢想法并在不幸时刻将这些想法灌输进群众的大脑中的社会主义者，大方地给自己冠以 “高瞻远瞩” 的称号，该词的这种用法蕴涵着一种真正的危险，语言的暴政给这个单词及其所蕴涵的判断标准赋予了正当性。“高瞻远瞩” 的意思就是说，这些先生的目光要比常人深远得多；他们惟一的失误就是过于超前于他们的时代；而如果消灭私人企业即他们所谓的寄生虫的时间还不成熟，那出错的就是公众，是他们没有跟上社会主义的脚步。但根据我的意见和知识，与此相反的想法才是正确的，我不知道我们要倒退回什么样的野蛮时代，才能对这一点的认识，找到跟社会主义者的水平相当的理解。 现代社会主义流派不断地反对当今社会中的自由结社。他们没有意识到，自由社会是一个真正的合作体，要比他们从自己丰富的想象中编造的任何形式的合作都要优越得多。 我们用一个例子来说明这一点： 某个人，早上一觉醒来，可以穿上一套衣服，在一块圈起来的土地上，施肥、疏浚、耕耘，种上某种植物，然后在上面牧养一群羊，从这些羊身上剪下羊毛，这些羊毛经过纺纱、编织、染色，然后织成布料；布料经过裁剪、缝纫，做成衣服。这整整一系列的过程需要无数他人的介入，需要利用农牧业、养羊业，需要工厂、煤炭、机器、货运等等。 假如社会不是非常真实的合作体，那么，不管是谁，要想有一套衣服穿，就都不得不自己独立奋斗，也就是说，要自个儿完成上面所说的数不胜数的整套操作过程，从最初开始的挥镐翻地到最后的拿针缝衣。 好在我们就有现成的协作，这是我们这种动物的根本属性，这些操作过程已经被分解到无数劳动者之中了。为了共同的利益，他们再继续往下细分，直到某一个点。在这里，只要消费需求增加，每一单独的专业化的操作过程就可以成为一个新的行业。整个生产过程分解之后。每个人都为总体的社会价值贡献了自己那份价值。如果这不是协作，我倒要请教这是什么。 注意，每个劳动者都不可能自己凭空制造出他所需要的最细小的原材料，因此，他们必然会互相利用对方的服务，为了一个共同的目的而互相协助；每个群体都跟其他群体联系在一起，因此，所有的人都可以被看成是中间人。举个例子，假如在整个生产交换过程中，交通运输变得十分重要，足以雇佣某一个人，下来是纺线，再下来是织布，那么，我们凭什么说头一个人比别人更像寄生虫？是不是没必要存在交通运输了？不是有人在花费时间和心思来完成这一任务吗？他干嘛不把这些时间和心思节省下来让别人来干？是他们会干得比他好，还是仅仅由于他们干的是不同的事情？至于他们的报酬，也即他们在生产交换过程中的份额，难道不是都得遵从同样法则的约束，限定于协商达成的价格这样范围内？这种劳动分工和这些充分自由地决定的制度安排，难道不是有利于共同利益？我们是否因此而需要一位社会主义者，打着计划的旗号跑过来，专制地摧毁我们的自愿性组织，消灭劳动分工，用自己孤零零的努力取代合作工作从而逆转文明的进步？ 我在这里所描述的协作难道就不是协作吗？在这里每个人都可以自由地进人或退出，可以在其中选择自己的位置，可以按自己的意愿作出判断进行交换，自己承担一切责任，而正是自己的自私自利，赋予了他的行动以力量，也是成功的保证。是合作，就要名副其实，那么，所谓的改革家跑过来把他自己的想法和意志强加给我们，比如，说全人类都集中在他周围，那还叫合作吗？ 我们越是深人地考察这些 “高瞻远瞩” 的思想学派，我们就越是深信，归根到底，这些思想完全是建立在无知的基础上的，它们宣称自己永不会出错，并打着这种不会出借的名义要求获得专制的权力。 希望读者原谅我有点离题了。在这个当口，我多说了一些上面的话，也许并不是一点用处都没有，因为圣西门主义、法朗吉的宣传者、伊卡里亚岛的崇拜者的著作，激烈地反对中间人的长篇大论，充斥着报纸，回响在国民公会，严重地威胁着劳动和交换的自由。 7、贸易管制 贸易保护主义先生（这个大名不是我起的，而是迪潘先生的创意）把自己的时间和精力都用在把它的祖国土地上的矿石转化成铁。由于大自然对比利时人更慷慨，他们可以用比贸易保护主义先生更诱人的价格向法国人出售铁。这就意味着，所有的法国人，或者说整个法国，从好心肠的佛兰德斯人那儿购买一定量的铁，只需付出较少的劳动。于是受他们的自私自利的激励，法国人就充分地发挥这种局面的优势，每天都有无数的制钓者、金属加工工匠，车匠、技工、铁匠、犁匠，或者是本人，或者是派中间人，跑到比利时去购买他们所需要的铁。贸易保护主义先生却一点都不喜欢这个样子。 他的第一个想法就是自己赤手空拳进行直接干预，以阻止这种陋习继续蔓延。这当然是收效甚微，因为只有他自己会受到伤害。于是，他对自己说，我要扛起我的马枪，我要在我的腰里别上 4 把手枪，我要在弹夹中装满子弹，我要打开枪上的刺刀，最后他全副武装起来。我要到边界上去，我首先要杀了那些金属加工工匠、制钉匠、铁匠、技工、锁匠，他们竟然只管追求自已的利润，而不管我的死活。我要给他们点颜色看！ 然而就在他要起身的时候，他又有了一个想法，让那战斗激情凉了半截。毕竟，那些跑去买铁的人，我们的那些同胞，也是我的敌人，也很有可能采取自卫行动，最后的结果也许不是我杀掉他们，而是他们可能于掉我。而且，即便是把我的全部仆人都派上阵，恐怕也未必能守住整个边界。还有，我这么大张旗鼓，付出的代价也太大了吧，比我能从中得到的好处还大。 贸易保护主义先生只好长叹一口气，颓然倒下，听之任之，突然，他有了一个很捧的主意。 他记起来了，巴黎有一个伟大的法律工厂。他自问道，法律是什么玩意儿？法律就是这样一种措施，一旦颁布，不管好坏，每个人都得遵守。为了执行这一法律，政府组织起一支公共警察队伍，而为了维持这支所谓的公共警察队伍。国家专门拨出了人力财力。 那么，如果我能让伟大的巴黎工厂搞出一部小小的精密的法律，宣布 “查禁比利时出产的铁”，比利时铁就只能接受这样的结局。政府会派两万人去替代我的那几个仆人，到边界上去对付我痛恨的那些金属加工工匠、锁匠、铁匠、手艺人、技工和犁匠。当然，为了让这 2 万名关税官员保持良好的精神风貌和健康的体魄，就需要每年拨给他们 2500 万法郎，而这笔钱，自然也出自那些铁匠、钉匠、手艺人和犁匠的腰包。经过这样一番组织，就可以达到保护的目标了，而我自己却什么也不用付出；我再也不会显得像掮客那样野蛮了；我可以按我自己喜欢的价格出售铁了，看着我们伟大的人民这么被人不体面地愚弄，我的心里真有一种说不出的快感。他们老是宣称自己是欧洲一切进步的先驱和推进者，这下总算给他们当头一棒。这可真是一个聪明的主意，完全值得一试。 于是，贸易保护主义先生来到法律工厂（也许我会另找个时间来讲讲他在这里所进行的阴暗的、见不得人的勾当，不过今天，我只想谈谈他公开的、大家都看得见的那些活动步骤），他站在那些尊敬的议员先生面前。说出了下面的一番话： 比利时铁在法国的售价是 10 法郎，逼得我不得不也以这个价格出售。我们其实更愿意以 15 法郎的价格出售，但由于这些讨厌的比利时铁，我却不敢这么做。因此，赶紧制造一部法律，规定 “比利时铁不准进入法国”。我立刻就可以把我的售价提高 5 法郎，其结果则如下： 我卖给大家的每 100 千克铁的价格不再是 10 法郎而是 15 法郎，因此，我自己将更快地富裕起来，我可以扩大自己的生意，我将雇佣更多工人。我和我的雇员会花销更大，从而给供应我们的那些人带来更多好处。这些供应商也有一个更大的市场将对整个工业下更多的订单，慢慢地，这种扩张会扩散到整个国家。你将投进我的保险箱中的这 100 苏硬币就像一颗石子扔进湖里，将形成无数个同心圆沿着同一个方向扩散到很远的地方。 法律的制造者们给这一番话迷住了。他们完全沉浸在这样的想法中：仅仅通过立法就可以这么容易地增加国民财富啊。于是他们投票通过了禁止法令。他们说：“干吗还要说什么劳动和储蓄？如果一项法令就可以搞定一切，那么，增加国民财富的这些痛苦的办法还有什么用处？” 的确，法律会具有贸易保护主义先生所预料的所有后果，不过，除此之外，还有其他一些后果。公平地说，他的推理也许并没有错，但却很不完整。为了寻求特权，他指出了能够看得见的那些效应，但却掩藏了那些看不见的效应。他指明了两个人物形象，而实际上在这幅图景中还存在着第三个人物。我们的任务就是补上他遗漏的那些情节，不管是他真的不知道还是故意遗漏的。 是的，通过立法程序落入贸易保护主义先生保险箱的那 5 个法郎对他本人和那些因此而得到就业的人来说。当然是一件大好事。如果是法律下令从月亮上落下这 5 个法郎，当然就不会出现什么坏效应来抵消这些好效应。不幸的是，这奇迹般的 100 苏并不是从月球上掉下来的，而是来自金属加工工匠、针匠、车匠、铁匠、犁匠、建筑工的腰包，一句话，出自詹姆斯・好人先生的口袋。今天，它掏出了这笔钱，却连一毫克的铁都没有得到。于是，我们现在讨论的问题立刻就变了样了，因为非常明显，贸易保护主义先生得到的好处将被詹姆斯・好人光生的损失所抵消，贸易保护主义先生当然可以用这 5 个法郎促进国内工业的发展，而这 5 个法郎如果在詹姆斯・好人先生手里，他也同样能够做到这一点。石子之所以刚好是扔到这个湖里的某个地方，完全是因为法律禁止把它扔到别的湖里。 于是，看不见的东西抵消了看得见的东西；而整个这么一个过程的后果则是某种不公正，而这种不公正却正是法律所导致的，再也没有比这一点更可悲的了。 但这还不是问题的全部。我还要说，有一个第三者还藏在阴影中。我得让他在此显身，而他将能够揭示我们还得再损失 5 个法郎，这样我们才算搞清楚了整个过程中的全部后果。 詹姆斯・好人先生有 15 个法郎，这是他劳动的果实（我们是在追溯他还可以自由行动的那个时候）。他怎么使用这 15 个法郎？他用 10 个法郎买了一顶女帽，他用这顶帽子来换取（或者由他的中间人替他换取）100 千克比利时出产的铁。他手里还有 5 个法郎。他不会把它们扔到河里去，而会用它们支付某位匠人或者别的什么来交换可以满足自己需要的某些东西 —— 比如，用它跟某位出版商换取一本波舒哀【21】所著的《通史》。 因此，他对国内工业的贡献是 15 个法郎，即： 支付给巴黎的女帽制造和贩卖商的 10 个法郎 支付给出版商的 5 个法郎 至于詹姆斯・好人先生，他用他的 15 个法郎得到了两样能够满足他需要的东西，即： （1）100 千克的铁 （2）一本书 现在却颁布了法令。 詹姆斯・好人先生会怎么样呢？国内工业会怎么样呢？ 詹姆斯・好人先生把这 15 个法郎一古脑儿全部给了贸易保护主义先生，换取他的 100 千克铁，然后，他除了可以使用这些铁之外，就一个子儿都没有了。他丧失了那本书或者别的任何一个与此价值相当的东西带来的享受。他也损失了那 5 个法郎。你都赞成这种说法吧，你不能不同意这种说法，你不能不承认，贸易限制抬高了价格，消费者则损失了这 5 个法郎的差额， 然而，有人却说，国内工业得到厂这个差额。 不，它没有得到这个差额；因为，颁布法令后，这笔钱带来的促进作用是一样的，都是 15 个法郎。 由于颁布了法令，詹姆斯・好人先生的 15 个法郎只能全都交给冶铁商，而在法令颁布之前，这笔钱却可以分成两份，分别给女帽制造贩卖商和书商。 而从道德的立场看，贸易保护主义先生个人在边界上所能动用的力量，和这项法令为他的利益所发挥的力量，是截然不同的。有些人竟然认为，抢掠只要变成合法的，就不再是不 道德的了、就我本人而言，我无法想象比这更令人惊心的事了。但是也许有一点事情是确定的，那就是其经济后果总是不会有什么两样。 你可以从随便什么角度来研究这个问题，但是如果你冷静地考察这问题，你就会发现，从合法或非法的抢掠中是得不到任何好处的。我们并不想否认，这可能为贸易保护主义先生或他的行业或者如果你愿意的话也可以说为国内工业，带来了 5 个法郎的好处，但我们也可以肯定，这种行为也导致了两层损失：一是詹姆斯・好人先生，以前他买那些铁只需要 10 个法郎，现在却需要支付 15 个法郎；另一个蒙受损失的是国内工业，它不再能够得到那 5 个法郎的差额。你自己选择一下，我们所承认的那些好处能够补偿哪个损失、你没有选择的那一项就必然是一个净损失。 道德：使用暴力并不是生产，而是破坏。天哪，如果使用暴力也算生产，那么，法国就该比现在富裕得多啊。 8、机器 “我们诅咒机器！年复一年，这些机器日益强大的动力使成百万的工人陷人贫困之中，机器夺走了工人们的工作机会，剥夺了他们的工作，就是剥夺了他们的工资，而剥夺了他们的工资，就剥夺了他们的面包！我们诅咒机器！” 这是来自无知的成见的呼声。这种呼声回响在我们的报纸上。 然而，咒骂机器，就是咒骂人的心智。 令我迷惑的是，竟然还真有人信服这样一种理论！ 因为，归根到底，如果这些说法是可信的，那么，其严格的逻辑后果是什么？必然是：只有那些愚昧的、精神处于静止状态的民族，上帝没有赋予他们思考、观察、发明、创造，用最小的代价获取最大的成果的那些天赋的可怜的民族，才有可能获得安乐、财富、幸福。相反，那些努力寻找和探索铁、火、风力、电力、磁力和化学、力学法则 —— 一句话，即探索自然的力量 —— 及自身所蕴藏的力量的民族，则必然只能得到衣不蔽体，屋不遮雨，陷入贫穷和停滞，这可真是应了卢梭的一句话：“不管是谁，只要一思考，就成了堕落的动物。” 但这还不是全部。如果这种理论是正确的，那么，人们所思考和发明创造的一切，事实上是从头到脚一切的一切，人的每时每刻的存在本身，人们努力想让自然的力量为我所用，以小搏大，尽量减少自己的体力劳动或服务于他们的那些人的体力劳动，用尽可能少的劳动量获得最大限度的能满足自己需求的东西，所有这些努力，就都是该咒骂的；我们必然要得出结论：就是因为这种渴望进步的聪明才智似乎在折磨着这个世界上的每个人，所以，整个人类都正在走向堕落。 因此，我们应该能够从统计学上肯定，兰开斯特【23】的居民必然会为了不使用机器，而跑到爱尔兰去，那里的人们还不知道使用机器；因此，按照那种理论，在历史上，应该是野蛮的阴影笼罩文明的新纪元，而文明必然在无知和野蛮的时代才能繁荣。 显然，在这种理论中存在着很多自相矛盾之处，有些可以说令人震惊，并警示我们，这个问题掩盖了对解决该问题非常重要的因素，对此尚无人充分地予以揭示。 所有的秘密都在于，在看得见的东西后面，还有看不见的东西。我下面就是要揭开这看不见的东西。我的论证无非是前面已经讲过很多遍的东西的重复，因为这里的问题其实没有什么两样。 人具有一种天性，如果不受暴力阻挠，他们就希望进行交换，也就是说，交换某种东西，获得能满足自己需求的同等价值的东西，以节省自己的劳动，不管这种东西出自能干的外国制造商之手，还是出自能干的机器制造商之手。在这两种情况下。反对人的这种天性的理论上的理由都是一样的。不管在哪种情祝下，人们都指责他们显然是减少了工人的工作机会。然而，其实际的效果并不是使工作机会减少，相反，它们能够解放人的劳动，使之从事其他工作。 正因如此，面对外国人和机器的竞争，都设置了同样的障碍 —— 同样的暴力。立法者禁止外国产品的竞争，也不许机器进行竞争。让这些人士压抑所有人的天性、取消他们的自由的，还能有什么理由呢？当然，在很多国家，立法者只禁止一种形态的竞争而对另一种形态的竞争只是口头上抱怨抱怨而已。这只能证明，在这些国家，立法者还不够持之以恒。 这不应该让我们觉得奇怪。在错误的道路上，总是会出现这种不能贯彻到底的事，假如不是如此的话，那人类岂不是早就完蛋了。我们从来没有看到过、也希望永远不要看到，把 某个错误的原则贯彻到底。我曾经在其他地方说过：荒谬的东西必然是前后不一的。我愿意再加上一句：前后不一也正是其荒谬性的证据。 我们还是接着来谈机器问题吧，我不用费太多口舌。 詹姆斯・好人先生有两个法郎。可以让两个工人挣走。 但是现在，假定他发明了一套滑轮装置，使同样的工作只需要原来一半的时间就可以干完。于是，他的需求得到了同样的满足，但却节省了一个法郎，少雇佣了一个工人。 他没有雇佣某一位工人：这是可以看得见的。 仅仅看到这一点的人就说了：“对文明来说，这是多么不幸的一件事啊！你看看，自由对于平等来说，可真是致命的威胁啊。人的心智搞出了个新玩意儿，立刻就有一位工人永远地陷人到贫困的深渊了。也许詹姆斯・好人先生还可以继续雇两个人给他干活，但他却不可能再给他们每人 10 个苏了，因为这两个工人会互相竞争，最后只能以更低的价格来出卖他们的劳务。就这样，富人越来越富而穷人却越来越穷了。我们必须改造我们的社会。” 这可真是个很杰出的结论，也是一个应该给予坚实前提的结论。 幸运的是，这里的前提和结论都是错误的，因为在可以看得见的那一半现象的背后，还有另一半看不见的东西。 人们没有看到的就是，詹姆斯・好人先生节省下来的那一个法郎和节省下来的这笔钱必然会带来的效应。 由于利用了白己的发明创造，詹姆斯・好人先生为了实现自己的需求，就不用再花费两个法郎而只用花一个法郎，他手里还留下一个法郎。此时，如果市场上有一个想出卖自己的劳动的工人无事可做，那么，在另一个地方，也必然有个资本家在为他手里的一个法郎寻找出路。这两个因素会相遇，然后就结合在一起。 很显然，此时，劳动的供应和需求之间的关系，工资的供应和需求之间关系，都没有任何改变。 现在，发明出来的新技术和那个获得了第一个法郎的工人将一起完成以前由两个工人干的活。 另一个工人则会获得另一个法郎，干一份新的工作。 那么，这个世界因此会有哪些改变呢？整个国家的满足程度提高了；换句话说，新发明是种凭空得来的好处，整个人类都可以获得一种不用付出任何代价的好处。 从上面给出的这一论证中，有人也可能会得出下面的结论：“正是资本家，拿走了从机器的发明中所获得的全部好处，而劳动阶级，最初要暂时地承受机器带来的痛苦，但却从中得不到好处，因为，根据你上面说的那番道理，机器的发明不过使劳动阶级在全国各个产业中的比例有所调整，这个过程中确实没有减少工作机会，但也没有增加工作机会呀。” 在这一篇文章中不可能回答所有的疑问.。本文的惟一目的是驳斥一种无知的偏见，这种偏见非常危险而又广为流传。我希望证明，新机器的发明，在创造出一定数量的工人可以得到的工作职位的同时，也必然会创造出可以支付他们的工资的资金。这些工人和这些钱最终会结合在一起，从而生产出在发明之前根本不能想象的东西；由此得出结论，发明创造的最终结果，就是人们的满足程度增加了，增加的数量就等于节省下来的劳动的数量。 那么，谁获取了这部分超额的满足人们需求的东西？ 是的，首先是资本家获取了它，是发明家、是最早成功地使用这台机器的人获取了它，这是对他们的天才和勇气的奖赏。在这里，我们已经看到了，他实现了生产成本的节约，节省下来的钱，不管他怎么花（反正他总要花出去），总是可以提供就业机会，其数量就等于机器节约出来的就业岗位。 但是很快，竞争就会迫使他降低他的产品的售价，直到不再能够占有节约的那些成本为止。 这时候，发明家就不再能够占有发明创造的好处了；占有这些好处的将是这种产品的购买者，消费者，公众，其中也包括工人 —— 一句话，是整个人类。 这就是看不见的：节约下来的那部分钱，会由所有消费者获取，从而形成了一笔资金，这笔资金可以转化为工资，用来雇佣那些被机器淘汰的工人。 最初（回到前面的例子），詹姆斯・好人先生要支付两个工人的工资才能得到一件产品。由于他的发明创造，现在他只需要为体力劳动支出一个法郎。 如果他以同样的价格出售这件产品，那么，在制造这件产品的过程中就要少雇佣一个工人，这是看得见的；但是，詹姆斯・好人先生节省下来的那个法郎又可以多雇佣一个工人，这是人们看不见的。 随着整个事态的自然演变。詹姆斯好人先生渐渐地就得把这件产品的价格降低一法郎，直到他不再能够比别人省钱；这时候，他就不再能够腾出一个法郎为整个国家创造生产新产品的工作岗位。但是总有某个人，或者是整个人类取代了他，得到了这笔节省下来的钱。不管是谁购买这件产品，就都可以少花一个法郎，节省一个法郎，他必然把节省下来的一个法郎转变为工资基金。这同样也是看不见的。 人们还提出了解答这一问题的另一条思路，好像蛮有道理。 有人说：“机器压缩了生产成本，降低了产品价格。价格降低必然会刺激消费增加，而这必然又会促进生产增加，最后，就会使用跟发明创造之前同样数量的工人 —— 或者更多工人。” 为了支持这种论点，他们引用印刷术、纺纱机、印刷机的例子。 这种说法是不科学的。 从这种说法中，我们必然会得出结论，如果我们正在探讨的这种产品的消费保持平稳或基本上保持不变，那么，机器就会对就业造成损害。事情当然不是这样的。 假定在某个国家，所有的人都戴帽子。如果使用了机器，使帽子的价格下降了一半，这未必会使帽子的销售量也增加一倍。 是不是可以这样说，如果真是那样，那么，全国劳动力中就有一部分无事可做？如果根据无知的推理过程，我们的回答就是：是；但如果根据我的理沦，回答就是：否。因为，即使在这个国家，不会有人去多买一顶帽子，但整个国家用来作为工资的资金总量却并没有发生变化；我们看到，所有消费者所节省下来的钱如果不是都流入帽子加工业，那就会转变为由于机器的出现而多余出来的整个劳动力的工资，从而推动所有工业取得新发展。 这才是社会的现实。我以前看的报纸都要卖 80 个法郎，现在却只卖 48 个法郎。节省下来的那 32 个法郎归了订户。我们不能肯定，至少不敢说这 32 个法郎必然会继续流人新闻行业；但我们可以肯定，事情也必然是，这些钱如果不流向这个地方，就要流向另一个地方。一个法郎可能用来买更多的报纸，另一个法郎可能买更多的食品，第三个法郎可能买来更好的衣服，第四个法郎可以买来更好的家具。 因此，各行各业都是紧密相联的。它们构成一个巨大的网络。在这个网络中，所有的线都通过不为人知的方式联接在一起。一个行业中的节约会有利于所有行业。重要的是清楚地认识到：永远，永远不要以就业和工资为借口来干扰经济。 9、信用 所有时代，尤其是在最近几年，人们一直在梦想着通过使信用普遍化而实现财富的普遍化。 我敢肯定，可以不夸张地说，自从二月革命以来，巴黎炮制了不下一万本小册子来贩卖这种解决社会问题的方案。可惜，这种解决方案完全是建立在一种错觉的基础上的，假如某种错觉竟然可以算是什么东西的基础的话。这些人先是混淆了产品与硬通货，然后又混淆了硬通货和纸币；他们就是从这两点混淆出发的，却假装自己了解到了事实真相。 在探讨这一问题的时候，绝对有必要忘记货币、硬币、钞票和其他人们用于交换产品的那些媒介，我们只需仅仅关注产品本身，这才是贷款的真正本质所在。因为，一个农民为了买犁而借进 50 法郎时，实际上他所借的并不是 50 法郎，而是那犁具。如果一个商人准备借 2 万法郎买一栋房子，那么，他欠人家的并不是 2 万法郎，而是那栋房子。 货币之所以出现，仅仅是为了便利各方之间的安排。 彼得可能并不愿意把自己的犁借给别人使，但詹姆斯却很乐意借出自己的钱。这时候威廉该怎么办？他会从詹姆斯那儿借钱，然后用这笔钱去从彼得那儿买犁。 事实上，没有人会为了钱本身而去借钱，我们借钱总是为了要得到某种产品。 今天，没有一个国家能够把超出现存产品、不存在的东西，从一个人手里转移到另一个人手里。 不管硬通货和纸币的数量有多少，借方所能拿到的东西，总不可能超出贷方所能提供的犁、房子、工具、必需品或原材料的总量。 因为我们必须牢记，每一个借方都必然意味着存在一位贷方，而每一笔借款后面总得有一笔贷款。 如果我们承认这一点，那么，信用机构有什么作用呢？他们可以使借、贷双方更容易地彼此寻找到对方，并比较容易地彼此理解。而他们不可能做到的事就是同时增加借进贷出的东西的总量。 然而，信贷机构为了实现社会改革家们的目标却恰恰在做这样的事，因为这些先生们所渴望的不是别的，正是要让所有想得到犁、房子、工具、供应、原材料的人都得偿所愿。 那么，他们是如何想象自己能够做到这一点的呢？ 通过由国家对贷款提供担保。 我们还是深人地探讨一下这个问题吧，因为在这里，也有一些东西是看得见的，有一些东西是看不见的。我们要努力地观察到两个方面 假定这个世界上只有一张犁，而有两个农民都需要它。 彼得是全法国惟一的一张犁的所有者，约翰和詹姆斯都想借用它。约翰用他的诚实、他的财产和他的名誉来做担保。我们可以信任他，他很有信用。詹姆斯则不是那么让人信任， 至少看起来不是那么可信，最后的结果，自然是彼得把犁借给约翰。 然而现在，在社会主义精神的鼓舞下，国家干预进来。对彼得说：“把你的犁借给詹姆斯，我们将向你提供偿付的担保，这个担保要比约翰的担保值钱得多，因为，他只是一个自己对自己承担责任的个人，而我们，尽管确实是拿不出一件实打实的东西，但却掌握着所有纳税人的财富；如果必要的话，我们会用他们的钱来偿还詹姆斯欠你的本金和利息的。” 于是，彼得把他的犁借给了詹姆斯；这是我们能够看得见的。 于是，社会主义者就欢呼起来，说，“你看，我们的方案是多么的成功啊。正是依赖国家的干预，贫穷的詹姆斯才有了一张犁。他不用再自己动手翻地了，他现在就可以创造自己 的财富了。这对他本人有利，也有利于整个国家。” 啊，不，先生们，这并不是国家之福，因为这里，有些东西你们没有看到。 没有看到的一面就是：这张犁之所以到了詹姆斯手中，就是因为它没有能够借给约翰。詹姆斯是不用再翻地了，他可以用犁耕地了，但你们没有看到的是：约翰却不得不动手翻地。而不能用犁耕地了。 因此，你以为是额外增加了贷款，其实不过是贷款的重新分配而已。 你还没有看到，这种重新分配制造了两个严重的不公正：对约翰不公正，本来是他应该得到的，他可以用自己的诚信和自己的实力赢得的信用，却眼睁睁地被剥夺了；对纳税人也不公正，他们不得不承担起偿付跟他们没有任何关系的贷款的责任。 那么，政府就不能向约翰提供与詹姆斯同样的机会吗？但是，由于只有一张犁在那个地方，那么，就不可能同时借给两个人。于是，他们的论证就又返回到宣称：由于国家的干预，可以借到的东西会多于能够出借的东西，因为，犁在这儿只是用来表示可以利用的资本的总量的。 确实，我是把整个过程简化到最简单的形态来论述的。但是用同样的试金石来检验最复杂的政府现代机构。你肯定会相信，它们所能做到的也只能是重新分配信贷，而不可能增加 信贷数量。在特定的国家的特定时刻，可以利用的资本的总量总是一定的，它们总是要投放到某个地方。国家向可能会破产的债务人提供担保，当然可以增加借款人的数量，从而提高利率（这些成本则要全体纳税人承担），但它不可能增加贷方的数量，也不可能增加贷款的总价值。 不过，我祈求上帝保佑大家不要误解我的意思。我是说，法律不应该人为地鼓励借贷，但我井没有说法律应该人为地阻挠借贷活动。如果在我们的制度中或者在任何别的地方，有什么东西妨碍着信用的扩散和运用，那就应该由法律将其消除，没有什么比这更好更公正的了。但是，社会改革家如果真想名副其实，在改革的同时维护自由，就应该求助于法律。 10、阿尔及利亚 有 4 位雄辩家都在国民公会上声嘶力竭地讲着，先是一起大喊，然后又是一个接一个地喊。他们都说些什么？说的确实都是些很美好的东西，说的是法国的实力和伟大，说的是我们广阔的殖民地灿烂的前景，说的是重新配置我们的过剩人口的好处。等等，这些雄辩的杰作，总是装点着这样一样诱人的结沦： 拨款 5000 万法郎（有的人说得多一些，有的人要得少一些），在阿尔及利亚修建港口和公路，从而使我们能够把殖民者运进那里，为他们建造房屋，为他们平整出土地。这样，我们就可以从法国工人的肩上卸掉一些负担，促进非洲的就业，增加马赛的贸易，所有人都可以从中受益。 是的，在国家花费这 5000 万法郎的时候，如果我们只考虑这些钱将流向哪儿，而不考虑它们是从何而来的；如果我们只考虑它们离开税务官的保险箱后所带来的好处，而不管征收这些税款所带来的损害，或者不考虑这些钱由于进了政府的保险箱而使纳税人自己无法受益，那么，确实，所有人都在受益。而且，可以说，如果这样考虑问题，那么，所有事情都是有利的。建在北非伊斯兰教区的房屋是看得见的，建在北非沿岸的港口是看得见的。这里所创造的就业岗位也是看得见的；法国的劳动力在某种程度上会有所减少是看得见的，马赛的商业活动会繁荣起来，也是看得见的。 然而，有某些东西是这些人士没有看到的，这就是：政府花了这 5000 万法郎，纳税人自己就不能再花这笔钱了，从公共开支所带来的一切好处中，我们必然可以推论出妨碍私人开支的全部坏处 —— 起码在我们还没有过分到竟然说詹姆斯・好人先生根本就不在乎他辛辛苦苦挣来、但却被税务官拿走的那 5 个法郎；而这乃是一个荒唐的说法，因为他之所以不辞辛劳地去挣那 5 个法郎，就是因为他希望可以用这些钱获取某些满足自己欲望的东西。他本来可以雇人给自己的花园扎上篱笆，现在却办不到了；这是看不见的。他本来可以雇人给自已的田里施肥，现在也办不到了，这是看不见的。他本来可以增添一些设备，现在也不行了，这是看不见的。他本来可以吃得更好一点，穿的更漂亮一些；他本来可以让自己的儿了接受更好的教育；他本来可以多给女儿一些嫁妆…… 这些，现在他都做不到了，这些是看不见的。他本来可以加人互助会，现在没有办法了。这是看不见的。一方面，他被剥夺了一些必需品的享受，他办事要依赖的东西眼睁睁地就没有了；另一方面，他的那笔钱本来可以使他所在村子里的雇工、木匠、铁匠、裁缝、教师有更多的活儿可干，而现在这些工作机会却不复存在了，这些都是看不见的。 我们的国民会好好地考虑阿尔及利亚未来的繁荣景象，当然，我们承认这一点；但也得让他们同时考虑考虑法国必然要蒙受的损失。人们向我展示了马赛商业繁荣的前景，然而，假如这种繁荣是税款催出来的，那我倒宁愿指出，国内其他地区的商业将遭受的损害有多大。他们说：“每运送位殖民人口到北非伊斯兰地区，就可以减轻留在法国的人们所面临的人口压力。” 对此，我的答复是：“问题是，在我们把这位殖民者运送到阿尔及利亚的同时，我们是不是也得运送比他在法国维持生存所需要的东西多二三倍的资本？” 我惟一的目的就是希望使读者们明白，不管是什么样的公共开支，在其表面的好处的背后，都存在着更加难以洞悉的坏处。我一直在尽自己最大的努力使读者养成一种习惯，在看到看得见的一面的同时，也能洞察看不见的一面，对二者进行全面的权衡。 当有人提出增加公共开支的时候，我们必须仔细地考察它给我们自身带来的好处，而不仅仅考虑其在增加就业机会方面带来的所谓的正面效应，因为这方面的效应无非是一种幻觉。公共开支在这方面能够做到的，由私人来投资可以做得更好，因此，就业机会问题根本就与此不相干。 评估投入到阿尔及利亚的公共开支的内在价值，并不在本文的讨论范围之内。但我还是忍不住要作一个一般性的考察。因为人们从来没有对通过税收而进行的公共支出带来的正面经济效应作出过正确的评价。为什么？我提出下面的理由。 首光，公正总是会因此而蒙受损害。因为詹姆斯・好人先生辛辛苦苦地挣来 100 个苏，是想用来满足自己的需求，现在却将这笔钱征收走，他肯定会生气，至少会说，税务官把他的一些享受拿走，给了另一个人。于是，那些征税的人当然得给人家一些好听的理由吧。我们看到，国家总是会讲出这么一个令人生厌的理由：“用这一百个苏，我会让某些人有活可干。” 詹姆斯・好人先生（只要他脑子清楚）必然会回答：“天啊！我本来是可以用这 100 个苏让别人为我干活的！” 国家曾经提出过上面的论点，有人曾赤裸裸地提出过这种看法，则公共财政官员与可怜的詹姆斯先生之间的辩论就非常简单了。如果国家对他说：“我要从你这儿拿走 100 个苏，用来雇佣警察，他可以满足保障你的安全的需要，也可以雇人修筑你每天都要走过的马路，也可以雇佣文官，他可以负责保护你的财产权和自由权利，也可以供养军队，以保卫我们的边界。” 对此，詹姆斯・好人先生恐怕无话可说，我的多虑也是大错特错。但是，如果国家这样对他说：“我从你这儿拿走 100 个苏，是想拿出一个苏作为奖赏，如果你好好地耕种自己的田地。或者教你的儿子学习你不想让他学习的东西，或者让某位内阁部长在他的晚宴上增加第 101 道菜，我就奖给你一个苏。我也可能拿这 100 个苏在阿尔及利亚修建一座小别墅，不用说也可能拿更多钱去维持某位在那里的殖民者的生活，或者用一笔钱供养一位士兵保护这位殖民者，再用一笔钱供养一名将军来控制这些士兵，如此等等”。那么，我想詹姆斯先生肯定会大叫起来：“这套司法体系简直就是丛林法则的翻版！” 如果国家预见到了这些反对的理由，它会怎么办呢？它就会胡搅蛮缠，它会提出某种对讨论问题没有助益的令人生厌的论点。它大谈什么这 100 个苏可以创造多少个就业机会；它会说有多少个厨师和零售商因满足部长大人们的需求而获益；它跟我们大讲这 5 个法郎可以养活一名殖民者、一位士兵或一位将军；总而言之，它讲给我们的，都是那些看得见的东西。而假如詹姆斯・好人先生不知道下一步就该探讨那些看不见的一面，就必然会被愚弄。正是考虑到这一点，我才要高声教给他这种观察方法，并且来来回回地重复。 公共支出只能重新配置就业岗位而不可能增加工作岗位，从这一事实中我们必然得出结论，这种支出的质量是低劣的，必须严辞拒绝。重新配置就业岗位就意味着使工人的位置发生变化，扰乱控制着人口在整个地球上分布的自然法则。如果这 5000 万法郎留给纳税人，由于他们分散在全国范围内，所以这笔钱可以促进全法国 4 万个市镇的就业；如果能这样，这笔钱就是一个纽带，把每个人都跟他的祖国联系到一起；它可以在尽可能多的工人中间和所有可以想象出的行业中配置。而现在，假如国家拿走国民们的这 5000 万法郎，将其集中起来，花到一个地方，必然会吸引其他地方相应数量的工人迁移到这个地方来，而一旦这些钱花完，这些工人就会流离失所，形成流动人口，失去原来的社会地位，那时，我敢说，这些工人的处境就很艰难了。然而，现在的情况却是（这里我又回到本文的主题了）：这种狂热的举动、也即把所有的钱都投向一个小地方，吸引了每个人的注意力，这些是看得见的；人们拍手叫好，人们惊叹于其过程的美好和轻而易举，还要求重复这种过程，扩大实施的范围。看不见的则是在法国的其他地方，却再也创造不出同样数量的工作岗位了。而且是可能更有用的岗位。 11、节俭与奢侈 看得见的一面遮蔽了看不见的一面，这一点，并不仅仅表现在公共支出问题上。由于无视政治经济学的智慧，这种看得见和看不见的现象形成了一种错误的道德标准，导致人们把他们的道德利益和物质利益看成是对立的。还有什么比这更令人沮丧或更令人悲伤的了？请看：天底下所有的父亲，无不教导自己的孩子遵守秩序，持家有道，讲究实惠，力求节俭，适度消费。天底下所有的宗教无不痛斥摆阔气和奢侈无度。这些都很好，很有益。然而，另一方面，还有一些比这些格言更流行的说法： “聚藏钱财会使民族的血脉枯竭。” “大人物的奢侈可以使小人物生活得更舒服。” “纨绔子弟毁了自己但却富了国家。” “穷人的面包，就是用富人的浪费做成的” 在这些话语中，道德观和经济观之间当然存在着不可调和的矛盾。有多少杰出的人物在指出了这种矛盾之后，竟然可以作出一副若无其事的样子！对此，我实在是无法理解。因为在我看来，再也没有比在自己的内心中看到这两种趋势彼此冲突更令人痛苦的了。不是由于这一端，就是由于那一端，反正人类总是得堕落！如果讲究节俭，人类就将陷入可怕的短缺状态；而如果挥霍浪费，人类便会跌人道德破产的深渊！ 幸运的是，这些广为流行的格言对节俭和奢侈的看法是错误的，它们只考虑了短期的、可以看得见的后果，而没有考虑到那些看不见的、比较长远的效应。我们下面就对这种不完整的看法做一些矫正。 蒙多尔和他的兄弟阿里斯特平分了父亲的遗产，每人每年有 5 万法郎的收人。蒙多尔的生活就是现在最时髦的，花钱大方慷慨，挥霍无度。他一年之内就几次更换家具，每月就换一辆新马车，人们都在想着搞出新奇好玩的东西，好尽快将他那些钱榨干净。总之，他让巴尔扎克大仲马小说中生活奢糜的主人公也相形失色。 这样的人却被人奉若神明，倍受赞誉！“给我们讲讲蒙多尔的事吧！蒙多尔万岁！他可真是劳动阶级的大恩人，他是民族的善良天使。他确实是沉迷于奢华无度的生活，他的马车确实给行人溅了一身的泥水，他本人的尊严和人类的尊严确实多多少少蒙受了损害…… 但这又有什么呢？即使他确实不是靠白己的勤劳使自己成为对社会有用的人，他是通过自己的财富造福于社会了。他让钱周转起来了，他的院中商人们络绎不绝，每个商人都满意而归。人们不是说金币是圆的，本来就应该转起来嘛。” 阿里斯特的生活方式则跟他的兄弟截然不同：如果说他不是个自我中心主义者（egoist），那至少也算个人主义者；因为他花钱的时候很理智，只追求一些比较适度的、合理的享受，总是考虑自己孩了的未来，简而言之，他节俭度日。 现在，我想让你听听大伙儿是怎么说他的！ “这个富人、这个守财奴这样生活对社会有什么好处？当然，毫无疑问，他的简朴生活很感人，动人心弦，而且，他是仁慈的，善良的，大方的，但是他也太会算计了。他没有挥霍掉自己的全部收人。他的房子没有一年到头都光彩照人，也不是门庭若市。那么，你想木匠、车匠、马商和糖果商人能对他有什么好印象吗？” 这些评判对道德伦理是有害的。之所以得出这种看法，是因为人们只看到了一件事：纨绔子弟的挥霍，而没有看到另一件事实：比较节俭的兄弟的花销，其实是同样多，甚至更多。 不过造物主所安排的社会秩序是如此的美好有序。跟万事万物一样，在这种秩序中。政治经济学与伦理，绝不是互相冲突的，相反，是彼此和谐一致的，因而，阿里斯特的智慧不 仅更珍贵，而且比起荒唐的蒙多尔来，甚至能带来更多好处。 我说能带来更多好处，井不仅仅是指为阿里斯特本人带来更多好处，甚至也不仅仅是对整个社会带来更多好处，也包括能给当下的工人、对当代的产业，带来更多好处。 为了证明这一点，我们必须在心智中观照人的行动所带来的那些肉眼所看不见的隐蔽的后果。 是的，蒙多尔挥霍的效应是所有人都能看得见的：每个人都能看见他各种各样的马车，比如四轮双座有篷马车，双排座开合式顶篷四轮马车，四轮敞篷轻便马车；人们也都能看见他房中天花板上精细的绘画；看见他名贵的地毯；看见他那富丽堂皇的豪宅。每个人都知道，他在赛马中鸳驭着纯种马。他在巴黎豪宅中举行的宴会足以使林荫道上的行人心醉神迷， 人们争相传诵说，“有一个很慷慨的家伙，他一点都不吝惜自己的钱，他很可能在他的钱袋子上开了个眼。” 从工人角度看，阿里斯特的收人怎么有益于工人，却不大容易看得清楚。但是，如果我们认真地探究，就可以完全肯定地说，他的所有收人，直至最后一个子儿，都会用来雇佣工人，其作用跟蒙多尔的收人一模一样。惟一的一个区别是：蒙多尔荒唐的挥霍必然使其口袋迅速瘪下去，最后总有没钱的那一天；而阿里斯特明智的花钱方式却会是使他雇佣工人的数 量一年一年地增加。 如果这一点的确有道理，那么，公众的利益自然就跟伦理道德和谐一致了。 阿里斯特每年为他本人和家人的生活花去 2 万法郎。如果这还不足以使他觉得幸福，那他就不会被称之为明智了。他有感于穷人所承受的不幸，觉得有一种道德上的义务，多少也要救济一下他们，于是，每年拿出一万法郎从事慈善活动。他在商人、制造商、农民中总有一些朋友，他们可能会暂时陷人财政困境中，他了解到他们的处境，决定拉他们一把，当然要考虑周到，并且帮忙要帮到点子上，在这方面每年又花去一万法郎。最后，他也不会忘记，自己的女儿需要有副好嫁妆，自己的儿子要有个好前程，于是他告诫自己每年必须为此而储蓄、投资一万法郎。 因此，下面就是他的收人的用途： （1）个人花销 2 万法郎 （2）慈善事业 1 万法郎 （3）帮助朋友 1 万法郎 （4）储蓄 1 万法郎 如果我们仔细地考察一下这些支出项目。那么，就会明白所有的钱同样都投人支持了国家的工业，一个子儿也没剩。 （1）个人花销。对于工匠和店主来说，这些钱的效应跟蒙多尔花同样数量的钱的效应完全相同。这一点不言而喻，我们不用更多地讨论。 （2）慈善活动。他为此目的而捐献出的一万法郎跟别的同样数量的钱一样扶持了工业。这些钱会流人面包师、屠户、裁缝、家具商手中，只是用那些钱换来的面包、肉、衣服，并不是要直接地满足阿里斯特的需求，而是会满足那些得到他的捐献的人们的需求。而一个消费者替换另一个消费者，对于整个工业并没有任何影响。同样 100 苏，是由阿里斯特本人直接消费，还是他请一位穷人去消费，结果是完全相同的 （3）帮助朋友。阿里斯特把钱借给某个朋友，或者不图回报，而是用这笔钱为朋友举办葬礼，其经济结果跟我们的说法也没有矛盾。他的朋友会用这些钱购买商品或者偿还自己的债务。在前一种情况下，这些钱会促进工业发展。谁敢说蒙多尔用一万法郎购买一匹纯种马给牧业带来的好处，要大于阿里斯特或他的朋友用一万法郎购买布料所带来的好处？如果这笔钱用来偿还一笔债务，其结果是将出现第三个人，债权人，他将拿到这一万法郎，但是他也必然会用这笔钱在他的企业、工厂中干某些事情，或者开发利用某些自然资源。他的出现只不过是在阿里斯特和工人之间又多了一道中介而已。人名变了，但钱总得花出去，因而照样会促进工业发展。 （4）储蓄。还有一万法郎储蓄起来了。正是这一点，从表面上看，从促进艺术、工业发展和创造就业机会的角度看，蒙多尔似乎要比阿里斯特表现得好一些，尽管阿里斯特在道德上似乎要比蒙多尔优越一点点。 如果伟大的自然诸法则之间确实存在着这种矛盾，那么，我不可能不陷入实实在在的肉体的痛苦之中。如果人类沦落到只能在两者之间进行选择，要么是自己的利益蒙受损害。要么是自己的良心遭受折磨，那么，我们恐怕就要对人类的前景绝望了。所幸事实并非如此。要想看清阿里斯特的生活方式在具有道德上的优越性的同时，也具有经济上的好处，我们只需明白下面这个令我们欣慰的公理即可，而表面上看起来自相矛盾的公理是颠扑不破的：储蓄也是支出。 阿里斯特怎么储蓄他那一万法郎？是不是在自家的花园中挖一个坑把那 20 万苏硬币埋起来？不，当然不是。他还想增加自己的资产和收人呢。因此，他会用这笔不用的钱来购买一块地、一栋房子，购买政府债券、购进一家工业企业，他也可能把它委托给一个经纪人或是某位银行家打理。这些钱的用处不管是这里假设的哪一种，你都得承认，这笔钱也会通过买家、卖家的中介，最后促进工业发展，其效果跟他的兄弟用它来换取家具、珠宝、良驹没有两样。 因为当阿里斯特用他那一万法郎购买一块土地或一笔债券，他之所以这么做，是因为他觉得，他不用消费这笔钱。这一点似乎让你觉得他没有尽到促进工业发展的责任。然而，出售这块土地或者债券的人，最后也必然会以某种方式花掉他得到的那一万法郎，不会有任何例外。 因此，不管怎样，钱总是会花出去的，不管是阿里斯特本人花，还是别人代替他来花。 因此，从劳动阶级的立场和扶持工业的角度看，阿里斯特的行为和蒙多尔的行为之间只有一个区别：蒙多尔的支出是由他本人直接花费的，并且只为满足自己的欲望；这是看得见的。而阿里斯特的行为中，有一部分钱是通过中介渠道花费的。经过了一些曲折；这是看不见的。然而，实际上，对那些受他们消费活动影响的人来说，看不见的行为的效应与看得见的行为的效应是完全相等的。能够证明这一点的就是，在这两种情况下，钱都在周转，留在明智的哥哥的保险箱里的钱并不比留在挥霍的弟弟保险箱里的钱更多。 因此，说节俭会对工业带来实际的损害，是错误的。就促进工业而言，节俭和奢侈的最终效果是一样的。 然而，我们觉得，这些钱如果不是用于及时行乐，而是细水长流，那么，对工业的好处会更多，此话怎讲？ 10 年过去了。蒙多尔、他的财产、他的广为传诵的轶闻，如今安在哉？这一切早已经烟消云散了，蒙多尔已经玩完了，他早就不能每年为经济注人 5 万法郎了。相反，他可能早就开始靠公众供养了。不管现在他怎么样，反正他不再是店主的乐趣所在了；他不再被当成是艺术和工业的促进者了，他对工人也不再有任何用处了；他对他的子孙也毫无用处，他把他们抛置在悲惨生活之中。 同样是在 10 年之后，阿里斯特却不仅继续将其收人投人货币周转中，而且，每年贡献出的钱还在增加。他为国家的财富加砖添瓦。也就是说，他增加了用于工资的资金数量；而由于对工人的需求取决于这些资金的数量多少，因而他为劳功阶级提供了越来越多的报酬。而到他去世的时候，他留给孩子的，将是这些进步和文明的成果。 节俭从道德上要优越于奢侈。这是无可争辩的。令人欣慰的是，从经济的角度看，节俭也同样是优越的，不管是谁，只要他不是仅仅考察事物的直接效应，而是深入探究其深层效应，就必然会承认这一点。 12、就业的权利与保证获取利润的权利 “兄弟们，匀出你的一些钱让我有活可干” 这是就业的权利，是初级的或者说是初级水平的社会主义。 “兄弟们，匀出你的一些钱让我有钱可赚。” 这是保证获取利润的权利，是比较精致的，或者说是中级水平的社会主义。 这两者都是靠看得见的那些效应来维持其生命力，而那些看不见的效应自会令它们丧失合法性。 可以看得见的是，靠向社会搜刮钱财，的确创造出了这些工作机会和利润；而看不见的则是，如果这些钱留在纳税人自己手中，也同样能够创造出这么多工作机会和利润。 在 1848 年，就业的权利曾经在一段时间显示了其双重面孔。这就足以把它毁在公众舆论手中。 一副面孔被称之为：国立工厂；另一副面孔则是：加税 45 分。 每天，有上百万人从赛纳河两岸涌入国立工厂工作。这是这枚硬币美好的一面。 然而，这枚硬币还有另一面。为了从保险箱中拿走那几百万法郎，首先得有人挣出那数百万法郎。于是，就业权利的那些创办者们最后都不得不转而向纳税人伸手。 于是，农民们说了：“我必须交纳 45 分。因此，我就会失去一件衣服；我不能再给我的田里施肥了，我不能再雇人修缮我的房子了。” 于是，等人雇佣的手艺人们说了：“由于我们的老板没法添置新衣服了，所以，裁缝的活儿就少了；由于他无法再给自己的田地施肥了，所以帮工的事也少了；由于他没有钱修缮房子了，所以木匠和砖瓦匠的工作也少了。” 因此，事实已经清楚地证明了，你不可能从一桩买卖中两次获利；也证明了，由政府掏钱创造工作岗位，其代价就是纳税人不能再掏钱创造就业岗位了，这就是就业权利的最终结局。大家都看到了，它既是一种不公平，也是一种幻想。 然而，获取利润的权利无非是就业权利的一种扩展而已，却仍然很有生命力，仍然大行其道。 贸易保护主义者让社会所扮演的角色是不是多少有些可耻？ 贸易保护主义者对社会说：“你必须给我提供工作岗位，更有甚者，你必须给我提供有利可图的工作岗位。我曾经愚蠢地选择进入这个行业，结果，我现在亏损了 10%。如果你对大家征收 20 法郎的税金的时候，给我来个免税，那我就从亏损转为赢利了。现在，实现赢利就成了一种权利，你有义务满足我的这种权利。” 社会听信了他的这一番诡辩，在对全社会都征税的时候，却让他例外。社会没有认识到，那个行业的亏损被它勾销，并不等于它不是亏损了，因为其他人被迫承担起了那个亏损一一我倒是觉得，这个社会也只配承担别人强加给它的这些负担。 因此，从我上面讨论的很多问题中我们看到了，不了解政治经济学就会使我们在面对某一现象的直接效应时昏了头；而了解政治经济学之后，就能够全面地考虑各种各样的效应， 既包括直接效应，也包括远期的效应。 我本来还可以找出一大堆问题进行一番同样的分析，不过，我还是决定不这么做了，因为道理都是一样的，论证起来都是千篇一律，我希望把夏多布里昂谈论历史的一段话用到政治经济学上，作为本文的结语： 历史总是有两种后果：一种是当下的，几乎同时就可以认识到的；另一种则是比较遥远的，最初觉察不到的。这两种后果经常是互相抵触的，前者出自我们短视的智慧，而后者则需要我们具有目光长远的智慧。幸运的结果总是合乎人性的结果。在人的后面站着上帝。有人尽管竭力地拒绝获得至上的智慧，不相信这种智慧的力量；或者玩弄概念，把普通人称之为天意的东西称为 “环境的力量” 或者是 “理性”；但是，看看那些已经完成的事情的结局，你就会发现，如果一件事情不在一开始就建立在道德与公正的基础上，则其结果必然会是南辕北撤，适得其反。（夏多布里昂，《墓外回忆录》）","categories":[{"name":"Blog","slug":"Blog","permalink":"http://maneback.github.io/categories/Blog/"}],"tags":[]},{"title":"碎碎念|0","slug":"sui","date":"2019-05-14T14:27:39.000Z","updated":"2019-08-01T13:58:54.000Z","comments":true,"path":"2019/sui/","link":"","permalink":"http://maneback.github.io/2019/sui/","excerpt":"","text":"今天，想要开一个新的分类，姑且取名为碎碎念。其实还曾经考虑要不要叫自说自话、与自己对话。但是现在的我用这么高深的标题，怕是撑不住，还没到自说自话的水平吧，我的自说自话，只是瞎想乱想，可能有时悲观，有时乐观，有时迷茫，有时鸡汤。可能什么都有，也可能写得很多，但估计更多时候写得会很少。其实也在纠结那么少的文字来占据一页的博客是不是值得的，但是我貌似也找不到其他合适的地方来记录下来。“孤独的人多话多”。 而且感觉自己的思考不够，看待问题的时候，总会被别人的观点带着走，其实好多人在写文章的时候是有预设立场的，他站在他的立场上去批判或支持某件事，某个人，对那个作者来说，都是没有是非之分的。但是，最最重要的是，你也要有自己的立场，不能看人支持的时候，你就支持；再看到另一个人反对的时候，你就开始反对。而你，有是站在谁的立场上的呢。虽然可能你的想法没那么重要，你的话语没那么有影响力。你可以聆听他人的想法，但是不要被别人带着走。 虽说这世界并不是黑白分明、非黑即白的，但是有时候是有善恶之分的，更有立场之分，俗话说屁股决定脑袋。 至于为什么想要开这个分类，因为我发现，我最近在写文章的时候，每次给文章选分类的时候都很纠结。This is the life 这个分类里面的内容现在已经越来越臃肿，越来越复杂，与我当初的设想已经相差太多了。而其实我当初也不知道自己将来会写出一些什么东西来，但是那些东西写完了貌似就没有再看过了。而且技术类文章没写多少，光是每天的胡思乱想，废话真多。 至于这个分类之后会写一些什么，我也不知道，反正是想到什么就写什么吧，写自己的立场，自己的观点，希望自己能多追一些热点，写一些对热点的看法、评论。但是这又是一个很难的事情，需要你有足够的积累，足够的思考，才能有足够的深度，不然只流于形式，流于表面，把事件经过又抄了一遍，有什么用，还可能被别人告你抄袭。因此要有足够敏锐的目光。 至于这个分类跟之前的\"This is the life\"有什么不同？我也还没写想好。那么这个分类的另一个重要的作用，就是让我在选择分类的时候不要那么纠结。一定要分清主次啊，内容才是主要的，至于是在哪个分类中，没那么重要，甚至都是没用的。专注于创作内容。 反正在这里，我写的是什么也没人看得见，我也不会翻回来看，就这样吧。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"http://maneback.github.io/categories/碎碎念/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://maneback.github.io/tags/blog/"}]},{"title":"逃避可耻且没用","slug":"taobikechi","date":"2019-05-06T14:26:45.000Z","updated":"2021-01-06T13:26:44.861Z","comments":true,"path":"2019/taobikechi/","link":"","permalink":"http://maneback.github.io/2019/taobikechi/","excerpt":"","text":"1.从来遇到的挫折太少 从小学到初中都要因为学习成绩很好，成为了老师眼中的好孩子，成为了班级同学称赞的中心。几乎从来没遇到过什么挫折，没遭遇过什么不顺利，没遭到过批评，没遭到过反对。甚至老师对于某些事情也都可以假装看不见，可以得到特殊照顾。 所有人都会认为我的未来会很顺利。这是对的，因为站在他们的角度，我能所取得的成就，会是远高于他们这些人，他们当然会想不到我会遭遇什么不顺，什么困难。他们认为我的未来会超过那些一辈子没有出过农村，大概这辈子也没机会离开农村的这些人的，甚至都想不出一个合适的形容词，只会跟我说，你将来会很有出息。因为在他们的想法里，念书成绩好，将来就会很有出息，至于为什么，至于对不对，至于这两者有没有关系，有什么关系，他们没有说，他们也不知道。要想取得成功，靠的是不断的努力，靠的是不断的尝试、碰壁、调整、再尝试，这一路肯定是磕磕绊绊的，毋庸置疑。 可是我呢，之前的我都一次次地选择了逃避，然后靠着自己从前的一点点小小的微不足道的成就不断地沾沾自喜。因为害怕困难，不敢面对困难，逃避过去了就还以为自己战胜了它。从来都是硬着眉头去糊弄过去。一次次的逃避只会使自己变得越来越胆小，越来越懦弱，越来越悲观。 从前受到的挫折太少了，所以现在一点点地面对到问题时，第一想到的还是逃避。逃避，逃避，一次次在淘必中磨掉了自己的斗志。但是终究会遇到逃避不了的问题，遇到无法解决的问题，而这一切都是自己之前的逃避种下的恶果。但是，你，没有支援，没有其他方面的优势可以去弥补。 所以，人啊，还是要趁着年轻，多经历一些挫折，多尝试一些失败的滋味。 2.基本功不扎实，专业能力不足 必须承认，大学四年，你除了最后一纸没用的成绩单，除了保研，几乎没有什么收获。保研本校，也不是什么值得炫耀的事情。理论水平，实践水平，创新意识，创新想法，这些都几乎为零。认知水平、思考深度、思维逻辑、系统思维，大局意识，甚至是人际交往、人生规划、远见，都跟你四年刚入大学时候差不多，根本没什么长进。但是，专注力、记忆力、斗志却都减弱了许多。 虽然一方面学校在教育。授课方面确实存在很大的欠缺，这是一种非常普遍的现象。但是事在人为，把责任完全推给其他人，抱怨其他事情，是对自己极不负责的表现。在这种情况下仍然会有人取得很大的成就，他们看清了现实，选对了路，而不是成天地抱怨这抱怨那。是你自己不够努力，不够认真，不够投入，不够拼。但事已至此，现在再思考自己是否适合这个专业，自己是否适合读研早已经没有什么意义。到底是相信努力终究会成功，还是选择早点止损，到底是选择更重要还是努力更重要。我想我没有从头再来的勇气，没有时间和机会，但是更没有这股闯劲，不改变自己的现状，换条路则还会是这样。现实的包袱太沉重了，我是一个悲观的人，凡事喜欢做最坏的打算，因此不敢去轻易尝试，因为害怕失败。 过了四年，你只不过还是一个只会死读书，读死书的书呆子。曾经你以为考试分数高就代表了一个人所有的成功，但是从小学到初中确实是这么一个现状，甚至会因为学习成绩好而获得某种特权。但是事实不是这样的，现实并不是这么简单的，一个人的人生应该是丰富多彩的，评价一个人的标准也应该是多样的。但是比过去更可悲的是，我仿佛还只能沿着这条路继续走下去，看不到改变的希望。 3.周围环境 我每天，身处在一个压抑的学习环境中，一个让人感受到很大压力的实验室中，气氛一点也不活跃，甚至总感觉周围有许多双眼睛盯着自己。我同时还处于一个十分压抑的生活环境中，一个让人感到十分厌烦的宿舍中，空气混浊，人员放纵。难道科研就是这样，为什么我就从来没有感受到过科研的快乐？只是每天坐在那里重复着，尝试着，没有突破，没有进步。 ​ 我仿佛已经很久没有接触异性，和异性面对面交流了，除非是有什么事情。我已经更久更久没有途径去认识新的异性了。从实验室，宿舍，到食堂，在我周围的都是男的，其实更多的时间都是自己，无论是男还是女，都没有。连个说话的人都没有，甚至翻看微信列表，也不知道找谁去聊天，因为不知道过了这么久，这么久，应该从哪说起。这种环境下，怎么能不孤僻，怎么能不沉默，但是我也不想这样的啊。 4.总结 最近毕设做得心烦意乱，而且看着越来越多的人做完了，论文写得也差不多了，就越焦虑。按理说，我大学四年过得也不算荒废啊，水平再差也不至于被这个谁都能过的毕设所难住吧。 这时候又开始纠结到底是选择更重要还是努力更重要这个哲学问题，可是也没有什么意义。当初有不止两次的机会使我可以离开这里，避免这一切，可是第一次因为我没有主见，因为我怂，我失去了；第二次是因为我真的是不想要走向那个方向。可能那条路现在轻松一点，但是对将来看不到什么希望，这条路至少现在来讲还是能知道未来能不能干一些什么的。所以最后哪个都差不多吧。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"人生","slug":"人生","permalink":"http://maneback.github.io/tags/人生/"}]},{"title":"套路贷简史","slug":"taoludaijianshi","date":"2019-05-06T13:25:53.000Z","updated":"2021-01-06T13:26:44.861Z","comments":true,"path":"2019/taoludaijianshi/","link":"","permalink":"http://maneback.github.io/2019/taoludaijianshi/","excerpt":"","text":"0 写下这篇文章时，我的心情是复杂的。 我知道这篇文章能有耐心读下来的人不多，因为很长，很硬。 这不符合娱乐至死年代的快餐文。 我也知道这篇文章可能也活不太久，我写过的团贷与P2P的消亡简史，很多人都看过，但没多久就消失了，因为得罪的利益方太多了。 但是我依旧想写，想告诉大家这段网上搜不到的套路贷历史。 这篇文章我并不在意多少人能全文读完，只想当有人搜索套路贷的时候，他可以知道，这个世界上曾经发生过这段充满着人性矛与盾争斗的历史。 这段历史不应被忘却，不然未来，只会是历史的一再重演。 1 2007年，国内第一家网贷公司成立，开启了网贷的时代。 但那个时候同样也是国内线下贷款公司迅猛发展的年代。 在那个年代，银行还是高高在上的存在，信用卡和贷款准入门槛极高。 除了小部分特别优质的群体，大多数人都无法享受到大额的信用贷款。 但贷款是永恒的刚需，银行不借，自有民间资本。 这给了很多线下贷款公司机会，他们是国内最早一批玩儿套路贷的群体。 他们用月息3%到10%的利息在放贷，并且发明了使用服务费来做砍头息的玩法。 假使一笔50000元的贷款，服务费一般10到20个点，到手45000到40000元，然后按照50000元为基数算利息，等额本息还钱。 假使你借了1年期的50000元，到手只有40000元，一年下来，你可能要还10W元以上。 如果你不还，等待你的将是无止境的催收。 很多线下贷款公司，沿用了银行的风控政策，只是宽松一些。 所以多数时候借款人都是有稳定工作的体面人，他们最害怕贷款公司派人到单位和家里去闹，只能拼命凑钱还债，肥了催收。 那个时候，线下催收极为猖獗，由于这种贷款的金额高，利息高，所以往往也值得线下催收。 但在催收过程中，暴力，流血频频发生，这些都是带血的钱。 有几家现在看起来风光的美股上市互金公司，早年就是靠这个起家的。 毕竟高利贷是人类最古老的生意之一。 而资本的原始积累，必然是血腥的。 2 2010年开始，消费分期开始兴起。 人们一夜之间发现手机，数码产品，乃至电瓶车，都可以分期了。 很多正规公司都推出了分期服务，主要针对的就是工厂打工的社会蓝领，他们有消费需求，也有信用，也有稳定收入（工厂工资），只不过银行不乐意放给他们款。 而在此时，另一种套路贷开始兴起，打着商品分期的名义做。 蓝领，就是他们的核心目标。 蓝领们多数从家乡来到城市打工，看到了自己以前没有看到的景象，消费欲望强烈，同时渴望融入城市。 于此同时，他们的文化水平一般，对于费率的算法搞不清楚。 这种套路贷，针对的就是他们的消费欲望以及糊涂。 消费分期本质上是不给钱的，只是分期产品，然后每月还产品的钱。 给产品总不如给钱刺激，所以很多公司开始打着商品分期的名义在给现金，方法是先商品分期，然后低价回购商品，这里的低价就是贷款金额，而还款还是按照商品全款还。 这是一种变相的砍头息，高的可以做到50%砍头息，一台手机可以做几百人的生意。 而很多蓝领兄弟为了多一些现金消费，多一些灯红酒绿的日子，甘愿借这些钱。 银行不借给他们，大型信用贷款公司也不借给蓝领，所以他们只能被剥削着拿这些现金。 蓝领虽然有相对稳定的收入，但是50%的砍头息依然是要命的，他们必然还不上。 在这个期间，飞单和接盘开始兴起，这些套路贷公司开始把他们飞单给其他套路贷，让他们去借别的公司的钱还自己，于是在一轮一轮的债权转换后，蓝领们背上了一辈子都还不上的贷款。 记得吗，那个年代线下催收还是非常流行的，很多换不上钱的蓝领最后总会遭遇一些奇怪的意外，这是真正的带血的印子钱。 虽然后面由于实在太过分，大量坏账用线下催收也催不回，大量套路贷公司跑路，但是飞单和接盘的玩法，流传了下来。 这两大玩法，是永远架在借款人头上的达摩克利斯之剑。 3 2014年开始，针对蓝领的消费分期套路贷已逐渐退出了历史舞台。 但高利贷舞台上怎么会缺少见钱眼开的舞者？ 这一次被套路贷盯上的，是大学生。 大学生，实在是高利贷的优质群体。 大学生人傻，算不清高利贷的利息，并且对社会套路和身边人的防范心过低，天真。 大学生钱多，虽然自身生活费有限，但背后还有不会见死不救的父母，有钱。 大学生好推广，在需要搞定几个学生干部，在校园随时可以拉一批人推广，还可以以做兼职和实习名义搞。 大学生欲望大，正是血气方刚爱攀比虚荣心旺盛的年纪，看到身边的同学都用的好的，自己也想要。 大学生容易催收，因为年轻，要面子，所以一旦威胁告知学校老师同学，往往就会就范，另外很多学生对贷款本身也不够了解，容易被欺骗威胁。 这一切要素聚集，学生贷失控了。 在那个年代，每个大学校园里都是各家学生贷的广告，通知栏，寝室门，书桌，厕所，食堂，广告无处不在。 而最致命的广告，来自学生本身，很多学生成为了学生贷的校园推广大使。 这些人为了一些提成，拼了命的帮学生贷拉人头，不惜利用同学关系和道德绑架，甚至他们为了完成任务骗自己的同学资料来申请学生贷款。 我说过大学生脸皮薄，而且容易轻信同学，很多人都是被同学骗的。 甚至有一些学生专门骗身边人贷款下来自己花。 当时爆发了很多问题，恋人之间互相骗，学长骗学弟学妹，室友骗室友，为了钱，人人都可以是恶鬼。 而这些套路贷们，不仅用超出常人的利息收割学生，同时也在搞着别的把戏。 利滚利，砍头息，借新还旧，骗资料，假下款，推荐更多贷款机构，这些都是基础操作。 很多学生被催收逼的跳楼，很多家庭被利滚利的几十万拖垮，这些高利贷，该死。 而威逼利诱女学生去做一些特殊服务，更是案例不少。 在高利贷眼中，学生没钱不要紧，年轻的肉体，本身就是钱。 当时甚至有套路贷公司专门依靠套路来逼女学生下海，为当地夜总会提供货源，还能收一些服务费提成。 短暂的狂欢后，是监管的介入，各大高校禁止校园贷，学生贷公司更被严厉打击。 但潘多拉的盒子已经被打开，又怎会轻易合上？ 金钱面前，人已不是人。 4 2015年，学生贷短暂被遏制后，借条类产品又火了起来。 当时最活跃的产品是某某宝，他们搞地推，只要填写资料留下身份证信息，就直接现场发钱，并且拉人头还给钱。 很多人的绝密资料，为了去换回区区几十元，就卖了。 而且他们还拉来了更多的人，这批被卖掉的资料，后面不知道被用来做了多少见不得光的事情。 地推配合互联网高利贷，无往不利。 虽然某某宝本身不做贷款，但其为放印子钱的高利贷们提供了有用的工具。 借条的本质是一个平台，平台一边是出借人，一边是借款人。出借人可以自由设置结款条件，费率，借款人如果逾期后，平台还会提供催收服务。 发现了没有，这种无限制的产品天生就是为黑恶势力放高利贷而生的。 我说了，借款是永恒的刚需。 一时之间，那些因为学生贷撤退而债务崩溃的年轻人们，纷纷涌入各大借条类产品。 而这些放印子钱的借款人，玩出了新的花样。 除却标准的砍头息，利滚利，卖人头之外，他们开始搞一种叫做裸条的东西。 讲白了就是，想借钱，除了要付高额的砍头息和利息外，还要拍摄几张手持身份证的全裸照片或者视频。 出借人甚至会依据借款人的相貌来评估放贷额度。 这些年轻人用裸照换回来的钱，是多少？ 最多也就2000块，到手800块，一个礼拜后还2500，不然全网公开裸照。 裸条在短时间兴起，也在短时间结束，公安大量抓捕这些放裸条的黑恶势力，裸条虽然转入地下，但很多玩法思路，在下一代产品中有所体现。 在金钱面前，人不是人。 5 2016年，互联网小额高利贷，登上了历史舞台。 这是流毒至今的产品，公安早已将其定性为黑恶势力。 那个时候的产品，叫现金贷，又叫发薪日贷（Payday Loan）。 在欧美国家，发薪日贷非常发达，说白了就是1个月期限的高利贷款，这个月借，下个月发工资的时候还，由于欧美很多公司是半月或者以周为间隔发钱的，所以PDL的期限是1周到1个月，费率一般是30%到50%。 即使在欧美，这也是臭名昭著的产品，并且只接受线下申请。 而当时国内互联网发展极其迅猛，互联网的高效率和技术驱动，配合PDL的剥削本质，带来的是质变的飞跃。 当时的国内，这类普遍产品是1000到3000元，1到3个月，月费率6%到15%的普通小额高利贷，又叫现金贷。 当时贷款针对的主要是正常的蓝领或者小白领或者大学生，学生贷接着PDL的出现死灰复燃了。 因为互联网驱动下的高利贷公司可以放全国人的在线贷款，所以脱出了之前某一片区的限制，在2016年，这个市场还是一片蓝海，也是现金贷的第一波红利。 当时做的好的公司，一个月的净收益，是放贷总额的10%。 而且还可以利滚利，真实收益还要翻倍，这是真正的吸血。 资本嗜血，而技术成为帮凶。 6 可惜好景不长。 因为现金贷本身小额短期高费率的特点，正常人是不会借的，正常人会去找贷款公司去借1000元1个月利息15%的贷款吗？ 尤其是在2016到2017年，银行的准入门槛已经很松了。 这种对用户极为不友好的吸血产品，同样也是对用户阶层的一次逆向筛选。 会借这种钱的，大多是用于虚荣消费，或者赌债，或者不良嗜好的低收入群体和大学生，要么就是经济和信用已经崩盘的人。 这些人的特点是不仅收入低，并且对于资金管理和利息敏感度低。 当最烂的群体碰上最高效的互联网高利贷，多头负债就会非常普遍。 2016年7月，我对行业做过一次多头负债排查，现金贷人群的平均贷款数量为3家；2017年1月，这个数字是15家；2017年7月，这个数字是，22家。 到了2017年9月，这个数字是，32家。 借款人的多头负债正严重恶化，很多人已经实质性破产了，因为收入连每月的利息都覆盖不了，要是被哪家拒绝下款，立刻负债链就会爆炸。 但奇迹的是，没有爆炸。 因为各大公司，都发现了现金贷的暴利。 而自己原有的生意，和高利贷比，简直是过家家的玩具。 于是千军万马转高利贷，巅峰时有将近300家上市公司以各种形式参与了高利贷，更别提各个中小公司，互联网公司了。 他们的野蛮涌入，给那些原本要爆仓的底层人民续上了命，也给那些坏账即将爆发的公司，接了盘。 高利贷公司之间也有接盘的概念，就像野狗饿极了也会互相吞噬，这是自然规律。 很多表面高大上的互金公司，本质上就是一条条野狗。 7 野狗互舔的过程中，互联网高利贷也沿用了前辈们的套路，还开发出了新方法。 这个套路叫做【刻意逾期】。 众所周知，互联网高利贷的费率非常高，而逾期后的滞纳金更是搞的吓人。 为了能赚取更多的利润，当时非常多的贷款公司专门在还款上动手脚，故意让借款人没法在还款日还款，只有在逾期几天后，还款功能才会正常，以此来收取高额的滞纳金。 如果不从，则催收轰炸通讯录，问候全家。 渐渐地，由于利润实在丰厚，很多头部公司也开始玩儿【刻意逾期】的套路。 就在所有高利贷公司都在庆贺自己找到了印钞机时，危机来临。 转折点发生在2017年底，某头部高利贷公司（之前也是头部学生贷公司）美股上市。 当时他们的利润非常恐怖，市值甚至达到了百亿美金。 在面对公众质疑其放高利贷时，其老板亲自回应道：【不催收，就当做慈善】，这在整个行业乃至全国，引起轩然大波。 高利贷公司竟猖狂至此？ 监管开始出手，这家公司股价开始崩塌，与其一起崩塌的，还有整个网络现金贷行业。 这个时间节点是，2017年11月。 贷款，本身是有周期性的，一般到了年底，各家公司都在缩量，因为第一次还款日会在过年期间，这个时候催款很困难，并且很多借款人过年回家后，年后可能会换个地方打工。 年底缩量配合监管出手，整个行业都开始了逃亡。 所有公司都在拼命催款，并且坚决不再放款，而借款人们发现国家在打击，统统不还款，要死了不还。 大家都是一条链上的蚂蚱，要炸一起炸。 很多公司的坏账率一度飚到90%。 史称网络高利贷第一次大崩盘。 8 但高利贷这个生意，只要有钱赚，永远不缺不怕死的。 2018年3月，现金贷死灰复燃。 经过了第一次崩盘后的高利贷公司，痛定思痛，想清楚了一件事情。 自己放出去的钱，本质上不是放给穷人的，而是放给下一家接盘高利贷公司的，他们才是接盘侠。 所以聪明的做法是，贷款期限缩短，降低金额，收砍头息。 只要自己资金周转足够快，最后借款人财务奔溃时，谁跑快，谁赚得多，谁讲道理，谁死。 在经济学上，这叫劣币驱逐良币，在社会学上，这叫比烂。 我更想叫他们狗咬狗。 然后这样一款产品就诞生了，1000元借款，到手只有只有700元，7天后要还1100元。 10秒下款，是人就放。 自此，高科技与套路贷的完美结合，新的产品诞生了。 史称714高炮。 714高炮的收益模型中，年化利率可以做到1000%以上，净利润可以做到每月40%以上。 然后一场击鼓传花的游戏就开始了，各家公司的债权在那些底层群众的身上流转，跑得慢的就是死。 那些大公司，看到714这么赚钱，想到现金贷的甜头，又过来舔了，这次一起来的，还有上一波现金贷浪潮中各大公司的中高层管理者，他们纷纷下海，打算在714中捞一波。 然后比第一波现金贷浪潮更大的浪潮来了，我管这个叫野狗年代，因为这些公司都是野狗，爬在底层人民身上无尽的贪婪吸血。 714浪潮中，大家发明了一个击鼓传花的套路。 就是贷款人逾期时，不恐吓催收，而是指导他们去其他同行手里借钱还给自己，然后继续下款，反正有砍头息在，自己横竖都是赚。 借款人被作为标的物，在各家公司间卖来卖去。 在这个过程中，一个典型的高利贷借款人，身上背负的714高炮，已有大几十甚至上百家，永远也还不清了。 大家都心照不宣地赚钱，在疯狂收砍头息，在拼命磨牙吮血。 18年一整年，大量的社会事件爆发，高利贷的各种负面新闻就没有断过。 9 2019年3月15日，315晚会曝光了714高炮，而公安也重拳出击将之定义为非法，是重点打击对象。 新的一轮大逃杀开始了。 这一次，饱受高利贷摧残的借款人变得前所未有的精明，大家看到了315定调，咬死了就是不还钱，怎么样都不还钱，反正违法，反正法律不支持，就是不还。 史称网络高利贷第二次崩盘。 714高炮溃败之后，是不是整个市场就一片清净，高利贷再无踪迹呢？ 不会的，未来，只是历史的一再重演。 55超级高炮，出现了。 就是1000元，5天，50%的砍头息。 1000元，到手500元，5天后要还1200元。 即使坏账高达80%，也不会赔钱。 新的套路再次出现，一个高利贷资金方，注册几十家高利贷公司，同一个APP代码套几十个不同的壳，这些公司从1号到55号来算，专门做55超级高炮。 小A走投无路，借了1号公司的贷款，付了50%砍头息，肯定还不上； 这时，1号公司的催收，回去指引他到2号公司借款还债，2号公司也是他们的55高炮，这样小A又被收了50%的砍头息，剩下的钱去还1号公司。 只要控制得当，小A会在这些公司里被无限循环下去，只需要1000块，就可以套路小A无数个500块的砍头息，并且把小A的债券做的特别特别大，最终背上10W的债都是轻轻松松的，当债权做大后，把小A的一切信息包含债权，卖给专门收购债权的线下催收公司，这些公司把很多人的债权集合到一起，形成大额的债权，然后用暴力恐吓的手段来要债。 前段时间杭州某高利贷壳公司的老板被抓，旗下有1300多个高利贷的壳。 而他本身只是某个大公司的代言人，之一。 高利贷是把用户当傻瓜；714是把用户当提款机；55高炮，是把用户当成一块肉，是可以榨出血水后渣子喂狗的肉。 10 随着55高炮的出现，以及风头过后的平静。 大量高利贷公司又开始了放款，整个市场上三方数据的调用量又开始逐渐恢复。 被高利贷剥削的人们，负债越来越严重，这又是一个击鼓传花的游戏。 游戏规则是，谁放款的费率高，期限短，砍头息多，谁才能赚到钱。 借款人本身只是待宰的猪。 高利贷公司的屠刀早已挥下，砍头息，暴力催收，生命威胁，各种乱象频发，大家都急着榨干他们的最后一滴血，趁热吃。 而催收乱象，已经到了过分的地步。 催收公司的手段自然就比较血腥，电话轰炸和语言威胁只是基础，很多催收公司甚至将借款人的照片P到黄图上进行散播威胁，还有的直接伪造律师函，甚至还有伪造公安通缉证明的。 甚至业内出现到借款人被逼到精神崩溃跳楼，警方赶到时，电话响起，接起来又是催收员的骂声。 为了钱，他们敢于践踏一切。 高利贷的第三次大繁荣开始了。 但第三次大溃败，也随之而来。 这一次监管做的非常聪明。 核心打击目标除了东躲西藏换主体的高利贷公司外，还有为高利贷提供系统的三方公司以及为高利贷提供催收服务的外包公司，既然挖矿的不好抓，卖水的总归跑不了。 近几个月，公安不停在抓各类高利贷系统公司以及进行非法暴力催收的公司，效果非常棒。 每端掉一家高利贷系统供应商，就会有一批高利贷死掉，因为他们所有数据都在系统中，服务器被干掉后，直接导致无法回款。 而那些暴力催收的公司被打掉后，这些高利贷更是失去了最后的风险兜底。 很多高利贷公司老板的钱，也是从民间借贷搞来的，很多回款失败的高利贷老板，也在面临资金方的追杀。 吃下去的血馒头，总有吐出来的那天。 吃人者必被人吃。 11 这篇文章写到这里，我突然很难过。 我知道即使监管继续加强，随着技术的进步，高利贷将会继续下沉，继续进化，形式更加先进，打法更加隐蔽，费率继续暴涨，继续吸人血，既然可以做5天50%的贷款，为什么就不能做1天50%的贷款呢？ 我当年从银行离职加入互联网，就是为了践行人人都能有信用的理想。 那时的我们想用技术改变这个世界，为真正有需要的人放款。 那时我们觉得金融可以让世界更好一点。 一开始我们卓有进展，但后来，一切都变了。 我们走的太快，太快了。 当钱来的太快时，一切欲望就失去了枷锁。 我们曾经为了最新的技术和最好的风控策略举杯。 但现在我们碰杯，都是梦碎的声音。 我们引以为傲的技术和策略，成了高利贷的帮凶。 我知道某些人只要有钱赚，谁管这钱是不是带血的？ 我知道在某些人眼里，钱才是这个世界唯一的正道，朝闻道，夕死可矣。 我知道在某些人嘴里，普通老百姓都只是韭菜，或老或新而已。 我知道很多表面高大上的金融精英，背地里什么礼义廉耻都不要，什么吸血抽髓的把戏都出来了，就是为了从同胞身上榨取最后一滴血。 我知道高利贷不死，高利贷永生。 我管不了别人，我只能管我自己。 后来我离开了这个行业，因为我无法容忍自己的能力被用在吸血上。 而我们曾经同行的那批人，绝大多数都沉浸在嗜血的利润中无法自拔，还有一些已经进去了，一劳永逸的财务自由。 或许我能做的不多，因为只要利益存在，资本就可以践踏一切。 但我还能写，能把这些阴暗的勾当摆在阳光下，被更多人看到，不管是助力监管还是让更多人避免上当，只要对公众有益，就够了。 资本的力量下，我们或许都是蝼蚁。 但蝼蚁，也有自己的尊严。","categories":[{"name":"Amazing","slug":"Amazing","permalink":"http://maneback.github.io/categories/Amazing/"}],"tags":[{"name":"文章","slug":"文章","permalink":"http://maneback.github.io/tags/文章/"}]},{"title":"python异常处理","slug":"python-exception","date":"2019-05-04T02:59:22.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/python-exception/","link":"","permalink":"http://maneback.github.io/2019/python-exception/","excerpt":"","text":"异常处理 python中使用try ... except来处理异常 try 语句的工作方式如下： 首先执行try子句中的语句。 若没有异常发送，则忽略except子句中的语句，程序正常运行。 若在try中发生了异常，那么try中的剩余部分将会忽略。如果发生的异常类型与某个except中指明的相符合，那么执行对应except中的语句 如果异常没有与任何的except匹配，那么传递给上层的try中。 一个try语句可以包含多个except, 但是至多只有一个会被执行。 一个except子句可以同时处理多个异常，这些异常放在括号里组成一个元组，例如： 12except (RuntimeError, TypeError, NameError): pass 最后的一个except可以忽略异常的名称，当做通配符使用，可以使用这种方法打印一个错误信息，然后再次把异常抛出。 12345678910111213import systry: f = open('my.txt') l = f.readline() i = int(l.strip())except OSError as e: print(\"OS error &#123;&#125;\".format(e))except ValueError: print(\"Could not convert data to an integer.\")except: print(\"Unexcepted error: \", sys.exc_info()[0]) raise try except 语句还有一个可选的else语句，放在所有的except之后。这个子句将在try没有发生任何异常的情况下执行。 12345678for arg in sys.argv[1:]: try: f = open(arg, 'r') except IOError: print('cannot open this file:', arg) else: print('&#123;&#125; has &#123;&#125; lines'.format(arg, len(f.readlines()))) f.close() 使用else语句比把所有的语句放在try子句里面要好，这样可以避免一些意想不到的、而且except子句没有捕获的异常。 抛出异常 你可以使用raise语句来抛出一个指定的异常。即运行到这句话的时候，就会发生异常。 raise的参数必须是一个异常的实例或者是异常的类。 12345try: raise NameError('Hello World')except NameError: print('An excepton occurred!') raise 用户自定义异常类 用户自定义的异常，继承自Exception类。 123456789class MyError(Exception): def __init__(self, value): self.value = value def __str__(self): return repr(self.value)try: raise MyError(4*4)except MyError as e: # 这是一个异常的实例，用于访问异常的属性 print('My exception occurred, value: ', e.value) 定义清理行为 try语句中还有一个可选的finally语句，定义了无论在是否发生异常的情况下都会执行的清理行为。 无论try语句中是否有异常，finally子句都会执行。 如果一个异常在try子句中被抛出，但是没有任何的except把它截住，那么这个异常将会在finally语句执行后被抛出。 123456789101112131415161718192021222324def divide(x, y): try: result = x/y except ZeroDivisionError: print('dividion by zero') else: print('result is ', result) finally: print(\"executing finally clause\") [in 1] divide(2, 1)[out 1]result is 2.0executing finally clause[in 2] divide(2, 0)[out 2]division by zero!executing finally clause[in 3]divide(\"2\", \"1\")[out 3]executing finally clauseTraceback (most recent call last): File \"&lt;stdin&gt;\", line 1, in ? File \"&lt;stdin&gt;\", line 3, in divideTypeError: unsupported operand type(s) for /: 'str' and 'str'","categories":[{"name":"knowledge","slug":"knowledge","permalink":"http://maneback.github.io/categories/knowledge/"}],"tags":[{"name":"python","slug":"python","permalink":"http://maneback.github.io/tags/python/"}]},{"title":"为何这么难","slug":"benz","date":"2019-04-15T11:00:12.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/benz/","link":"","permalink":"http://maneback.github.io/2019/benz/","excerpt":"","text":"想想确实挺尴尬的，我在微博上关注了十来个汽车博主大V，可是奔驰漏油事件发生这么久了，大家竟然都集体沉默了。我也不知道是因为我关注的人的偏差还是什么，反而声讨这件事最多的，是两个记者和一个医生。 如果没有观点，不想表达观点，不敢发表看法，就选择沉默吧，请不要再避重就轻地狡辩了。作为公众人物大V这样表达其实就是相当于表明立场的了，只是很可惜并没有站在普通消费者的立场上，有人认为你不帮我，你就是错了。可是这些人毕竟还是要吃饭的，靠谁呢？靠你们这群没有车买不起车的键盘侠粉丝吗？像我这种键盘侠都能瞎BB几百字，作为靠汽车吃饭的大V会觉得无话可说我是不相信的，没有看法的原因就使劲猜吧，你再去看看车企每年给媒体砸了多少广告费。 当然我们没有必要，更没有理由去人家每条微博下面评论要求人家去发表观点，发表观点与否是人家的自由，要是观点不被接受更会被喷死，还不如不说。况且人家几百万粉丝多你一个不多，少你一个不少，根本没有任何影响，你还吵不过那些脑残粉。 事情发生了这么久，这条转发奔驰声明的微博，成了我关注的汽车自媒体的唯一一条与事件直接相关的微博，不过也还是同样没有发表自己的观点，一个字都没有。其他的都是在解释自己为什么没有讨论这件事，某人竟然说出了“转发凑热闹没啥意义”这种话，找各种理由为自己的不作为辩护。 没想到汽车博主大V成了间接受害者。不过这件事情这么热闹，大家总得找个地方讨论一下。打开一个汽车博主的微博，什么？他竟然都没有相关微博？更不要说有什么评论了。那就在其他的微博下面问一问吧，不然你让他去问谁？美食博主吗？卖片的吗？好不容易提问的人多，把人家问烦了，极不情愿地发一条微博还无关痛痒，避重就轻，反正一句话不在点上。最终的效果还不如不发，至少不会公开招骂，大多数还是选择继续沉默，可能他们也第一次意识到粉丝多了也是一件坏事。你看什么不能判断谁对谁错啦，什么店大欺客国内国外都一样就都出来了，好像我们就得无条件接受一样。甚至还在说什么大家都可能有问题，所以我车出问题了并不意味着我有错。这都是些什么奇葩逻辑。重点不是车的质量问题，而是该怎么解决的问题。 维权应该靠法律，而不是靠媒体。这道理我们都懂，但是有些时候有些东西就是这么靠不住，普通人维权是那么容易的事情吗？如果那么容易解决谁愿意把自己的丑态曝光到网上，好看吗？不好看。如果这件事没有被曝光，最后会得到解决吗？从15天前就该解决的问题，已经拖了15天，明摆着就是看人好欺负，不想好好解决。这些博主对于维权可能确实不会有什么太大的帮助，但是至少应该发声，应该表态，最次最次也应该对这件事有所关注。这是一个多么显而易见的事情(至少在发生惊人翻转之前，一件件事情翻转得我都害怕这个魔幻的世界了)。你再看一下当时疫苗事件时候那些医疗领域的博主是怎么做的，对比一下就看出差别来了，再多的话我也不说了。 所以我们还是先回到事件本身，奔驰会怎么解决这件事情吧，八成会甩锅给经销商。据说有的奔驰4S店已经把车的引擎盖都打开了，害怕其他消费者有样学样也坐在引擎盖上哭。不过奔驰在我心中的良好形象已经倒塌了，从我看完视频的时候就倒塌了。虽然我可能这辈子也买不起奔驰的。 一直以来，这位车主都是占据着有理的一方，但是她的道理没人在认真听，奔驰以及4S店一直是一种高高在上的态度，甚至表示“出于同情”同意退款，看到没，就是这种态度，你看看这些人把你都当成什么了。 更何况现在不光车质量问题，还引出了另外两个问题，一是没有发票目的不明的金融服务费这个可能涉及金融诈骗的问题，现在好了，金融服务费也就会被严查; 当事人还表示她受到了威胁和恐吓，还有人诬陷她这么做是有预谋的。到底是谁泄露了她的联系方式。是谁在背后搞鬼，又是谁害怕了。“我们不解决问题，只解决提出问题的人。”估计到最后可能就不只是奔驰品牌和经销商利之星的违规行为了，甚至可能是引起一系列连锁反应，之前被掩盖的黑幕。 我猜测4S店当初也没想到事情会发展到这种地步，更没想到这个看起来文质彬彬，非常有涵养，有文化的人会来到店里一哭二闹三上吊，被人拍到网上。他们的想法就是尽量拖延，并且不断来试探车主的底线，幻想着能死不认错，用最常用，最霸道(最初想写流氓来着)，损失最小的方式解决掉，而且往常这种方式也挺有效。可是那他妈是66万啊，你们就想这么蒙混过去，你以为看起来老实的人就是这么好惹的吗？！把人逼急了就只能采取这种极端的方式了，你以为人家愿意这么做啊？如果有更体面更简单的方式，何必会这么做。 期待这位车主能够维护好自己的合法权益，一个能在30岁花得起66万买车，受过良好的高等教育，这样的条件超过了多少人了。这么明白道理的人，非把她逼到绝路用这种方法来解决问题，善良的人总愿意去相信这世界也是善良的，可是她没想到别人把她的善良和讲理当成了懦弱。没有有效的途径维权，这到底是她的悲哀，还是什么的悲哀。 说实话，我现在倒有点好奇想看结果反转，结果证明奔驰没有错。估计各大V都该争先恐后转发喜报了，奔驰爸爸怎么可能出问题，你们这些人总想着栽赃陷害。可是这一片祥和的景象估计是看不到了。但是我现在还有点理解这些大V为什么不敢发声，我也怂，(此处略去若干字)。 我是一个悲观主义者，但是我大多数时候还是愿意相信这个世界是善良的，大多数人还是讲道理的，不讲道理的只是少数。但是实际上并不是，总会有人把你的善良当做是懦弱，然后骑在你的脖子上拉屎。而大多数人也没有地方去讲理，只能把老实人逼得用撒泼打野的方式，真是会哭的孩子有奶吃。 最后，悲观一下，人总是健忘的。热点事件总在发生，总在被曝光，人的精力也是有限的。还记得那些当时闹得沸沸扬扬的事件吗？现在呢？结果怎么样了？一切问题都会被时间解决掉，耗费了大量的时间精力最后可能还是没有结果，这个现实就是这个样子。可能对于资本来说，当事件熬过了大多数人的关注，也就相当于解决了，至少是好解决了。反正明天太阳会照常升起，说不定就会有人替他们吸引火力。 这样的人，非蠢即坏。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"维权","slug":"维权","permalink":"http://maneback.github.io/tags/维权/"}]},{"title":"人总是健忘的│2019年04月纪","slug":"2019-04-01","date":"2019-04-01T13:14:21.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/2019-04-01/","link":"","permalink":"http://maneback.github.io/2019/2019-04-01/","excerpt":"","text":"一年了，不对，是一年多了，回头看看， 人总是健忘的 这个系列，第一篇写于2019年4月。已经不太记得为什么想要写这个系列的细节了。只是觉得每天都差不多相同的生活很枯燥，很无聊。每天发生的事情很多，无论是自己身边的还是各种热点事件。更甚至，每天发生的事情，人们接收到的眼花缭乱的信息都太多了，多到超过了人的接受和处理能力。每一件热点事件都会被新的热点事件掩盖，直至淹没在时间的长河中布满灰尘等待后来人去挖掘。但是人都在往前走，很少会选择回头往后看。 那么，这样没意思地度过重复的每一天有什么意义。当时想着就要每个月一号定期回顾，回顾自己，记录每个月的发生的热点事件。但是确是实在没有坚持。一年时间内也才写了四篇。健忘的人终究还是忘了提醒自己不要忘了。中间发生了多少事情，多少感悟，都因为自己的懒惰而失去了多少总结的机会。保研考研都过去了，选导师，选方向，好像没有发生，但是又好像匆匆过去了，而这些都应该值得好好记住的。 不知道为什么，每月一次的总结总是不能在1号完成发布。昨天一天基本上都耗在了楼下机房里面。当网管以来两次事故都是竟然都是因为机房断电引起的。虽然责任并不在我，但是我却不得不承担了并不在我的责任，以及浪费了大量的时间和精力。话说这次的停电事故其实应该是很快就能解决的，但是就是因为我的拖延，虽然猜到了可能是硬件故障，却都不肯进去去看一眼，肯定引起了Y师兄的不满，虽然他说没有怪罪我，但是在他了解实际情况之前，怎么可能？只是当我告诉他断电之后，他才转移了他的愤怒对象罢了。 当你一天天、一件件地记录每一件重要的事情的时候，才会意识到这一个月的时间其实发生了这么多的事情。这样只有当你再回头看的时候，才能够帮你想起这一件事。虽然这件事等过了一段时间后可能对你来说不再那么重要了，但是还是避免自己忘记。 但是还是要记住千万不要为了写而写，不要为了数量而写，更不要为了凑字数而写，这样写出来的会显得很尴尬，但是其实却并没有什么意义，只是单纯浪费时间。 三月真的很快就过去了，就像是那句话“我们究竟是活了365天，还是活了1天，重复了364次。”虽然听起来像是鸡汤一样，但是我好想确实是每天都在机械性地重复。不知道为什么，每当我想起这句话的时候，我都会想起海绵，那时候我对她说了这句话。也许是我一直在羡慕她的生活，也许是嫌自己生活太无趣。我害怕变化，害怕不确定。两年了，回想那次旅行，我没想到我能够在两三天内，在这么多人中能够给别人留下多么深刻的印象，因为我从来都不觉得我在人群中是一个过于出众的人。也许是那时她刚刚大一，还很年轻；也许是我那时也是大二，更是年轻；也许是那时的我还一无所知，也许是我过于害怕不确定。我不知道我是否错误地理解了她的行为，她的想法。这个答案我可能永远也不会知道了，也可能不会有人知道了。 刚刚随手翻了一下那几条朋友圈，更是怀念2017年的那几个月，沙漠，第一次北洋盾，第二次北洋盾，第一次半马。不知道为什么，自己每天做任何决定的时候总是在担心这担心那的。我发现我是一个悲观主义的人，任何事情都喜欢做最坏的打算。我也从来不会对任何人抱有幻想，包括我自己。没想到自己的每一篇文章都充斥满了负能量，每天发生的一点点开心的事情都会很快被负面情绪淹没，每次动脑沉思的时间越长，自己就越悲观。这个完全公开，但是没人能找到我，没人认识我的地方，几乎已经成了我发泄消极情绪的唯一途径，不过我也十分害怕面对过于真实的自己。我突然意识到玩手机刷淘宝、微博、知乎、看视频的我从来不会产生悲观情绪，这是一种好事吗？我认为并不，因为每次这个过程结束之后都会更加加深我的消极。它就像是一种精神鸦片，短暂地屏蔽了我的悲观，只是暂时性地逃避问题，而完完全全没有解决问题。 3月10日，外甥女出生，我突然对于我姐的感情发生了变化，血浓于水的亲情永远是亲情，就像我不知道为什么我会在她的婚礼上止不住哭一样。这种亲情关系永远都是最无私的，不会变化的。而现在随着社会的发展，距离与压力已经造成这种亲情越来越淡化。三世同堂、几个兄弟姐妹的大家庭已经变成了一个个小小的三口之家，这是现代社会的一种悲哀。扯远了。我开始心疼她，我开始体谅她。我开始对于姐夫及他的家人变得苛刻，开始暗地里注意他们的毛病，他们的不周。因为他一直在对我抱怨我姐的各种事情，甚至是在怀孕的时候，甚至是在即将生孩子准备去医院的时候，还在抱怨这些。我不知道他是怎么想的，但是如果有下次，我一定会去反驳，不能再是这种逆来顺受的性格了，该生气就得生气，该暴躁就得暴躁。我不护着我姐我护着谁啊。有时候做得真的是太过分了。我有时候会开始害怕。 这个月我还尝试了一下高风险的基金，在行情好的生活，确实比定期还有低风险的债券类型的基金赚得多得多。但是，在股市中，千万不要太贪，越是贪婪的人，最后输得越惨，这是股市中亘古不变的定理。几乎没有散户赢家，只有一茬又一茬的韭菜。其实我也进场晚了一天，仅仅是晚了一天，赶上了大涨，就少了不少的收益。自己不懂股票，什么也不懂，就瞎买吧，到时候赚到钱出了就好，告诫自己不要太贪婪。 开学一个多月了，毕设还是没什么进展，还是不太会做，我真的是怀疑自己能不能做出来，为什么要选择了这么一个题目。可是这个责任真的在我吗，选了一个这么很好的毕设题目？我看未必。如果说是因为我自己对自己的毕设太不上心，没有仔细查找，仔细思考，也是有一定原因的，但是老师为什么不能更好地把关，更好地筛选题目。我不是推卸责任，只是说双方都有一定的责任。而到了现在也只能硬着头皮走下去了，能有什么办法，能够毕业就得了吧，别再想着发什么论文，搞什么创新了。我甚至于开始怀疑自己适不适合读研，以后的科研之路一定会走得很艰难。又没有什么实践经验，代码能力也不太强，以后找工作该怎么办啊。头疼。 四月，好好做毕设，坚持跑步锻炼，希望再次跑个keep半马。希望能够按时做完毕设按时毕业。 人总是健忘的 3月10日 外甥女出生。 3月19日 自己被自己的Python代码坑了一下，大量IO会严重影响程序性能。 3月21日 江苏响水化工厂爆炸。 3月22日 自己又被自己的Python代码坑了一下，没必要一个insert语句commit一次。要理清程序的执行逻辑。 3月23日 爬长城。 3月25日 被邀请去做考研保研经验交流，但是觉得自己都还没活明白，更没有经验可介绍，所以拒绝了。 3月25日 实验室出台了新规定，看似很严格。不知道执行起来怎么样。 3月28日 P2P团贷网暴雷，据说是P2P理财前10的排头兵，难道是国家出手清理这个行业了。 3月28日 吉利与戴姆勒达成协议，收购smart品牌50%的股份，合资工厂将在中国设置总部。 3月30日 四川省凉山州发生森林火灾。 2月31日-4月1日 机房服务器机柜被断电了，设备出现故障需要解决。 3月31日 TJU海棠节。 3月31日 我可能在公交车上因为太怂错过了一段可能的爱情。 3月底 国家调低税率，大批汽车品牌价格下调。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"人总是健忘的","slug":"人总是健忘的","permalink":"http://maneback.github.io/tags/人总是健忘的/"}]},{"title":"我可能错失了一段可能的爱情","slug":"aiqing","date":"2019-03-31T13:33:44.000Z","updated":"2021-01-06T13:26:44.830Z","comments":true,"path":"2019/aiqing/","link":"","permalink":"http://maneback.github.io/2019/aiqing/","excerpt":"你做的每一个微不足道的决定都有可能对看似毫不相关的事情产生很大影响。","text":"你做的每一个微不足道的决定都有可能对看似毫不相关的事情产生很大影响。 姑且把它算作是一个梦吧。 好后悔啊，真的后悔死了，越想约后悔。你为什么总是要因为自己的腼腆而让自己后悔。自己想要的太多，敢于去勇敢追求的却太少。只能一次次地去后悔去责怪自己，也没什么用。 今天下午，从地铁站搭公交回学校时候，在公交车上遇到了一个女生。一个我很想搭讪的女生。可我还是怂了。 这一切仿佛都是偶然又都很巧合。从家里出来时可以选择两种方法到地铁站，我选择了第二种，而且比平常正常情况下花的时间更要长。在地铁上一直在纠结打车还是挤公交回学校。最开始看到这么多人都在hsl站下车，就打算再坐两站打车回去了。可是，一看晚高峰打车这么贵又怂了就去挤了公交。所以这是多么多么的巧合才能遇见她。我在每一个纠结的时候做的每一个决定合在一起才使我遇到了她。 其实我从地铁口出来时候，公交已经到站了。在那么多人的车上，我刚刚上车的时候就注意到了她。长发，一件蓝色大衣，一顶黑色棒球帽，就是很普普通通，完完全全没有达到一眼看上去惊艳的感觉。我还是找机会站到了她附近。跟她的同伴说话也是温温柔柔的感觉，很阳光很舒服，也不会给人那种很高冷的感觉。 但是我那时候在干什么？在欣赏美？大脑在干什么？在放空自己？后来，我还把一个离我很近的座位主动让给她去坐，去活动转一天也很累了吧，虽然我也很累。活动很好很有趣吧。可是那之后呢？我在干什么？我应该干什么？为什么我没有了进一步的行动和尝试，在等着对方主动一点，给一点点的暗示和信号？下车之后我干了什么，明明知道他们会去骑那个共享单车，我为什么走得那么着急啊。最后看到的那个推车进校门的人是她吗，我不想相信那个是她，也十分宁愿不是她。 而且我还注意到，她的左手食指戴了一个戒指，不敢盲目猜测是什么意思，在网上查了一下对于这个的解释也很多种。可能是我想太多了吧，不知道她坐下之后是不是那样故意露出来。我还注意到那两个人曾经有一会窃窃私语的交谈，隐隐约约听到了一些什么，不知道是不是我想太多了。可能这些都是我给自己的加戏吧，矫情的人就是喜欢给自己加戏，觉得别人喜欢自己。但是也可能这都是真的，可能都是机会。我可能真的是有机会的，可是却都怂了。 为什么不自然一点，为什么不耐心一点，为什么不自信一点，这不是奇怪的事情，没有人会意识到，没有人会注意到，大家都太忙了，根本不会注意到无关自身发生的事情，所以就大胆去做吧，想做什么就大胆去做吧，想去要联系方式就大胆去要吧。 被拒了也不会死。被拒了可能现在也不会这么难过了，可能现在也不会再想了，现在的感觉比被拒绝了还难受，明明曾经有机会去尝试去没敢行动，已经不是第一次犯这样的错误了，但是好像是第一次这么悔恨。如果我尝试过了，结果就是我没有办法去左右的事情了。唉 可是呢，当你想跟某些人说一说的时候，别人可能会嫌你“磨磨叽叽”哦，其实不是这件事情矫情，只是嫌“你”矫情罢了，也没有兴趣去仔细了解。你跟他说一，他跟你说二。所以，我现在已经不对任何人抱有幻想，包括我自己。而某些除了找你帮忙就根本不会主动想起你来的人，就更不会了 仔细想想人遇到的每一件事都是无数的条件和无数的巧合造成的必然结果，这也是人生的多样性。当你遇到某一件让你刻骨铭心的事情的时候，你可能才会意识到，你当初做的每一项决定，都对这件事产生了至关重大的影响，甚至是影响你的一生。只不过那件会影响你一生的事可能会发生，也可能永远不会再发生了，而你却不自知。更永远不会想到这么一个微小的决定会有这么大的影响。 后来XX让我形容一下她，我觉得也有必要回想一下。不然过不了多久我自己也忘记了她的样子，现在已经记不太清了。再次遇到就是可遇而不可求的事情了，我感觉这个几率到现在已经几率为0了，只能寄希望于祈求上帝，祈求老天了，如果真的在这一周内再遇到，那么我真的要选择相信缘分了，那么我要是再退缩就是活该我单身一辈子了。估计就算以后遇到了，也很难再回想起来她的样子了，甚至她也会就这么忘记这件事情。但是我估计要很久很久才能忘记这个人，这件事，这种感觉，忘记自己当时的愚蠢与懦弱。 2020年01月更新： 05号，在图书馆连续几天背政治，还是没敢主动上前说句话。 16号，一起打羽毛球，打完就走了。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"dreams","slug":"dreams","permalink":"http://maneback.github.io/tags/dreams/"}]},{"title":"爱瓦罐爱生活","slug":"iwagon","date":"2019-03-28T13:32:46.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/iwagon/","link":"","permalink":"http://maneback.github.io/2019/iwagon/","excerpt":"瓦罐迷，高性能迷，奥迪粉。 爱瓦罐，爱生活！","text":"瓦罐迷，高性能迷，奥迪粉。 爱瓦罐，爱生活！ 其实，这篇文章早就想写了，也早就构思差不多了，但是我选择了一个错的地方，竟然选择把它发在了 pyq， 还在发之前删减了好多内容。真的是一个失败的决定啊。 你会发现，有的东西，你越是的热爱，别人就越无法理解你的热爱，喜欢的东西并不需要和别人分享，只需要自己拿出来偷偷乐就好了。 也是借了国内首台RS4 Avant 交付，表达一下自己对旅行车的喜爱。 国内首台RS4 Avant，可以说是实名羡慕了。🍋 还剩A4 Avant没有引进，奥迪在国内的旅行车产品矩阵就齐了。B级到C级，普通版到高性能版，外加跨界的allroad。高性能∩旅行车的选择，之前只有RS6，现在又多了RS4。对于性能粉+瓦罐迷+奥迪粉来讲，这两台车真的无敌了。 奥迪前两年把RS6引进国内，开拓了一下国内的旅行车市场，也吸引了一大批情怀粉。回想一下，自己沉醉于奥迪，沉醉于旅行车，甚至喜欢上拍车，都是从那一篇介绍RS6 Avant的文章开始的。它使我开始系统地去了解汽车，去（并没有）了解汽车文化。我不允许哪个瓦罐迷不喜欢RS6，不喜欢奥迪的旅行车。 RS6地表最强旅行车，能装又能装，4.0T大V8，3.9s破百，最初官方报价159W。要说奥迪把它引进国内是为了走量占领市场，我是打死也不相信的，反正我顶现在也没在路上见到过一个。它只是奥迪用来告诉你自家的旅行车有多牛逼。的确，把旅行车做成这么大马力的，也确实只有奥迪一家。 果然后来奥迪又引进了A6 allroad， A6 Avant 和A4 allroad。现在RS4也来了，估计一两年内A4 Avant也快了。先用性能最强的旅行车吸引一波情怀，再用稍稍便宜的普通版本去让粉丝的情怀落地，但是，RS6的牛逼形象已经印在人们脑海中了，每个瓦罐迷都绕不过去，这一招是真的妙。甚至大众也开始在国内收割旅行车粉丝了，而RS6在广大粉丝心目中只能成为图腾一样的存在了。 现在国内的旅行车市场还很小众，大众集团在这个细分市场是当之无愧的第一。平价车型有大众，高端市场有奥迪。奥迪作为引爆国内旅行车市场的先行者，作为敢于第一个吃螃蟹的人，它收获的市场还是不错的。其他像宝马，奔驰，沃尔沃也开始引进旅行车了，沃尔沃新改款的V系列看起来还不错。没想到旅行车卖的最多的竟然是宝骏的！！！！果然人傻钱多的人还是占少数的，虽然喜欢，但是大家还是迫于金钱不得不低头了。 不得不说，Avant是真滴好看，奥迪旅行车真的是一绝，简单评价就是，它就应该是这样子的。 纯进口导致旅行车比同级别轿车贵出了不少，有多少粉丝能够承受住这部分情怀溢价。只有销量上去了，厂家才会考虑国产化进程，或者也可能选择继续收割情怀。我也不知道为什么，旅行车在国内和 情怀 绑定在了一起，大部分喜欢旅行车的人都会强调自己的情怀。 可是在国内旅行车的大部分潜在用户可能被SUV吸引走了，SUV在国内甚至全世界范围内大行其道，当你发现宾利和劳斯莱斯都开始造SUV的时候，就知道SUV有多受欢迎了。我想，奥迪之所以先把跨界的allroad引进，而非纯粹的Avant，估计就是想要给那些喜欢SUV的人多一个可行的选项。但是另一方面旅行车的造型貌似不符合大部分人的审美，大部分人都是因为真爱在为情怀买单。估计只有等到旅行车真正开始国产那一天，国内的旅行车市场才会迎来真正的爆发。 而我，是励志要买一辆Avant 的，没钱的话选择V60也行吧。 我要看到旅行车行走在全国各地！","categories":[{"name":"mylove","slug":"mylove","permalink":"http://maneback.github.io/categories/mylove/"}],"tags":[{"name":"iwagon","slug":"iwagon","permalink":"http://maneback.github.io/tags/iwagon/"}]},{"title":"使用Nginx搭建DASH服务","slug":"nginx-dash","date":"2019-03-28T09:49:05.000Z","updated":"2021-02-24T02:50:19.822Z","comments":true,"path":"2019/nginx-dash/","link":"","permalink":"http://maneback.github.io/2019/nginx-dash/","excerpt":"教你如何借用nginx服务器搭建dash服务","text":"教你如何借用nginx服务器搭建dash服务 写在前面 最近在做毕设的过程中，需要自己搭建一个dash服务来进行实验，所以把搭建过程以及自己在此过程中踩到的坑记录下来。 之前在网上搜索到的教程都很迷，仿佛都假设你对这个东西有所了解。（话说有所了解还用看你的教程干嘛）所以本文章写得尽量对0基础的读者尽量友好一点。说是尽量因为实在是水平有限，自己也不深入搞这些，只需要了解皮毛能够完成实验就行了。 环境 ubuntu 16.04 Nginx 1.10.3 others： ffmpeg Bento4（主要用到mp4fragment 和mp4dash) VLC 视频播放器 安装环境 1、 虚拟机安装ubuntu 在VMWare上安装ubuntu虚拟机，此部分略过。注意如果想要在其他主机如宿主机上面查看网页，需要配制一块桥接网卡 2、安装Nginx 可以参考我的另一篇文章。 3、安装ffmpeg和Bento4 ffmpeg网上找到有人说需要用源码安装，但是好像很麻烦，之后我又找到了用命令行安装的方法。 123sudo add-apt-repository ppa:kirillshkrogalev/ffmpeg-nextsudo apt-get updatesudo apt-get install ffmpeg Bento4直接去官网下载可执行文件即可：Bento4下载 下载之后，将压缩包解压，可以放到任意位置，并将/Bento/bin添加到环境变量。Bento里面包含好多工具，在这里我们主要用到mp4fragment 和mp4dash。 直到把这些工具安装完成并配置好，我们才可以处理我们的视频，并通过nginx推送出去。 使用ffmpeg获得不同分辨率的视频 DASH的精髓就是根据网络的状况选择不同的bitrate和resolution的视频，使得在网络不稳定的情况下，尽可能为用户提供最优的服务和最佳质量的视频，提升用户的观看体验。 首先，我们要在这里下载视频 BigBuckBunny,随便选择一个下载就好，后面我们把视频假设重命名成video.mp4。 输入以下指令： 1ffmpeg -i video.mp4 -s 320x180 -c:v libx264 -b:v 500k -g 90 -an video_320x180_500k.mp4 各参数含义如下： 123456-i # 选择输入文件-s #选择分辨率-c;v #选择codec编码器-b:v # 选择码率-an # audio no 不要编码audio-g # 图像组大小（GOP length） 这样我们就得到了分辨率为320x180，码率为500k的一段视频，为了得到更多不同质量的视频，我们只需要将参数修改一下，再次执行以上命令即可。 12ffmpeg -i video.mp4 -s 320x180 -c:v libx264 -b:v 250k -g 90 -an video_320x180_250k.mp4ffmpeg -i video.mp4 -s 320x180 -c:v libx264 -b:v 750k -g 90 -an video_320x180_750k.mp4 可以发现，我们上面的命令是没有处理音频的，因此也还要对音频进行编码 1ffmpeg -i video.mp4 -c:a aac -b:a 500k -vn video_audio_500k.mp4 以上命令可能会报错： 1The encoder 'aac' is experimental but experimental codecs are not enabled, add '-strict -2' if you want to use it. 按照提示加上-strict -2 参数即可： 1ffmpeg -i video.mp4 -c:a aac -b:a 500k -vn -strict -2 video_audio_500k.mp4 生成DASH切片以及mpd文件 在生成切片时我选择的是Bento4工具集中的mp4fragment和mp4dash。 还有另外一个工具mp4box，但是生成的dash文件推送到服务器之后请求会出错，某作者用了mp4box之后因为出错还是转向了Bento4工具集。因此我为了稳（偷）妥（懒），就不再去踩坑mp4box了。两个文件都在 1/Bento/bin 文件夹当中，把Bento安装到任意位置后，将该位置加到环境变量中，就可以更加方便使用了。 mdp文件描述了mpeg dash码流的构成，其实是一个XML文档，通过mpd可以构造出用于HTTP GET下载视频的URL。 处理流程主要是两步，首先使用mp4fragment生成视频的fragment （我也不知道该怎么理解）再用mp4box 来进行下一步的处理就行了。 当然你忘记了mp4fragment 命令也没事，要是直接运行mp4box的话，它会报错提醒你 1file 1 is not fragmented (use mp4fragment to fragment it) 反正就记住有两步，先用mp4fragment 再用mp4dash。 12345mp4fragment video_320x180_250k.mp4 video_320x180_250k_f.mp4mp4fragment video_320x180_500k.mp4 video_320x180_500k_f.mp4mp4fragment video_320x180_750k.mp4 video_320x180_750k_f.mp4 # 当然还有音频的fragmentmp4fragment video_audio_500k.mp4 video_audio500k.f.mp4 终于来到了最后一步，进行切片，生成mpd文件以及视频片段: 1mp4dash video_320x180_250k_f.mp4 video_320x180_500k_f.mp4 video_320x180_750k_f.mp4 video_audio500k.f.mp4 最后它会生成一个output 文件夹，里面包含了一个mpd文件，和一个包含视频片段的文件夹。 当然你也可以指定输出路径，只要加上--output-dir outputfile 参数，就可以输出到outputfile文件夹下面了。 将视频上传服务器 你只需要将output 里面的内容上传至nginx的/var/www/html/ 路径下，就可以通过VLC播放器请求视频数据了。在打开网络流中输入 http://ip:80/stream.mpd 就可以播放视频了。 这时，你在命令行中输入： 1tail -f /var/log/nginx/access.log 就可以实时查看播放器正在请求那个bitrete的数据了。 踩坑 在我最初的时候，我生成了一个bitrate的文件，测试能否请求。但是当我生成两个不同bitrate文件的fragment，再使用mp4dash命令时候，它会报错： 1MP4dash video tracks are not \"aligned\" 但是当我写这篇文章的时候，报错又不能复现了，所以我感觉是我当时敲命令时候拉下了什么。 这个错误字面理解就是文件没有对齐，好像跟视频的GOP有关。我的理解就是，比如说，file1 的第一个fragment是0-10s， file2的第一个fragment是0-12s这样的话，每个fragment不是对应相同的视频片段，就会导致出错，反正具体我也不懂。在网上查解决方案时发现这个遇到这个错误的人还不少，而且好像都没有解决方法，连github上面的issue都没有人给出解答。当时都打算放弃Bento改用mp4box试一试了。结果我又看了一遍ffmpeg 和Bento的官网，试了一下设置更多地参数，结果完美解决了问题。 解决方法如下： 首先在ffmpeg 中限制它的keyint。将最大和最小都设置为相同的值，也就成了定值。 1ffmpeg -y -i origin.mp4 -s 160x90 -ac 2 -ab 128k -c:v libx264 -x264opts 'keyint=24:min-keyint=24:no-scenecut' -b:v 500k -g 90 -an video_160x90_500k.mp4 在mp4fragment中设置强制对齐 1mp4fragment --fragment-duration 2000 --force-i-frame-sync all video_320x180_500k.mp4 video_320x180_500k_f.mp4 这样在mp4dash中就没有问题了。 总结 DASH是一种流媒体服务协议，本来我的研究方向与这个是没什么关系的，但是本科毕设选了一个比较坑的题目，还要自己搭建DASH服务器环境，才不得不去了解它。 由于在之前都没有了解过这个东西，在网上找的教程，也都没有开篇是给除初学者的教程。方法那些人都默认你了解过这个东西，甚至是用过这个东西，他们并没有把一些潜在的知识给表达出来。虽然当你了解了并且亲手实践过之后，你会觉得没什么，都很简单，那些没有讲明的知识我也自己摸索出来了。可是在这之前，你可能会很不知所措，就像我当初一样。 因为他们并没有把一些很浅显，但是不去实践就无法了解的结果给写出来。所以我当时进行得就很艰难，而且很抗拒，所以一方面我不希望别人再经历像我一样的事情，另一方面，我还是想说，多动手实践，只要这个教程写得还可以，就动手试试。你不知道作者写这篇博客的时候是什么心态，也不知道他是面向谁来写的。你只能去试，去犯错，去解决问题。这样你才能作者隐藏在博客背后没有表达的内容。 参考链接 Making Your Own Simple MPEG-DASH Server MPEG DASH-Bento4 Nginx 搭建 DASH 服务器 HOW TO ENCODE MULTI-BITRATE VIDEOS IN MPEG-DASH FOR MSE BASED MEDIA PLAYERS (1/2) GPAC DASH","categories":[{"name":"knowledge","slug":"knowledge","permalink":"http://maneback.github.io/categories/knowledge/"}],"tags":[{"name":"nginx","slug":"nginx","permalink":"http://maneback.github.io/tags/nginx/"},{"name":"linux","slug":"linux","permalink":"http://maneback.github.io/tags/linux/"}]},{"title":"逃离朋友圈","slug":"pyq","date":"2019-03-17T01:45:00.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/pyq/","link":"","permalink":"http://maneback.github.io/2019/pyq/","excerpt":"昨天，我第一次把朋友圈设置成了三天可见，算是再一次逃离了朋友圈。","text":"昨天，我第一次把朋友圈设置成了三天可见，算是再一次逃离了朋友圈。 因为最近发生了一件让我非常不爽的事情。 当我洋洋洒洒写了一个超千字的草稿，发自肺腑地表达了我对某事物的狂热喜爱，却发现对于发朋友圈来说，字数实在是太多了，别人根本不可能看完，甚至是不屑于点开那个 全文 。于是，我删除了好多真情实感，尽可能只是去陈述事实，只剩下了六七百字。 当我把这六七百字辛辛苦苦地在朋友圈编辑器里面再敲一遍，并仔细检查几遍之后，终于鼓足勇气发了出去。可是，可是，微信朋友圈有一个极其弱智的机制。就是复制的朋友圈文字会被压缩成一行显示，不会显示“全文”按钮。它把我的内容压缩成一行了？ 我？我明明完全没有复制操作啊？为什么要这样对我，那我浪费这么多时间和精力又把这么多字敲一遍是为了什么，不就是为乐让你给我正常显示吗。所以，我就对于朋友圈产生了非常非常强烈的恶意。 说实话，要是一条普通的朋友圈我也不会有这么大的厌恶，但是这条朋友圈的内容我反复酝酿了好多天，在发出去之前也纠结了好久。因为我一直想要明白它的意义，我为什么要发它，别人对于我会产生一种什么样的看法。对我来说，有时候朋友圈更是承担了你对外要展现一个什么形象的重任。但是这样每次发朋友圈的时候就会感觉很心累，甚至每次都成为了一种负担。要考虑别人想不想看，而不纯粹的是想要表达什么。发出去之后仿佛有一种在街上裸奔都没能引起人们注意的感觉，但是你却不知道谁看到了你在假装没看见，谁连看都没想看。 所以，我感觉现在，无论是朋友圈，还是QQ空间，都已经不再适合长篇大论地表达自己对某事物的热爱，也不适合挖心挖肺地真情流露，也根本不会有人能够耐心地看完。在第一点上，朋友圈甚至还不如微博，在微博上还有一大批相同爱好的人大方地去表达自己对它的热爱。我只能在朋友圈当中戴着面具伪装出一种有趣的生活，去按照我想伪装的形象去展示自己。 再来看其他人，晒旅行、发自拍、秀恩爱、挂聊天记录、学英语打卡成了常态，甚至是一些沙雕操作，通常文字不超过三句话。我反而是成为了唯一的另类，发这么多文字描述，别人也不能理解你为什么会喜欢这个东西。其实想一下，没有人会特别留意你喜欢什么东西，因为你从来都不是这个世界的中心。果然不出我所料，一晚上过去了，只得到了两个赞，又一个上午过去了，涨到了三个。但是我不会再删除这条朋友圈了，删除了也没什么意义，毕竟，人总是健忘的。到不了明天，所有人就忘记了我曾经发过的这条朋友圈，甚至过不久我也会忘了，而生活还是会照常继续。 我大概一年半以前才从QQ空间转移到朋友圈的，说实话，不是我选择了微信，而是微信上的人拉我过来了，越来越多的人转移到了并不好用的微信，可是没有办法。你选择的不是应用，而是社交圈子。仔细一想好像从大二开始我已经两年多没有添加新的QQ好友了，新的关系都开始在微信中去维持了，包括一些官方的群聊，QQ好友中只剩下了一些好久没有再联系的中学同学。发朋友圈的频率从两个月一次涨到了一个月三到四次；朋友圈却从半年可见变成了三天可见；发朋友圈越来越纠结，甚至会想一条条删除。想当初英语学习打卡的时候都没有这么纠结。自己洋洋洒洒写了好久甚至还不如别人发一条“今天天气真好”另附两张自拍得到的赞数量多。这里不是看不起发自拍的人，只是说明我发的东西没人喜欢看罢了，纵然自己再喜欢又能怎样，还是没人感兴趣，这里并不适合你。 再说一句让人十分心凉的话，我设置成三天可见还是半年可见根本无所谓，因为根本不会有人去有兴趣去从头到尾翻我的朋友圈，因为 我根本不是这个世界的中心，甚至不是朋友圈当中的中心。有越来越多的人选择了三天可见，过去在我转移到朋友圈之前，我会感觉这些人很矫情，虽然每个人这么做的原因不相同，但是现在我理解了他们。 我的生活也没那么有趣，只是日复一日地重复着枯燥的学习生活。没有了社团，还没有女朋友。就算想要出去玩，也要在心里默默考量好久，刷遍列表页都不知道叫谁一起出去。也就渐渐习惯了自己一个人的自由。一个人去看电影，一个人去到处逛。我不用再因为自己的一些失误决定连累到别人决定而感到愧疚，也不用因为两个人互相矜持而假惺惺地“都行”，只去自己想去的地方而不用问别人想不想。省去了好多妥协的过程，省去了好多无谓的思考。走错了方向就走错了方向，再自己转身回去就好了，并不会觉得对不起自己。 但是话说回来，谁不想找个人一起啊。 我羡慕朋友圈中的所有人。我羡慕那些秀恩爱的人，我羡慕那些经常到处出去玩的人，我羡慕那些能拉会唱的人，我羡慕那些自拍好看的人，我羡慕那个在旅行社兼职的学妹，我羡慕那些生活有趣的人，唯独不羡慕我自己。 原来我并不是讨厌朋友圈，而是讨厌自己的生活那么无趣；原来我并不是想逃离朋友圈，而是想要逃避无趣的生活。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[]},{"title":"Next主题个性化--hexo","slug":"hexo-next","date":"2019-03-02T05:54:05.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/hexo-next/","link":"","permalink":"http://maneback.github.io/2019/hexo-next/","excerpt":"","text":"人类的本质就是真香，之前非常硌路地不用Next主题，不过还是跟随了大潮，换上了这一件热门主题。在网上看到的关于next主题的个性化配置的教程也挺多的，功能也十分强大。所以我选择了这个主题是因为功能真的很强大，很多实用的功能只要修改配置文件就可以使用了，而且已经有了很多可以选择的现成的工具。 1. 评论功能 通过查看next的配置文件，我们发现next支持的可用评论平台有很多，但是我选择的是Valine，看了一下，其他的好多都需要注册才能评论，但是我不想要这种，因为需要注册的话，就显得过于繁琐了，我只是发表一下观点，要我注册干啥。所以找了一个不需要注册即可评论的评论系统。既可以匿名，又可以在评论的时候设置昵称等信息。 valine是一款基于leancloud的快速、简洁、高效地无后台的评论系统。 配置过程 首先，注册leancloud 获取APP ID 和APP KEY，应用名称自己起一个，选择免费的开发版。 1553782179250 创建好后，进入应用，选择设置-&gt;应用key，复制App ID 和App Key。 在Next主题的配置文件中搜索valine，将enable 设置为true，将App ID 和App Key复制到相应位置。同时还可以开启其他功能，如邮件通知，评论计数等，按需操作 123456789101112valine: enable: true # When enable is set to be true, leancloud_visitors is recommended to be closed for the re-initialization problem within different leancloud adk version. appid: YOUR-APPID appkey: YOUR-APPKEY notify: false # mail notifier, See: https://github.com/xCss/Valine/wiki verify: false # Verification code placeholder: what do you want to say # comment box placeholder avatar: mm # gravatar style guest_info: nick,mail,link # custom comment header pageSize: 10 # pagination size visitor: true # leancloud-counter-security is not supported for now. When visitor is set to be true, appid and appkey are recommended to be the same as leancloud_visitors' for counter compatibility. Article reading statistic https://valine.js.org/visitor.html comment_count: true # if false, comment count will only be displayed in post page, not in home page 然后，在leancloud设置--&gt;安全中心，将你的博客的网址填写到Web安全域名中就可以了。 我不知道为什么，这个评论系统并不能在本地预览，但是部署到github.io 之后就能正常显示了。 这样在leancloud的后台，你就可以查看留言了。选择存储--&gt;Comment 查看留言信息，还可以删除留言。 配置项 可以看到在Next配置文件中，Valine有很多配置项可用。下面分别讲解一下。 PS：我才发现，原来这个评论系统还可以支持MarkDown语法耶，真的是出乎我的意料。 2. 阅读量统计 3. 友情链接","categories":[{"name":"Blog","slug":"Blog","permalink":"http://maneback.github.io/categories/Blog/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://maneback.github.io/tags/hexo/"}]},{"title":"人总是健忘的│2019年03月纪","slug":"2019-03-01","date":"2019-03-01T05:48:05.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/2019-03-01/","link":"","permalink":"http://maneback.github.io/2019/2019-03-01/","excerpt":"","text":"新的开始 重启博客的新的开始，想来，这个博客网站已经建立快一年的时间了，但是内容仿佛并没有输出多少，2019年也已经过去两个月了，当初只立了一个跑步的flag但是现在的完成度还是0%，都是雾霾惹的祸。 轰轰烈烈地打算重新开始，但是还是晚了一天才完成这了一总结，仿佛就像是完成别人给的任务一样。在实验室偷偷摸摸地写了一点点，后来晚上回到宿舍之后就完全不想写这件事情了。其实我也想坐在这里坐半天，静下心来好好回顾一下，不知道写什么的时候就翻两眼手机，想起什么就写一句什么，但是仿佛没有那个耐性，也没有那个时间来这么做了。你一定要明白自己为什么要做这件事，是为了叫自己将来别再这么傻逼了，好吧。 怎么办，我该如何拯救我自己。希望自己的总结可以能够写一点有意义的事情，而不是每次都在这里抱怨，在这里怀疑自己，没什么用的，还不如好好干。 可是，万物皆有可是，我最近不知道怎么了，就感觉整个人很堕落，很不知道自己想要干什么，整天的在实验室发呆，想着早一点回去；但是整天在宿舍更是发呆，刷微博，刷淘宝，刷知乎，刷支付宝，在宿舍窝一天想一想更是后悔，浪费了自己珍贵的青春时光。但是更难的是劝说自己动起来，做一些什么有意义的事情。虽然给自己规划了这么多事情要做，要学习，但是真正该实践的时候就不是那么回事了。 二月份，开学了，本科的最后一个学期了，可能是在家堕落了一个寒假，可能是给自己打的鸡血太足了，也可能是实验室太压抑了，可能是自己还没转变过来这个阶段，感觉自己很不想去实验室，那里太闷了，哪里都太闷了，想出去放松一下，不是那种懒惰的放松，而是跟别人一起，跟想一起的人一起，跟能谈心的人一起去。我感觉我现在这样，就是因为自己每天憋屈自己，生活没有一点波澜和激情，也没有一点乐趣。 我还办了一张健身卡，希望自己能用花钱来逼迫自己好好健身，不要荒废了自己的身体。好想再见一见昨天（2月1日）在健身房看见的那个女生啊。感觉现在，看到个差不多的女生就想跟她恋爱，想着恋爱的好事，可能我真的该找个女朋友了，来给我无聊发闷的生活添加一些色彩。 二月份干了一件大事，一下子上车投了2000的基金。这大概占了我目前13%的资产。上个月，沪深大盘涨了超过20%，我也是第一次接触这种事情，也是第一次关注这种高风险的事物，当时有点上头。还在确认阶段，那个周一当天就涨了5.6%。其实当时心里是有点慌的。害怕自己不小心会高位接盘，做了韭菜。可是支付宝各种zz都在说，上证3000不是梦，在预测牛市的到来。其实，我也猜测，一个月内上涨超过20%基本上就是见顶的了。可是我还是继续上车了。因为之前给自己设定了一个10%的最大损失。虽然自己预感这一周肯定会阴跌，但是还是义无反顾地继续上车了，结果可想而知，周二周三真的连续跌了两天。 幸亏当时还比较清醒了，意识到了一个问题。你要分清楚自己在股市中赚钱是因为大环境好，还是因为自己真的很厉害。我想我赚钱是因为前者吧。对于股市没有了解，总想着疯狂套现一把赶紧撤，但是当时也在思考，赚到5%就撤，可是看着大盘，到10%可不可能？20%可不可能？这是有可能的，那么，5%的时候你舍得撤吗？会不会因为贪婪而想着去挑战那10%，这一切都是有可能的。虽然等到事后可能会觉得当时自己明智或是不明智，但是，在那种不清醒的贪婪状态下，继续加仓也是有可能的。 虽然这2000在将来对于我来说不算是什么大钱，这点收入和损失更是看不上了。但是，最主要的不是这绝对值，而是相对值，现如今损失了2000的10%，将来还可能因为贪婪损失2000W的10%，道理都是一样的。不在乎你有多少，要有对于风险的意识，对于风险的把控。毕竟这2000的10%对于现如今的我还是很看重的。 我们生活在最好的时代，也生活在最坏的时代。其实我是从来没有关注过咪蒙的，感觉人们为什么会选择去受她公众号文章的蛊惑，为什么会追随着她。后来我才明白了，其实，我根本就不是她的目标受众，中国太大了，中国的差距也太大了，大到你无法想象。这些迥然不同的人都生活在这一个中国，都在用同一个微信。百分之十甚至百分之一就已经是一个十分庞大的群体，就算把所有人分成完全不相同，差异巨大、完全无法互相理解的100类人，只要抓住了一类人，也是一个十分巨大的生存空间了。很庆幸，我没有存在于这一些类之中。 2月21日 咪蒙公众号永久注销。我们生活在最好的时代，但同时也是最坏的时代。 2月21日 我去看了流浪地球，又鸽了一篇观后感，怕是没机会再补上了。 2月xx日 奥斯卡活动翻译问题事件。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"人总是健忘的","slug":"人总是健忘的","permalink":"http://maneback.github.io/tags/人总是健忘的/"}]},{"title":"干就完了","slug":"ganjiuwanle","date":"2019-02-21T12:23:33.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/ganjiuwanle/","link":"","permalink":"http://maneback.github.io/2019/ganjiuwanle/","excerpt":"","text":"改变 如果你想要改变自己，最合适的时间就是现在。就把今天作为一个新的改变的开始！ 想来这个博客已经建立将近一年了，但是中间因为自己的懒惰已经好久好久没有内容产出了。中间也经历了好多事情，也错过了好多总结回顾的学习的机会。经历了保研，去跑了半马，自己去南方玩儿了几天，但是日子一晃就混过了一个学期，说有什么收获吧，好像也没什么收获。不过，没有总结，没有反思，就没有收获，没有成长，正因为没有回顾，好多经历都已经悄然流逝于回忆之中。 就像刚巧听到的那句歌词： 我懵懵懂懂过了一年，这一年似乎没有改变。 —— 《空空如也》 如果你不觉得一年前的自己很傻逼，就证明你现在仍和一年前的自己一样傻逼。 距离上次的正式文章已经5个月了，之间经历了大四的恍惚，经历了保研，经历了旅游，经历了换电脑，经历了不想被人发现的删库，一路跌跌撞撞，又从今天重新开始了。昨天，我回到了学校，开始了大学本科四年的最后一个学期，这个学期要怎么有意义的度过，将会关系到我之后的研究生阶段能够怎么度过。一定要把自己的学习热情找回来，你的奋斗还远远没有结束，甚至一路都太顺了，甚至都给自己一种错觉，觉得自己不需要很累的奋斗。 思考了一下，这个需要在电脑端编辑的博客平台并是十分适合日常的生活和记录，它更像是一种静下心坐下来花一些时间慢慢咂摸的过程。其次过短的内容放在网页上面公之于众似乎也不太适合，因此就把值得写的内容写在上面吧，再找一个手机端的类似日记本的偏向于私人的软件来记录生活。 开始 加入知识星球 之前迷迷瞪瞪地花了199加了不到四个月的星球，到现在猛然发现这四个月的199已经结束了，虽然已经再次续费了，还加入了另一个，加入之后就赶上了永久有效改成按年收费。第一期结束了，但是回想自己这段时间的收获是不是能够值回这199的入门费。的确，里面的内容很多，只是很多，厉害的人很多，但是从中自己能够学会多少，领悟多少，这都是看每个人自己的本领的，有人通过这199能够学到1000块的知识，但是也会有人只能学到100块甚至不到100的知识，这就体现了不同的人不同的学习能力，也体现了人的差距。而我又学会了多少呢？ 总是在自我怀疑与自我吹捧中徘徊 我发现我有一个毛病，有时非常怀疑自己的能力，觉得自己的能力很差，什么都不会，谁都不如，尤其是在这个社会中；但是有时又转念一想，自己好歹也是985的大学生，不至于妄自菲薄到看不起自己。但是，需要明确的一点就是知识不能决定一切，这又会带入自我怀疑而陷入不停的循环。 不要陷入知识的诅咒，扩宽自己接触的领域。 BUG 在把原来电脑的内容转移到新电脑的过程中，我遇到了三个比较蛋疼的问题，如果不总结一下，估计下次就忘了。 hexo 自动生成标签页和分类页的问题。 1.1 hexo不能自动生成分类页 categories/index.html 和标签页 tags/index.html 这两个文件，之前之所以能够自动生成，那是因为之前安装了相应的插件， ··· npm install hexo-generator-category --save npm install hexo-generator-tag --save ··· 但是后来安装的时候并没有找到之前的教程，安装这些有用的插件，所以导致不能自动生成这两个文件。 1.2 使用其他的方法解决，通过命令生成页面(page) 12hexo new page categorieshexo new page tags 这样就会生成对应的页面，而不是文章(post)。 再一次但是，在我看网上教程的时候，由于过于自信，导致看得不仔细，所以落掉了一个page，再一次导致了错误，过了好久才意识到这个问题。 一台主机关联多个GitHub账户时，使用密钥认证的问题。 之所以遇到这个问题是因为像之前说的那样，不想让周围认识的人发现这个博客。当时被别人拉到一个合作项目中，就暴露了之前的账号，所以简单粗暴地进行了删库处理，又注册了这个新的账号maneback。 之所以害怕被人发现，是因为感觉自己写的很菜很水，所以就还是写来自己看吧，当写作水平和思考深度上升到一定水平之后，再考虑放出来。 而解决这个问题的办法，也是简单粗暴地将原来的密钥文件删除处理了。 hexo内容修改后本地预览不能同步的问题，目前还没有解决。 以后打算添加的功能 看了一下，Next这个主题的配置很强大，功能很全面，还没来得及细致地看一遍，修改一下，之后再把网站改得更加个性化一点。 之后优先添加的几项功能：字数统计、评论功能、访问统计（是不是叫这个）。 总结 昨天（开始构思本文时，相对于写作时间），我回到了学校，开始了本科的最后一个学期。自己反思了之前的问题，觉得还需要很大的改进，对于自己即将到来的研究生生活还比较迷茫，这不应该也不能是我进入研究生学习的状态。这个寒假也经历了很多，接触了很多，但是学会了多少，改变了多少，还是一个很大的疑问，还值得继续努力。 新的开始，从现在开始努力吧，加油！！ maneback。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[]},{"title":"新年有感","slug":"happynewyear","date":"2019-01-01T08:49:19.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2019/happynewyear/","link":"","permalink":"http://maneback.github.io/2019/happynewyear/","excerpt":"","text":"首先祝大家元旦快乐。 今天反思自己有感而发。 加入星球以来，我觉得我最大的变化就是对于自身与各种事情的思考变多了，这也使我发现了之前从没有注意到过的一些事情。 先声明一下背景和事件。我是今年保研到外校的。昨天晚上跨年我所在的实验室同一级的八个保研生一起出去吃了个饭。在这种大家都平等但是彼此又不是很熟悉的情况下才明白了自己与别人的差距。 在饭桌上，真的很羡慕他们其中的一个两个能够侃侃而谈，而我只能作为一个小小的角色，等着被问起或提起，或者是时不时地搭上一句很无关紧要且完全没有什么意义的话，其实说和没说没什么区别。而且我也知道，这些人早在吃这顿饭之前就跟大家混的很熟了，而我是属于那种很慢热的那种人，要很久的接触才能跟一个人熟悉起来。一方面我的性格过于沉闷，过于内向，不知该如何和人交流；另一方面我也缺少那种人的自信。 还有就是关于交谈的内容。感觉有的人跟你交流几个回合，就能准确地通过你说的话摸清你的性格、能力高低。我感觉这种看人的能力也是很可怕的。也许是我想得太多了，但是我感觉他就是有意无意地在通过交谈引导你向他输出更多关于自己的信息（并非恶意）。 我感觉这种能力跟他那种侃侃而谈的能力也是相辅相成的。一方面，他要思考，他问的这个问题是否具有针对性，要怎么分析对方的回答；另一方面，他还要换位思考，站在对方的立场上，要是他被问到了一个同样的问题，他该如何回答，这会表现出一个怎样的自己的形象。而我对于某些问题，我只能说出那种很没有水平的答案，更问不出这样的问题，不知道该如何去主动发问。 在那种场合下，我也想要表达但是不知道该说些什么，说一些太过于官方的话，又显得太过于生硬，毕竟大家都是同学而已。但是对于个人的一些情况，又害怕冒犯到别人而害怕对方尴尬，所以大部分时间只能听着罢了。机会就摆在那里，谁都可以去拿的，但是也不是谁都可以拿的到的。 其实有时候就想是不是自己顾虑太多了，朋友之间的相互熟络不就是要通过这种交流和了解吗，你总归都要去了解这个人，那么可以适时问一些关于个人的情况啊，况且我被问到这些问题的时候，也没有感觉什么不自在。 总之，通过这一顿饭，我就明白了自己现在非常非常需要提高自己的交流能力以及自信心的问题。希望新的一年新的阶段能够在这两个方面的能力有所提升。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[]},{"title":"读书笔记","slug":"read-note","date":"2018-11-21T14:48:46.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/read-note/","link":"","permalink":"http://maneback.github.io/2018/read-note/","excerpt":"何为有用？何为无用，读书即有用","text":"何为有用？何为无用，读书即有用 &gt;公元前587年，新巴比伦国王攻占了耶路撒冷，摧毁了第一圣殿。 公元前480年，温泉关战役发生。 公元前1259年左右，希腊-特洛伊之间特洛伊战争发生。 在阅读的时候，不能沉迷于细节不能自拔，导致见树不见林 给自己定个期限，把任务完成。承认自己的不完美 吾生也有涯，而知也无涯 《庄子》","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[]},{"title":"HTML表单","slug":"HTMLform","date":"2018-11-21T11:52:54.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/HTMLform/","link":"","permalink":"http://maneback.github.io/2018/HTMLform/","excerpt":"","text":"HTML表单 HTML表单用于收集不同类型的用户输入 &lt;form&gt;元素定义HTML表单，表单中包含多个不同类型的表单元素，input、复选框、单选按钮、提交按钮等等。 如下是一个简易的表单示例： 123456&lt;form&gt; First name:&lt;br&gt; &lt;input type=\"text\" name=\"firstname\"&gt; Last name:&lt;br&gt; &lt;input type=\"text\" name=\"lastname\"&gt;&lt;/form&gt; 表单属性 action属性 action属性定义了在提交表单时执行的动作，向服务器提交表单的通常做法是使用提交按钮，通常，表单会被提交到web服务器上的代码处理，如： 1&lt;form action=\"action_page.php\"&gt; 注：如果忽略action属性，则action属性会被设置成当前页面。 ### method属性 method属性规定在提交表单时使用的HTTP方法，GET或者POST，默认设置为GET。 12&lt;form action=\"action_page.php\" method=\"get\"&gt;&lt;/form&gt;&lt;form action=\"action_page.php\" method=\"post\"&gt; 要分清get和post的使用条件。 ### 其他属性 1&lt;form accept-charset=\"\" action=\"\" autocomplete=\"\" enctype=\"\" method=\"\" name=\"\" novalidate=\"\" target=\"\"&gt; target规定action属性中地址的目标（默认为_self）， 可选_blank, _parent, _self, _top。 HTML表单元素 &lt;input&gt; 元素 input是最重要的表单元素，它可以根据type属性的赋值具有多种形态。 ## &lt;select&gt;元素 定义下拉列表 123456&lt;select name=\"cars\"&gt; &lt;option value=\"audi\"&gt;Audi&lt;/option&gt; &lt;option value=\"benze\" &gt;Benze&lt;/option&gt; &lt;option value=\"BMW\"&gt;BMW&lt;/option&gt; &lt;option value=\"Porsche\" selected&gt;Porsche&lt;/option&gt;&lt;/select&gt; &lt;textarea&gt;元素 每个输入字段必须设置一个name属性","categories":[{"name":"knowledge","slug":"knowledge","permalink":"http://maneback.github.io/categories/knowledge/"}],"tags":[{"name":"HTML","slug":"HTML","permalink":"http://maneback.github.io/tags/HTML/"}]},{"title":"yaml","slug":"yaml","date":"2018-11-10T15:11:35.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/yaml/","link":"","permalink":"http://maneback.github.io/2018/yaml/","excerpt":"YAML Ain't a Markup Language.","text":"YAML Ain't a Markup Language. 0. 简介 Yaml是用来编写配置文件的，对比同样是用来编写配置文件的JSON，Yaml非常简洁和强大，也远比JSON方便。 YAML的定义即为“YAML Ain't a Markup Language.”的递归缩写。YAML是以数据为设计语言的重点的，而不是像XML以标记为重点。也正是这种设计理念，使它成为了一种可读性高，易于表达数据序列的编程语言。 1. 语法规则 YAML的语法规则非常简单，只要记住以下四条： YAML是大小写敏感的 YAML使用缩进来表示层级关系 YAML只允许使用空格缩进，禁止使用Tab键 缩进的空格数目没有限制，只要保持相同层级的元素对齐即可。 YAML支持的数据结构有以下四种。 对象： 即一个键值对的集合，用冒号表示 数组： 一组按次序排列的值 纯量： 单个的、不可再分的值，即String， Int 等类型的数值。 还要注意的一点是，冒号后面一定要加一个空格。 YAML的数据类型非常灵活，如： 键值对的值既可以是 纯量 类型，又可以是 数组类型 ，甚至是 对象； 同样，数组中的每一个元素也都可以是 纯量 或者 对象 下面将分别介绍着三种数据结构。 2. 对象 对象是一组键值对，使用冒号来表示 注意冒号后面一定要加空格。 1name: jason 3. 数组 数组由- 标识，一系列元素构成一个数组 123- yellow- blue- green 4. 复合结构 正如我前面所说的，数组的每一个元素都可以是一个键值对，对象的value 也可以是一个数组 12345678color: - yellow - blue - greenwebsite: baidu: baidu.com google: google.com apple: apple.com 它表示的数据结构： 12345678&#123; color: [yellow, blue, green], website:&#123; baidu: baidu.com, google: google.com, apple: apple.com &#125;&#125; 5. 纯量 纯量是最基本的。不可再分的值。以下数据类型都属于纯量 1234567- 字符串- 布尔值- 整数- 浮点数- Null- 时间- 日期 6. 字符串 字符串是最常见的一种数据类型。 字符串默认不使用引号表示。 1str: this_is_a_string 如果字符串之中包含了空格或者特殊字符，就需要引号 1str: 'he says: no' 单引号和双引号都可以使用，但是 双引号不会对特殊字符转义。 如果单引号之中还有单引号，必须使用两个单引号转义 123s1: 'this is a\\n string' # 'this is a\\\\n string\"s2: \"this is a\\n string\" # \"this is a\\n string\"s3: \"labor''s day\" # labor\\'s day 字符串还可以写成多行，从第二行开始， 必须有一个单空格缩进， 换行符将会被转成空格 1234str: this is a string # this is a string 多行字符串还可以使用| 保留换行， 也可以使用&gt; 折叠换行 12345678this : | FOO BARthat: &gt; FOO BAR# &#123;this: FOO\\nBAR&#125;# &#123;that: FOOBAR&#125;","categories":[{"name":"knowledge","slug":"knowledge","permalink":"http://maneback.github.io/categories/knowledge/"}],"tags":[]},{"title":"一些简单的git操作命令","slug":"git","date":"2018-11-02T13:57:03.000Z","updated":"2021-01-06T13:26:44.851Z","comments":true,"path":"2018/git/","link":"","permalink":"http://maneback.github.io/2018/git/","excerpt":"记录一些常用的Git命令","text":"记录一些常用的Git命令 git 设置用户名和邮箱 12git config --global user.name \"yourname\"git config --global user.email \"youremail\" git 查看用户名和邮箱 12git config user.namegit config user.email git添加远程仓库 12git remote add origin git@github.com:xiaosonggao/xiaosogngao.github.io.gitgit push -u origin master 删除远程分支 1git push origin :dev #: 表示删除origin上的远程分支dev commit 报错： fatal: LF would be replacesd by CRLF in &lt;some file&gt; 解决办法： 12git config --global core.autocrlf falsegit config --global core.safecrlf false git tag 使用 1234567891011# 列出所有标签git tag # 打标签git tag 1.0.1#切换到标签git checkout &lt;tagname&gt;#删除标签git tag -d 1.0.1 通常，git push 操作不会将标签对象提交到git服务器，我们需要进行显示的操作 123git push origin 1.0.1# 提交所有本地标签git push origin -tags git版本回退 12git reset --hard head^git reset --hard xxxx 拉取远程仓库强制覆盖本地内容 123git fetch --allgit reset --hard origin/mastergit pull","categories":[{"name":"knowledge","slug":"knowledge","permalink":"http://maneback.github.io/categories/knowledge/"}],"tags":[{"name":"git","slug":"git","permalink":"http://maneback.github.io/tags/git/"}]},{"title":"触摸信仰，回归生活--奥迪A6 Avant","slug":"A6Avant","date":"2018-09-03T01:07:25.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/A6Avant/","link":"","permalink":"http://maneback.github.io/2018/A6Avant/","excerpt":"爱瓦罐，爱生活——我心目中的最美旅行车。","text":"爱瓦罐，爱生活——我心目中的最美旅行车。 我爱上旅行车，是从RS6开始。当时159万的售价，注定只可远观而不可亵玩焉。那么今天就先从RS6 Avant的基础版A6 Avant开始谈起。 我想，这个标题，真的是很恰当地描述了这个车。RS6就是信仰，但是可望而不可即。160W的车可不是普通大众能够买得起的。而这个车跟RS6 很像，其实RS6就是这辆车的高性能升级版。这40W的售价才是我们的生活。信仰，就留在心中就好了，真的没实力为信仰买单，我们还是要回归生活的，而这辆车，也多了更多的生活气息 到目前为止，见过的豪车也不少了，但是从来都还没有见到过A6 或RS6的旅行版。一方面旅行车在国内实属小众，另一方面进口车型在价格上也不具有优势。到目前为止只见到过一辆A6 allroad 和一辆A4 allroad。关于这个以后有机会再展开。除此之外，最近几年，也有越来越多的厂商开始把旅行车引进中国了。见得比较多的是大众的旅行车，还见过一辆C旅。 但是在我看来，最美的旅行车还是奥迪的。这不是RS6 Avant或者A6 Avant给我带来的先入为主的印象。而是觉得，旅行车，就应该是这样，线条就应该这样，尾部就应该这样，就应该这么下来，一切都那么完美，完美符合我心目中对车的模糊认识。 在接触旅行车之前，我喜欢的是SUV，但是现在看来，它太过于粗野，太过于硬汉，一点也不优雅。而人们对于RS6的形容词则是，”西装暴徒“。而其小弟A6 Avant除了动力稍弱之外，至少也能和西装这个词搭上关系吧。比轿车更优雅的曲线，又不像SUV那么硬朗，一切都显得是那么刚刚好。 下面来看配置： 40TFSI (2.0T) 35TFSI(1.8T) 价格 465,800(454,800) 429,800(419,800) 发动机 直列四缸/涡轮增压 直列四缸/涡轮增压 排量 1984 1798 长*宽*高 4952*1874*1432 4947*1874*1459 百公里加速时间 6.7 8.2 LED尾灯，带动态转向灯 O O 全景天窗 O O 标配轮毂 19” 18” 钢琴漆黑色饰条 4500 4500 Bang&amp;Olufsen音响 80300 80300 预安全系统 3400 3400 运动悬架 5300 5300 自适应空气悬架 26100 26100 舒适坏路悬架 2600 2600 四轮空气悬架 26100 26100 S line 运动悬架 7600 7600 全景影像 8900 8900 19”亚光铸铝轮毂 4100 12100 465,800的售价与RS6比较起来还是可以接受的，还是可以做梦想一想的。 PS: 2019.03.28 由于近期税率调整，再一次出现了降价 40TFSI 运动型 35TFSI 时尚型 498,000 458,000 465,800 429,800 454,800 419,800 也就是说，之前买1.8T的价钱，现在可以买2.0T了，希望它继续降价，甚至国产吧。 我想，真的等我买了它的","categories":[{"name":"mylove","slug":"mylove","permalink":"http://maneback.github.io/categories/mylove/"}],"tags":[{"name":"iwagon","slug":"iwagon","permalink":"http://maneback.github.io/tags/iwagon/"}]},{"title":"Leetcode -- Reordered pow of 2","slug":"reorder-pow-of-2","date":"2018-08-10T01:54:41.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/reorder-pow-of-2/","link":"","permalink":"http://maneback.github.io/2018/reorder-pow-of-2/","excerpt":"原题链接：https://leetcode.com/problems/reordered-power-of-2/description/","text":"原题链接：https://leetcode.com/problems/reordered-power-of-2/description/ 题目大意： 任意给要一个正整数n，可以随意调换每个数字的位置，看能不能得到2的幂。 n的范围1&lt;n&lt;10^9 解题思路 任意调换位置都可以，那也就是说明，n的每位数字所处的位置的权重都是不重要的，只要把n逐位分解，得到的1~9每个数字的个数与某个2的幂相同的话，那就可以通过调换位置得到该2的幂。 比如2的10次幂1024，它是由1个数字1 , 1个数字0， 1个数字2， 和1个数字4 组成的，只要n包含这四个数字各1个，就肯定能得到1024。也就是说我们要计数每个数字的个数。 由于1&lt;n&lt;10^9, 那么的话，n中最多有9个数字相同。我们可以直接用一个十位整数，每一位对应表示0~9的个数，若n与2的次幂转换之后的数字相同，则能够转换。 同样，由于n的取值范围，2的次幂最多有32个，可以枚举计算。 解题代码 12345678910111213141516171819class Solution&#123;public: bool reorderedPowerOf2(int n)&#123; int cc = counter(n); for(int i = 0; i &lt;=32; i++)&#123; if(cc == counter(1&lt;&lt;i))&#123; return true; &#125; &#125; return false; &#125; int counter(int n)&#123; int res = 0; while(n &gt; 0)&#123; res += pow(10, n%10); n = n/10; &#125; &#125;&#125;;","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"Leetcode","slug":"Leetcode","permalink":"http://maneback.github.io/tags/Leetcode/"}]},{"title":"已观影清单","slug":"movielist","date":"2018-07-25T02:26:42.000Z","updated":"2021-02-24T02:20:31.288Z","comments":true,"path":"2018/movielist/","link":"","permalink":"http://maneback.github.io/2018/movielist/","excerpt":"","text":"回想一下，自己好像已经看过了好多场电影，也有许多场电影都是自己一个人到电影院去看的，到了大学才有了这样的条件。所以在此记录一下。 *注：加粗的为自己观看的电影。 但是一个正常的人，谁会愿意去自己一个人去电影院看电影，谁不想找一个人一起去，是吧？这说起来会成了一个悲哀的事情。总在感觉孤独与感觉自由之间徘徊。 2017年 2017年02月06日 乘风破浪(H) 2017年06月23日 神奇女侠（直到大二暑假才第一次自己一个人去电影院看电影） 2017年07月30日 战狼2(H) 2018年 2018年01月15日 勇敢者游戏(G) 2018年01月18日 妖猫传(W) 2018年03月12日 红海行动 2018年03月16日 小萝莉的猴神大叔 2018年04月04日 起跑线 2018年05月15日 复仇者联盟3 (W) 2018年06月29日 超人总动员2（W) 2018年07月21日 我不是药神 2018年08月05日 西虹市首富 2018年09月11日 蚁人2 2018年11月10日 毒液(与Y同学观看于常州) 2018年11月20日 神奇动物在哪里2(S) 2019年 2019年02月21日 流浪地球 2019年04月05日 老师好 2019年04月23日 复仇者联盟4 2019年07月02日 蜘蛛侠：英雄远征 2019年08月04日 哪吒之魔童降世 2019年10月01日 中国机长 2020年 2020年09月07日 信条 2020年10月24日 急先锋 2021年 2021年2月20日 人潮汹涌 观看于网络 漫威系列 自杀小队 金刚狼3 X战警系列 海王 看不见的客人 你好之华 暮光之城 金刚·骷髅岛 白小姐 蜘蛛侠：平行宇宙 飞驰人生 他是龙 灰姑娘 小红帽 爱丽丝梦游仙境1,2 少年的你 沉睡魔咒 银河补习班 黑凤凰 风中有朵雨做的云 扫毒2 驴得水 哈利波特系列 无名之辈 佩小姐的奇幻城堡 利刃出鞘 模仿游戏 再见钟情 电视剧 请回答1988 （狂推） 今生是第一次（未看完结尾） 金秘书为何那样（未看完结局） 橘子果酱 非自然死亡 轮到你了 庆余年 长安十二时辰","categories":[{"name":"movie-review","slug":"movie-review","permalink":"http://maneback.github.io/categories/movie-review/"}],"tags":[]},{"title":"剧评-急诊室医生","slug":"wpjizs","date":"2018-07-25T02:19:52.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/wpjizs/","link":"","permalink":"http://maneback.github.io/2018/wpjizs/","excerpt":"","text":"讲真的，我真的没想到自己竟然还会刷这部国产剧《急诊室故事》，看的上一部和上上部国产电视剧还是《人民的名义》和《重案六组》。 首先来说整体的感觉，就是这部剧剧情上有很大的缺陷，貌似好多事情都是因为巧合才凑成的，同时也有很多的场景很感人，如果愚蠢一点还是可以看的，但是一些演员（尤其是女一号与什么锥子）对不上嘴型我是真真的受不了。 先说一些不足，最最难受的就是嘴型对不上啊！剧情的话总体来讲，除了医院里的工作人员，貌似就那么四家人之间以及医院和一个制药公司之内发生的破事。好吧我可以理解为医务工作者专业性太强，圈子太小，人们之间都相互认识吧。可是那个嘴塞灯泡的人，去医院恰好碰上自己的同学，然后喜欢上了人家小护士，这也太巧合了吧？还有那个屋子里面放那么多灯泡是几个意思？ 然后就是那么多的巧合的问题，让我感觉世界真小。方志军和刘主任在楼道里说话出来后被自己老婆碰到，方志军偷偷去看自己的私生女被自己老婆碰到，方志军在自己老婆工作的医院里面找病房不用自己老婆帮忙就这么混过去了啊。什么宇宁去家里找江主任恰好碰到何主任送她回家，如果说你要是不声不响地在那里等了几个小时我还可以理解。郑阿姨接什么宇宁出院恰好又碰到他俩开车经过，可是您不是要去地下停车场吗？还有您接病人回家的时间比人家医生上班的时间还早？真的是一切为大局发展服务。还有就是貌似电视剧里面就一所医院，一个警察，但是这都是可以理解的吗，毕竟讲的是这个医院的故事，那些都无关紧要。 还有就是这锥子是什么破名字啊，他和他的那些狐朋狗友有什么脸管江主任“老江、老江”的叫哇，我虽然不太喜欢女一号，但是更讨厌锥子这些人。江主任救了他，收留了他，他明明已经改邪归正了，自己都不偷东西了，为什么还带人去江主任家偷东西？江湖情义？但是你也不看看你所谓的那些哥们弟兄那都是些什么人，就算是之前跟你很好，救过你的命，但是到头来不还是为了偷东西欺骗了你，呵呵，所以说坏人就是坏人，他除了对自己好，对其他所有人都是一样的坏。我觉得锥子这个人物的出现就是为了衬托江主任的，也是从开头出现到了最后，最后实现了救赎，也算是最终真正变成了一个好人。 还有一点重大的缺陷就是对于多条线索，多个事件的处理不够完美，有些事前一秒还是很紧急的事情，可是下一秒换个场景，这个事情大家就都不着急了。一个就是何主任找江主任告诉她有人看见她救人了，可巧不巧那时候她不在，然后下一秒就不知道啥时候说的了，还有一件事就是江主任去举报的事情。感觉好多的场景处理得都很拖拉。 说了这么多缺点和不足，那么说一下比较好的地方吧，我也不知道这部剧在多大程度上还原了医院以及医生的真实工作场景，但是医闹、患者家属动手打医生这些事件肯定是在医院里真实发生的。总体来讲里面的温情场景还是不少，还是很感人的，那种人与人之间的关系，搞得我都后悔当初都没选择学医了。医生每天在手术台上都会遇到各种各样的病人，可能到最后真的会看淡生死了吧，这也不能说是一种悲哀。但是在目前情况下来讲，医生真的是一件很辛苦的工作，工作任务重，而这又会导致部分人不敢选择去学医，这又再一次加重了医生们的工作，从而导致了恶性循环。但是我感觉医生这个职业和我所处的这个职业应该是很不同的，至少人们之间的交流与活跃程度要高于我所处的职业。所以说对于胸怀大志的人，选择做医生未尝不是一个好的选择。可是我们有时候却不得不对现实低头。这不是悲观，这是事实。 总体来说，如果不带着脑子看的话，这部剧也是一部很好的肥皂剧的。","categories":[{"name":"movie-review","slug":"movie-review","permalink":"http://maneback.github.io/categories/movie-review/"}],"tags":[]},{"title":"羡慕","slug":"xianmu","date":"2018-07-25T01:25:23.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/xianmu/","link":"","permalink":"http://maneback.github.io/2018/xianmu/","excerpt":"","text":"我羡慕你们所有人 我羡慕你们所有人，唯独讨厌自己的生活。可能我生下来注定就是一个普通人。既没有能力完全过上自己想要的生活，又不甘愿浑浑噩噩地度过一生。间歇性踌躇满志，持续性混吃等死，整天充满了悲观情绪，对生活中的一切不满意，却只敢在这里背着所有人偷偷说出来。 我羡慕你们所有人，我羡慕朋友圈里那个学妹，她自从大学开始就加入了旅行社算是兼职，曾经跟着他们的旅行社一起去旅行，她现在一边上学一边借着工作到处去玩，她才刚刚大二，可是经历的生活却是我完全没有机会去体验到的。 我羡慕你们所有人，我羡慕那个大学同学，已经被北大的夏令营录取，马上就可以去北大读研了；我羡慕我那个高中同学，已经被人大的夏令营录取，马上就可以去人大读研了。 我羡慕你们所有人，我羡慕那个在朋友圈里面秀恩爱的那些人，可是自己现在都还没有找到女朋友，可是我并不相信什么”单身快乐“的 bullshit 。我也想要找个女朋友到处秀恩爱啊！ 我为什么羡慕这些人？可能我对自己的生活不满意吧，可是又没有勇气去做出改变，总是喜欢沾沾自喜，自我满足 ，自我感动。我也想到处去游山玩水，去重庆、去成都、去西安、去杭州、去江浙。可是在这座城市学习生活了三年，连这座城市都没有逛过，连这座城市有什么特色小吃也不知道，一部分原因也是因为自己太穷了吧。总是给自己找什么莫名的借口，可是到头来还是在学校里荒废了大多数的时间，呵呵。我也想努力学习，去个什么清华北大的，可是对于学习却总是三分钟热度，只有在吃饭、坐车和睡觉的时候喜欢给自己制定各种的学习计划，可是一旦坐下来学习就把一切都抛到了脑后，还没开始学就开始厌烦，开始玩手机、看剧等。我也想找个女朋友，有一段浪漫的校园爱情。可能只能是说说了，我没有机会再去认识新的朋友，即使恰巧碰到了一个比较漂亮的女生，也不知道该如何开始，自己又没有魅力到被被人一看到就会爱上，也没有自信到到处去撩妹。 爱情该是什么样子的？爱情对于一个人来说是什么？对一个人无条件地好就行了吗？还是要努力提升自己，使自己更有魅力？她们需要的是怎样的？真的有互相相爱但是因为不合适而分开的吗？需要因为爱情而妥协或者改变自己吗？还是强迫对方去改变？一个只有付出的人会感受到爱吗？一个整天颐指气使，高高在上的人是真的爱着对方的吗？我们是优先考虑自己还是优先考虑对方？ 大学生活到底该是什么样子的？我想，一心钻研学习也好，到处去体验生活也好，至少不应该是在这里浑浑噩噩、不断抱怨生活地度过，更不应该整天宅在宿舍里面打游戏。大学生活至少应该过得精彩。有多少人工作了之后才后悔没有好好珍惜大学生活，我可不想成为这样的人。但是也可能只是因为工作和生活实在是太苦了，而使他们开始怀念大学生活。有时候即使觉得自己不适合学习，也没有勇气去改变，只能沿着学习这条最稳妥的道路一直走下去 。没有放手一搏，从头再来的勇气，害怕会失败，害怕会失去现在已经拥有的一切。只能默默守护这自己拥有的大大小小的一切，虽然有些并不是真的有用。 三年了，过了三年，我感觉我还是一直在原地踏步，浑浑噩噩，自我满足，一事无成，没有一点长进；三年了，在大学里面我连一个能说真心话的人都没有找到，大多数人都是用来一起哈哈哈的沙雕兄弟。可能我的内心也是十分抗拒这种敞开心扉的，我不也曾多次地欲言又止？三年了，我连女朋友都没有找到，呵呵。 我羡慕你们所有人，真的羡慕，我唯独讨厌自己的生活。可是我没有勇气去改变。 就这样吧。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[]},{"title":"影评-我不是药神","slug":"wpyaoshen","date":"2018-07-21T02:19:42.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/wpyaoshen/","link":"","permalink":"http://maneback.github.io/2018/wpyaoshen/","excerpt":"","text":"自从上大学以来也是看了好多场电影，尤其是这个学期，自己一个人就去电影院看了四场电影，总共看了七场。自己在宿舍也用电脑看了好几部电影。什么《天国王朝》、《特洛伊》、《亚瑟王》、《雷神3》、《黑豹》、《正义联盟》等等。也曾因为《红海行动》中的场景而流泪，也曾被《小萝莉的猴神大叔》中的场景感动，所以决定从现在开始把这些都记录下来。 先聊一些无关的，不知道为什么，在看电影之前，心中有一种莫名的空虚，感觉自己很悲哀，自己一个人坐在那一排，已经是独自一个人看的第五场电影了，可是却是第一次感到悲哀。在看电影之前和之后都在那里独自游荡好久，以为自己和W很好，可以随时无条件的找他，约他，可是到那一刻却一直在退缩，在退缩，最后因为犹豫而不得不独自回校，不知道应该是高兴还是不高兴。唉，扯远了，扯远了，说回到电影吧。 诚然，在看电影的过程中有好多我没有注意到的细节，其实，这部电影并不像是什么《勇敢者游戏》、或者是各种超级英雄电影一样，是那种看特效的炫酷大片，而更类似于《红海行动》，或是《小萝莉》、《起跑线》之类的，应该带着思考与现实去看的。比如YY提到的徐峥打老婆，可能我是单身狗吧，对这一点没有特别留意。但是这对于程勇的人物塑造有什么作用？他爱孩子，为什么要打老婆，又为什么离婚呢。 实际上，在电影的初期，程勇也只是一个普通人罢了，并不是一个高大上带有光环，一心想着拯救世界拯救全人类的主角。他不同意而后又同意走私药物，只是为了钱罢了，自己卖药的价格也是进价的几倍，虽说是担着很大的风险，但是他也是在这个过程中切切实实地受益了。 在程勇决定不再卖药时，于个人，我是理解与支持他的，我又不是白血病人，我卖不卖药由我自己决定。也正是因为他不是病人，他才不知道病人为了治病付出了多少。那四个真正的白血病人，他们才知道这个药有多宝贵，他们是站在病人的立场上的，而不是程勇的立场，可是他们为什么都充满愤怒的离开了呢？难道之前卖药就不应该得到你们的感谢吗？决定不卖药就是十分对不起你们了吗？还有一点，程勇是因为受到了威胁才决定不卖药的，其他人怎么想？因为利益放弃的？这里有一点值得思考，为什么程勇和张医师都是卖便宜的假药，为什么程勇没有被举报，张医师却被人们举报了？虽然张医师把走私药涨价了，但是还是低于国产药的。我想，因为是那些病人都理所应当地认为走私药就应该是五千（我有些记不清了），他张医师为什么要卖两万（我也记不清了）？却没有人想着这比国产药便宜。 有些人就是这样，事不关己的时候表现得可正义了，说得可好听了，但是一旦事情转身发生在自己身上，就翻脸不认人，开始耍无赖，开始诡辩，最大的论点就是“这事又没发生在你身上，你说起来感情是轻松。”却忘记了当初自己也是那样的人。再反过来看自己，我这不也是在批判自己呢吗？所以说，这世界上最不靠谱的词语就是“如果”。一旦加了“如果”，那么一切都不可信了。除非自己亲身经历过，否则就没有“感同身受”这一说。事情没发生在你身上，你永远不知道自己会怎么做。 后面张医生被通缉，市面上没有便宜的走私药卖，吕受益病危，他的妻子来找程勇，一哭二闹三上吊的时候，我听到我后面一个妹子轻声说了一句“这人怎么这样。”对啊，这人怎么这样，就算你老公病情很严重了，但是难道你求人的时候就不看看场合吗？一定要现在就去，说得不好听一点，就算晚那么一两天，对吕受益来说又有什么区别呢？结果就是没有区别。可是对程勇来说呢，那就不一样了。说实话，我真的害怕他开车时候调头回去找吕受益老婆。可是结果也是戏剧性，警察因为想要抓程勇，黄毛出车祸撞死，程勇被抓进监狱，那么张医师呢？他拿着程勇给他的钱跑了，逍遥法外了吗？程勇担着风险为与自己无关的人走私药物，最后都是按照成本价卖的，可是呢，他还是因为自己的行为而坐牢了，为什么呢？ 可是我这么想，是不是太自私太自私了。也许是因为我到目前为止也没有找到谁值得我这么付出吧，我想真的把自己的圈子活的小了。 我也不知道我看到最后的时候为什么憋住不哭，反正又没有人认识我，没有人看得到我，反正我也不在乎。这好像是我第一次在电影院强忍着不要哭，可能还是可怜的我最后的倔强，怕被嘲笑，连这一小点都要逞强，我也真的是悲哀。","categories":[{"name":"movie-review","slug":"movie-review","permalink":"http://maneback.github.io/categories/movie-review/"}],"tags":[]},{"title":"Leetcode  --  Maximum product subarray","slug":"max-product-subarray","date":"2018-07-14T04:14:32.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/max-product-subarray/","link":"","permalink":"http://maneback.github.io/2018/max-product-subarray/","excerpt":"原题链接：https://leetcode.com/problems/maximum-product-subarray/description/","text":"原题链接：https://leetcode.com/problems/maximum-product-subarray/description/ 题目描述：求一个给定数组的子数组的最大乘积 这是一个非常经典的动态规划题目，同样可以归为“局部最优解和全局最优解法”。与Maxium subarray 思想类似，但是又有所不同。 回想Maxium subarray， 基本思想是遍历数组，同时维护两个变量，一个是全局最优解，即到当前位置元素的最优解；一个是局部最优解，即必须会包含当前元素的最优解。然后将之前的全局最优解与一定包含当前元素的局部最优解比较，看是否需要更改全局最优解。 同样此题目仍然是采用这种思路，但是由于乘法与加法存在的不同，我们还需要维护局部最小值。 1234567891011121314151617public int maxProduct(int[] A)&#123; if(A == NULL || A.length == 0) return 0; if(A.length == 1) return A[0]; int max_local = A[0]; int min_local = A[0]; int global = A[0]; for(int i = 1; i &lt; A.length; i++)&#123; int max_copy = max_local; //这个还要用 max_local = max(max(A[i]*max_local, A[i]), A[i]*min_local); min_local = min(min(A[i]*min_local, A[i]), A[i]*max_local); global = max(global, max_local); &#125; return global;&#125; 每次局部最优解是一定要包括当前元素的，但是全局最优解可能是当前的局部最优解，或者是之前的全局最优解。 最优解或者包含当前元素，或者不包含当前元素。","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"Leetcode","slug":"Leetcode","permalink":"http://maneback.github.io/tags/Leetcode/"},{"name":"动态规划","slug":"动态规划","permalink":"http://maneback.github.io/tags/动态规划/"}]},{"title":"卡塔兰数","slug":"catalan","date":"2018-07-14T02:12:33.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/catalan/","link":"","permalink":"http://maneback.github.io/2018/catalan/","excerpt":"卡塔兰数是一个神奇的数字","text":"卡塔兰数是一个神奇的数字 1.卡塔兰数的定义 一般项公式：\\(C_{n} = \\frac{1}{n+1}*\\binom{2n}{n}\\) 卡塔兰数的另一种表现形式为： \\(C_{n} = \\binom{2n}{n}- \\binom{2n}{n+1}\\) ，所以Cn 是一个自然数。 递推公式： \\(C_{0} = 1, C_{n+1} = \\sum_{i=0}^{n}C_{i}C_{n-i}\\) \\(C_{0}=1, C_{n+1} = \\frac{2(2n+1)}{n+2} C_{n}\\) 性质： 所有的奇卡塔兰数\\(C_{n}\\)都满足\\(n=2^{k} -1\\)， 其他的卡塔兰数都是偶数。 2.卡塔兰数的应用： 组合数学中有非常多的组合结构可以用卡塔兰数来计数。 \\(C~n~\\) 表示长度为2n的dyck word的个数。 dyck word是一个有n个X和n个Y 构成的字符串，且所有的前缀子串皆满足X的个数大于Y的个数。 将上例中的X换成左括号，Y换成右括号，表示所有包含n组括号的合法运算式的个数 \\(C~n~\\) 表示有n个节点组成不同的二叉树的方案个数。 \\(C~n~\\) 表示有2n+1个节点组成不同构满二叉树的方案数。 \\(C~n~\\) 表示对{1,2…n}依序进出栈的置换个数。 Leetcode题目链接：Leetcode 96","categories":[{"name":"knowledge","slug":"knowledge","permalink":"http://maneback.github.io/categories/knowledge/"}],"tags":[{"name":"math","slug":"math","permalink":"http://maneback.github.io/tags/math/"},{"name":"Leetcode","slug":"Leetcode","permalink":"http://maneback.github.io/tags/Leetcode/"}]},{"title":"一些小想法","slug":"str2bin","date":"2018-07-13T03:14:33.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/str2bin/","link":"","permalink":"http://maneback.github.io/2018/str2bin/","excerpt":"","text":"1. 如何将一个0、1组成的字符串转换成二进制数； 如果能够确定仅是由0和1组成，可以使用下面的方法： 123456789101112//这个函数是模拟了二进制数字从右到左的形成过程，很骚。int str2bin(string str)&#123; int len = string.length(); int sum = 0; for(int i = 0; i &lt; len; i++)&#123; if(str[i] == 1) sum+=1; sum&lt;&lt;=1; &#125; sum&gt;&gt;=1; return sum；&#125; 2. C++中定义空串 12string s1 = NULL;//这个没有分配空间string s2 = \"\"; //这个分配了空间 3. 定义一个m*n的二维vector 12vector&lt;int&gt; nums(m)//指定长度vector&lt;vector&lt;int&gt; &gt; nums(m, vector&lt;int&gt;(n));//指定长度","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[]},{"title":"愿望清单","slug":"my-list","date":"2018-07-04T09:03:18.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/my-list/","link":"","permalink":"http://maneback.github.io/2018/my-list/","excerpt":"","text":"这是我的愿望清单，希望以后能实现，至少是一部分。 Audi RS6 Avant 官网链接 第一个当然是我心目中神车奥迪RS6 Avant了。 因为看到了它，我爱上了旅行车，我也爱上了奥迪。不再喜欢什么路虎之类的SUV之流。人称地表最强旅行车，扮猪吃老虎的典型。V8 4.0 TFSI 发动机，奥迪当家Quattro四驱技术。超过两吨的重量，百公里加速3却只有.9s，接近140万的售价，都使得这个车可以被成为“神车”。要知道战神GT-R售价也不过150多万。想象着每天晚上坐在里面心里一定是会乐开花的吧。 选装中，八万的B&amp;O音箱，非常唬人的21寸轮毂，各种非常运动风格的套件，碳纤维后视镜，都可以使你感受到，这个车不好惹，最最震惊的就是，13万的碳陶刹车，13万，说出来你可能不信，我这四个刹车盘比你车都贵，可能刹车性能是真的超级优异吧。 不过感觉除了中五百万彩票是没什么希望了，想想就好。把它放在第一个，表示对它的喜爱。 相机 我不爱拍照，也可能是因为用过的所有手机的像素都太烂了，觉得拍起来没意思，也可能是因为自己不知道拍谁。觉得如果有相机的话，自己可能会去尝试一下，用相机来记录生活。有些当时拍的时候没什么感觉的照片，觉得拍了就拍了，也可能没什么感觉就删了，可是在过了一年、两年，当你已经淡忘了之后再去看它，就会产生新的感慨。毕竟人总是在变的，可能你感觉不到今天自己与昨天的自己有什么不同，但是你与一年前的自己一定是十分不一样的。 无人机 想用无人机航拍的感觉一定会很爽，另一个视角看世界。 乐高42083 布加迪奇龙 这个可能是我目前写到现在为止，离我最近的一个item了，那时候刚刚拼完42056，就发现又有了新的42083，乐高真的是不让我活啊，自己当初为什么入了这么一个大坑。一定要克制、克制。 不行，立一个flag，大四毕业之前一定要喜提布加迪。要两个在一起才最好。 Porsche Panamera 没错，又是一辆车，我感觉这个清单里面最多的应该就是车了。不知怎么自己就成了一个车迷。感觉保时捷这个品牌，在我心中有着特殊的含义，虽然这个品牌被卖给了大众集团。它就像是我最高的信仰一样。那是梦，可是梦不就是用来实现的吗？ Porsche 911 没错，又是一辆车，又是一辆保时捷。911应该是许多人心中的信仰吧？毕竟是经典中的经典。 想要，嘤嘤嘤。在自己有激情的年纪，应该是买不起了。 迈巴赫S600 之前在路上见到过一辆迈巴赫S600，在见到尾标之前，以为只是普通的奔驰S，但是就冥冥之中感觉这个车不一般。可能这就是迈巴赫给人的感觉吧，那是一种气场，是一种象征。感觉坐这种车的人，应该是非常成功的吧。它跟保时捷和RS6给人的感觉是不一样的，这代表了一种成功之后看淡一切的沉稳，而另外两个，给人更多的感觉是躁动。 这个估计也买不起。不过真的想要，退休之后买，否则会看起来像司机的。 Audi A6 Avant 这个，还是车，还是奥迪。A6 Avant在我心中，可以算作是最美旅行车了，真的是从来没有在路上见到过。RS6 Avant就是以它为基础开发出的高性能版本。所以，买不起RS6 Avant，这个还是可以努力够一下的。一个月攒一万，一年十二万，五年，买了！与上面列出的各种车一样，在我眼里它不仅仅是一个工具，而是我生活中的一部分。 喵喵猫 没错，就是它，猫。最近看了好多吸猫的视频，就萌生了要养猫的想法。可爱，想吸。 我会有喵的。 Air Jordan Air Force 等一系列经典好鞋。 乐高街景、小火车多个系列。 待续……","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[]},{"title":"人总是健忘的│2018年07月纪","slug":"2018-07-01","date":"2018-07-01T08:41:27.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/2018-07-01/","link":"","permalink":"http://maneback.github.io/2018/2018-07-01/","excerpt":"第三次拖更。。。以后请叫我拖更小王子吧。","text":"第三次拖更。。。以后请叫我拖更小王子吧。 没想到哇，没想到，当初开学时候闲得蛋疼，想着弄这么一出，可是连最基本的每月一篇都写不出来。 首先，送给大家一首我最近发现的贼好听的歌歌，想要单曲循环一百遍❤ 在刚刚过去的六月，仍旧是被一个又一个ddl逼着往前赶，丝毫没有什么时间去做自己想做的事情，难道人在做自己想做的事情之前，都要做自己不想做的事情吗？可能这就是人生吧。在枯燥的生活中得到的一丝丝安慰就是在B站上关注到了一个养猫的up主，小喵喵都好可爱，想养猫。 复习考试的时候，就感觉这些专业课，学了有什么用？学得深？学得浅？考试简单？考试难？似乎复习的时候就只是在应付考试，还不如背毛概来得得劲。XX大学的教育水平就沦落到这种地步了吗？是中国大多数大学都是这样，还是只有我所在的学校？甚至只是我们学院。还有就是，一些老师，真的是刷新了我对老师认知。大学的教育方式真的到了非改不可的地步了吗？大一大二过多水课，一些老师也不怎么样，真的是非常影响今后的学习热情与积极性的。大学四年感觉没什么深刻的收获，没什么突出的成绩，害怕会找不到工作，甚至害怕读研会毕不了业。 6月21日，2018级去照了毕业照，瞬间感觉时间与毕业的逼近，大四的走了，那我们不就是大四了吗？就像在14年高考结束时，那天晚上坐在教室里面，班主任XX老师对我们说：高考结束了，高三的走了，你们就是高三了。一时间万千头绪涌上心头。老师开始初步统计大家的毕业去向了，或读研，或工作，或出国。想要工作的出去到处找实习了，向考研的开始认真复习了，想出国的我也不知道在干嘛。你想要干什么呢？保研？可是对自己将来的方向有什么想法了吗？考虑清楚了吗？ 是啊，我的同学们都出去找实习了，那么毕业找工作也就不远了。到时候我真的会像好多人说的那样会十分怀念大学生活吗？大学三年，或者再加上明年一年，会给我留下多少值得回忆的事情呢？到了毕业还是这么荒凉的新校区，没有一点生活气息，大学真的应该是这样的吗？可是我决定继续在这个地方待上三年，甚至是五年、六年。到了现在连女朋友都还没有，可能一年之后拍毕业照都感觉没意思，也更没有一个可以深入交心，大碗喝酒、大口吃肉的人。可能，我就不是那类人吧，那些话你最后不还是没有说出来默默憋了回去。 大三结束了，大学三年了，都没有找到女朋友，我的爱情真的不能实现了吗？害怕、羞涩，一个个没有可能的可能在我的一次次犹豫之中都被完完全全地判了死刑。 人总是健忘的 6月7、8日： 高考高考哇，另高考三周年纪念。 6月14日：俄罗斯世界杯开幕 6月16日：在图书馆门口碰到了高二班主任XX老师 6月21日：大四毕业生照了毕业照 6月20日：甘肃少女遭教师性骚扰围观者冷血叫好 6月28日：大三所有考试结束 6月28日：上海某小学门口砍人事件 只是时刻提醒自己不能忘记了。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"人总是健忘的","slug":"人总是健忘的","permalink":"http://maneback.github.io/tags/人总是健忘的/"}]},{"title":"人总是健忘的│2018年06月纪","slug":"2018-06-01","date":"2018-06-01T07:37:31.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/2018-06-01/","link":"","permalink":"http://maneback.github.io/2018/2018-06-01/","excerpt":"","text":"首先，在这里祝大家儿童节快乐。（自己看看自己身份证，已经多大了，还过儿童节。） 好难受哇，本想着每月1号一次的总结，可是因为上个月一整个月都太忙了，没想到第二次就失败了。这个月再重新开始吧。 在过去的一个月里面，我完成了一个又一个的ddl，整整一个月都没有空闲时间，现在想想真的是对不起我的42056，让它在那里吃土了一个多月。五月初的时候，要写好多的入党材料，那时候我想着，等交完了入党材料是不是就可以放松一阵了；期间还准备了两门课的PPT展示，我想着这些都做完之后是不是就可以放松一阵了；可是后来有得到了消息，大数据可能22号或者24号考试，然后我就想着等考完大数据是不是就可以放松一阵了，可是大数据到现在还没考；期间还参加了一个比赛，要做题，要写实验报告，还有没完成的作业，那时候我想着是不是等今天做完比赛交了作业就可以放松一阵了；事实证明我想多了，下周马上就要考大数据了，周五还要交3000字的毛概报告，之后还有两门考试，再然后就要进入考试周了。整整一个月我的愿望就只是简单的晚上点个外卖，舒舒服服地吃着外卖，然后晚上十一点半之前睡觉，第二天睡到自然醒，每天中午可以有时间睡午觉而已。 其实反思一下，自己大二的时候明明有过更加繁忙的学习任务，可是那时候也挺过来了，也没有现在这么痛苦。那个时候每天早上八点左右起床，一口气学到晚上十点多十一点，有时候连吃饭的胃口都没有。现在只不过是自己经受不住各种诱惑，没有了定力，没有了效率，所以才感觉到很痛苦罢了。难道真的会一直这么持续下去吗? 我想要有所改变。 平常刷着大家的pyq，怎么说呢，好像有的人都在过着与我无关的生活，那为什么还存在在我的朋友圈当中，当初无论关系多好的高中同学，都会因为时间和距离而变得生疏，是我们做错了什么吗？不，发生这一切并不是因为我们做错了什么，而正是因为我们什么都没有做。每天都日复一日，按部就班地过着平凡的生活，回忆起来也确实显得没有意思。看着pyq的各位去尝试各种生活，可是想起来那种生活就是自己想要的吗？也并不是的。 最近认真读了十九大报告，才觉得写的真的很好，很是惭愧啊，之前把这个当做一种负担，一个必须去完成的任务。看了之后，虽然有的内容看不懂，记不住，但是觉得深深的震撼。有些写的还是很有道理的。 我们生活的世界充满希望，也充满挑战。我们不能因现实复杂而放弃梦想，不能因理想遥远而放弃追求。 ——《党的十九大报告》 打算新开一个系列，叫做“人总是健忘的”， 如今我们生活在一个信息大爆炸的时代，获取信息很廉价，但与此同时周围也被许多无价值的信息所充斥着，那些在当时激起了很大波澜的热点事件，一点点地都被人们忘记了，因为已经有了新的热点事件吸引走了人们的眼球，人们不再去关注，不再在乎事件的结果如何，就好像事情从来没有发生过一样了。比如tcy事件，现在还有谁在关注呢？人啊，在时间面前，什么都不是。 做这些，都是为了提醒自己要记住这一切。 没错，我却什么都想不起来了。 人总是健忘的 在过去的5月 进口汽车关税下降。 复联3 上映了 马克思诞辰200周年 5月29日实验室发了电脑 在将来的6月 6月1号 乐高发布了2018 Techinc新旗舰 42083 我即将去延吉跑半程马拉松。可是这有什么意义。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"人总是健忘的","slug":"人总是健忘的","permalink":"http://maneback.github.io/tags/人总是健忘的/"}]},{"title":"北京一日游","slug":"beijing","date":"2018-04-14T14:53:01.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/beijing/","link":"","permalink":"http://maneback.github.io/2018/beijing/","excerpt":"身处帝都，真的会感觉到自己的渺小。","text":"身处帝都，真的会感觉到自己的渺小。 今天，我也算是搭了一次便车完成了谋划已久却迟迟没有付出行动的北京一日游，经历了帝都呼啸的大风，最终转折般奇迹般地见到了想见的人。表面上大家都是去听讲座培训的，可是好像并没有什么收获，捂脸。 翘掉了一节课而老师竟然还点名了，唉，真的是不能翘课啊，可是我今天是真的有事要做啊！又不是偷偷跑出去玩了，对不对？(好吧，我好像就是去玩了。) 村里人来到了北京，真的是深深感觉到北京是个国际化大大大大大都市，虽说经常说北京吸血吸血的，但是建设真的是好很多。那么发达的地铁网，二环三环四五环的(不要唱五环之歌)。那么多高耸入云的高层，国贸的写字楼，竟然无意中还看到了著名的央视的大裤衩。真的看到了差距。 可是呢，生活在这里是将要面临着多大的生活压力和经济压力？北太平庄那里一个普通的早点铺里面，九块钱的普普通通的早饭，三块钱一碗的豆浆，那么一小碗。尝试一次就罢了，要是每天这么吃估计真的是连饭都吃不起。 路上随处可见的BBA，不得不说，北京的BBA是真的多！不过感觉最贵的估计也就是那个帅气的A8L和那辆保时捷了。估计我也只能看看也买不起吧！我的梦想是奔驰C和A6 Avant，甚至是那豪放的RS6 Avant。不过，梦想还是要有的。加油吧！那些你看到的，你喜欢的，你想要的，都会是你的。 真的到了北京才明白那谁谁发的那些略显矫情的朋友圈，在京城中自己真的是那么的渺小。举目望去一眼望不到尽头的人群，可是呢，站在我周围的这些人，和我一起挤地铁的这些人，他们仿佛和我息息相关可是却也没有关系。现在想想，北京那两千多万人口，都跟我没有任何关系，在北京真的是会感觉到一种举目无亲的孤独和恐惧。就连中午找个吃饭的人都不知道要联系谁。 在这里，没有人有额外的精力去关心甚至是关注那些与他无关的陌生人，仿佛这里的每一个人都不简单却又十分辛苦，要在这座城市或光彩或苦逼地活下去。仿佛那根时刻紧绷的弦随时会因为某些突如其来的情况而突然崩断。那一节节挤满人的地铁车厢就是最好的证明。 那天下午的内容提前结束，让我有了机会去找我想见的那个人了。我们两个做了三年的高中同学，可是自从高考结束之后就将近三年没有见面了。当我来到这里的时候，第一个想见到的人就是她，可是我在北邮，她在遥远(相对来说)的国贸，于是结束后我又抓紧坐了地铁去那里找她，真的可以算是峰回路转。而对于其他同学来说，仿佛都已经错过了很多，也非常想见到他们，但是就是害怕这么长时间没见了，大家都有自己的安排，不敢临时去打扰。当你来到一个陌生城市的时候，可以临时或者说随时叫出这么一个人来跟你聊一聊，这种感觉真的挺好的，这种和有计划的见面是不一样的。 坐在国贸的星巴克里面喝着咖啡小资一下，假装自己是这座大城市中的一员，谈着过去，谈着现在，谈着未来。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[]},{"title":"大庆油田","slug":"oil-deposit","date":"2018-04-13T03:12:57.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/oil-deposit/","link":"","permalink":"http://maneback.github.io/2018/oil-deposit/","excerpt":"题目描述： 在给定的n*m图中，有几个@ 的块。块符合以下条件：其中任意的@均互相连接或者间接连通，两个@ 直接相邻或者对角相邻均视为连通。","text":"题目描述： 在给定的n*m图中，有几个@ 的块。块符合以下条件：其中任意的@均互相连接或者间接连通，两个@ 直接相邻或者对角相邻均视为连通。 我们可以这样解决这个问题，对整个图设置一个标志位，且该标记仅仅对地图上为@的点有效。按照顺序依次遍历地图上所以的位置。 若便利到@且该点未被标记，则所以与其直接相邻或者间接相邻的@点与其组合成一个块。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657#include &lt;iostream&gt;using namespace std;char maze[101][101];bool mark[101][101];int n, m;int go[][2] = &#123; 0, -1, 0, 1, 1, 0, -1, 0, 1, 1, 1, -1, -1, 1, -1, -1&#125;;void DFS(int x, int y)&#123; for(int i = 0; i &lt; 8; i++)&#123; int nx = x + go[i][0]; int ny = y + go[i][1]; if(nx&lt;1 || nx&gt;n || ny&lt;1 || ny&gt;m) coutinue; if(maze[nx][ny] == '*') continue; ark[nx][ny] = true; DFS(nx, ny); &#125; return;&#125;int main()&#123; while(cin&gt;&gt;n&gt;&gt;m)&#123; if(m == 0 &amp;&amp; n == 0) break; for(int i = 1; i &lt;= n; i++)&#123; for(int j = 1; j &lt;= m; j++)&#123; cin&gt;&gt;maze[i][j]; &#125; &#125; for(int i = 1; i &lt;= n; i++)&#123; for(int j = 1; j &lt;= m; j++)&#123; mark[i][j] = false; &#125; &#125; int ans = 0; for(int i = 1; i &lt;= n; i++)&#123; for(int j = 1; j &lt;= m; j++)&#123; if(mark[i][j] == true) continue; if(maze[i][j] == '*') continue; DFS(i, j); ans++; &#125; &#125; cout&lt;&lt;ans; &#125; return 0;&#125;","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"BFS&DFS","slug":"BFS-DFS","permalink":"http://maneback.github.io/tags/BFS-DFS/"},{"name":"递归","slug":"递归","permalink":"http://maneback.github.io/tags/递归/"}]},{"title":"素数环","slug":"prime-ring","date":"2018-04-13T02:45:12.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/prime-ring/","link":"","permalink":"http://maneback.github.io/2018/prime-ring/","excerpt":"题目描述： 题目的大意是给定1到n的数字中，将数字一次填入环中，使得环中任意两个相邻的数字的和为素数。","text":"题目描述： 题目的大意是给定1到n的数字中，将数字一次填入环中，使得环中任意两个相邻的数字的和为素数。 而且对于给定的n， 按照字典序由小到大输出所有符合条件的解。（同时第一个数恒定为1）。 为了解决该问题，我们采用回溯法枚举每一个值。 当第一个数为1确定时，尝试放入第二个数，使其与1的和为素数，放入后再尝试第三个数，使其与第二个数的和为素数。直到所有的数全放入换种，且最后一个与数与1的和也为素数，那么这个方案即为一个答案。 若在过程中，发现当前无论防止任何之前未放置过的数都不能满足条件，那么回溯改变上一个数，直到产生需要的答案，或者不再存在更多的解。 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#include &lt;iostream&gt;#include &lt;queue&gt;using namespace std;int ans[20]; //保存环中每一个被放入的数bool hash[20]; //标记之前已经放入环中的数int n;int prime[] = &#123;2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41&#125;;bool judge(int x)&#123; for(int i = 0; i &lt; 13; i++)&#123; if(prime[i] == x) return true; &#125; return false;&#125;void check()&#123; //ans[n]+ans[1] 不是素数，不是解。 if(judge(ans[n]+ans[1]) == false) return; for(int i = 1; i &lt;= n; i++)&#123; cout&lt;&lt;ans[i]&lt;&lt;\" \"; &#125; cout&lt;&lt;endl;&#125;//num表示已经放入环中的数字void DFS(int num)&#123; if(num &gt; 1)&#123; if(judge(ans[num]+ans[num-1]) == false) return; &#125; if(num == n)&#123; check(); return; &#125; for(int i = 2; i &lt;= n; i++)&#123; if(hash[i] == false)&#123; hash[i] = true; ans[num] == i; DFS(num+1); hash[i] = false; //返回后清除标记 &#125; &#125;&#125; int main()&#123; int case = 0; while(cin&gt;&gt;n)&#123; case++; for(int i = 0; i &lt;= n; i++) hash[i] = false; ans[1] = 1; cout&lt;&lt;\"case \"&lt;&lt;case&lt;&lt;\":\"&lt;&lt;endl; hash[1] = true; DFS(1); cout&lt;&lt;endl; &#125; return 0;&#125; # 这是递归函数的第一个应用，回溯法枚举。","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"BFS&DFS","slug":"BFS-DFS","permalink":"http://maneback.github.io/tags/BFS-DFS/"},{"name":"递归","slug":"递归","permalink":"http://maneback.github.io/tags/递归/"}]},{"title":"胜利大逃亡","slug":"taowang","date":"2018-04-13T01:34:47.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/taowang/","link":"","permalink":"http://maneback.github.io/2018/taowang/","excerpt":"广度优先搜索例子","text":"广度优先搜索例子 题目描述： 从一个A*B*C的三维城堡逃出去，从(0,0,0) 位置逃至(A-1, B-1, C-1) 已知魔王将在T时刻回来，且每分钟只能走到相邻的六个坐标中的一个，现在给你城堡的地图，问能否在魔王回来之前离开城堡？ 输入 A, B, C, T 后面的数据代表迷宫的布局， 0代表路， 1代表墙。 若能逃出去，则输出至少需要多少时间；否则输出-1。 题目解答： 我们用以下的结构体来保存每一个状态： 1234struct N&#123; int x, y, z; int t;&#125;; 其次，为了实现各个状态按照被查找到的顺序依次转移扩展，我们需要使用一个队列。将每一扩展得到的新状态放到队列中。 最后，为防止对无效状态的搜索，需要设置一个标记数组mark[a][b][c] ,当已经得达到包括坐标(x, y, z) 的状态之后，将mark[x][y][z] 标记为true， 下次再到达这个坐标之后，不再处理。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#include &lt;iostream&gt;#include &lt;queue&gt;using namespace std;bool mark[50][50][50];int maze[50][50][50];struct N&#123; int x, y, z; int t;&#125;;queue&lt;N&gt; Q;int go[][3] = &#123; 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1&#125;;int BFS(int a, int b, int c)&#123; while(!Q.empty())&#123; N cur = Q.top(); Q.pop(); for(int i = 0; i &lt; 6; i++)&#123; int nx = cur.x + go[i][0]; int ny = cur.y + go[i][1]; int nz = cur.z + go[i][2]; if(nx&gt;=a || nx&lt;0 || ny&gt;=b || ny&lt;0 || nz&gt;=c || nz&lt;0) continue; if(maze[nx][ny][nz] == 1) continue; //qiang if(mark[nx][ny][nz] == true) continue; N.tmp; tmp.x = nx; tmp.y = ny; tmp.z = nz; tmp.t = cur.t+1; Q.push(tmp); mark[nx][ny][nz] = true; if(nx==a-1 &amp;&amp; ny==b-1 &amp;&amp; nz==c-1) return tmp.t; &#125; &#125; return -1;&#125;int main()&#123; int test; int A, B, C, T; while(test--)&#123; cin&gt;&gt;A&gt;&gt;B&gt;&gt;C&gt;&gt;T; for(int i = 0; i &lt; A; i++)&#123; for(int j = 0; j &lt; B; j++)&#123; for(int k = 0; k &lt; C; k++)&#123; cin&gt;&gt; maze[i][j][k]; &#125; &#125; &#125; for(int i = 0; i &lt; A; i++)&#123; for(int j = 0; j &lt; B; j++)&#123; for(int k = 0; k &lt; C; k++)&#123; mark[i][j][k] = false; &#125; &#125; &#125; while(!Q.empty()) Q.pop(); //把上次的队列清空； mark[0][0][0] = true; N tmp; tmp.x = 0; tmp.y = 0; tmp.z = 0; tmp.t = 0; Q.push(tmp); int r = BFS(0, 0, 0); if(r&gt;=0 &amp;&amp; r&lt;=t) return t; else return -1; &#125;&#125; 注： 这个是使用队列来实现BFS 的。","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"BFS&DFS","slug":"BFS-DFS","permalink":"http://maneback.github.io/tags/BFS-DFS/"}]},{"title":"Leetcode -- Maximum Subarray","slug":"max-subarray","date":"2018-04-07T06:02:12.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/max-subarray/","link":"","permalink":"http://maneback.github.io/2018/max-subarray/","excerpt":"原题链接：https://leetcode.com/problems/maximum-subarray/description/","text":"原题链接：https://leetcode.com/problems/maximum-subarray/description/ 题目描述： 求一个给定数组的的子数组的最大和。 这是一道非常经典的动态规划题目，可以归为“局部最优解和全局最优解法”。 基本思路：遍历数组，同时维护两个变量，一个是全局最优解，即到当前元素位置的最优解；一个是局部最优解，即必须包含当前元素的最优解。 接下来是动态规划的递推式： 12curmax[i] = max(A[i], curmax[i-1]+A[i])resmax[i] = max(resmax[i-1], curmax[i]) 局部最优解curmax 一定要包含当前元素，或者只包含当前元素。 获得了考虑了当前元素的局部最优解，那么全局最优解就或者是之前的全局最优，或者变为了现在的当前最优。 如果全局最优不包括当前元素，那么就会被维护在之前的全局最优里面；如果包含当前元素，那么就是局部最优。 注意到curmax和resmax只需要用到一次，因此可以不设置数组，直接用变量替代。 代码： 12345678910111213141516int max(int a, int b)&#123; return a&gt;b? a: b;&#125;int solution(vextor&lt;int&gt;&amp; nums)&#123; int n = nums.size(); int curmax = nums[0]; int resmax = nums[0]; for(int i = 1; i &lt; n; i++)&#123; curmax = max(nums[i], curmax+nums[i]); resmax = max(resmax, curmax); &#125; return resmax;&#125;","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"Leetcode","slug":"Leetcode","permalink":"http://maneback.github.io/tags/Leetcode/"},{"name":"动态规划","slug":"动态规划","permalink":"http://maneback.github.io/tags/动态规划/"}]},{"title":"一个记忆仍然很深刻的梦","slug":"dreamzero","date":"2018-04-04T02:46:58.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/dreamzero/","link":"","permalink":"http://maneback.github.io/2018/dreamzero/","excerpt":"梦中的那个女孩，你真的存在吗？","text":"梦中的那个女孩，你真的存在吗？ 为伊消得人憔悴 图片来源：[网易云音月歌单(tyt)] 这个梦我到现在还是记得。 首先，我是一个在北方城市长大，在北方城市上大学的纯北方人。然后某天梦见自己不知怎么会在广东、香港附近的一辆自东向西的火车上。然后我在一个不知名的偏僻地方下了火车，下车的人好像就我自己。我也不知道自己为什么会下车，就像我根本不知道为什么我会在这列火车上一样。 出了火车站之后，火车站南边是一个圆形的广场，广场上有一圈圈用用石头砌成的台子，人们可以坐在上面休息。那个地方好像是一个很老的小村子，道路都是大块的石头铺成的，那个地方很安静，路上没有人。我仿佛在那个地方转了好久，不知道我为什么在这，我在寻找着什么。嘻嘻。 然后我就发现了她，一个女孩。 不对，按照年纪来讲，应该是叫少女？感觉她应该是和我差不多的年龄。 没错，在梦里我对她一见钟情。我竟然对梦中一个根本不存在的人一见钟情了。然后我说要带她回家。她竟然同意了！我们两个人对对方的了解完全为零！我们两个(或者说他们两个)就在那个地方走着走着…… 或许真的会人命中注定了正在等着你出现。而要有多幸运才会遇到这种命中注定！ 再后来，我醒了，也就意味着我失去了她。 后来，那天晚上我又梦到自己去了一个荒凉的地方，放眼望去，只能看到那一户人家的一座房子，周围都是长满了杂草的荒漠。在附近的一个山坡上有一个地方据说许愿很灵。(明明就一户人家，这种话是怎么让人信服的。)我到了那个地方，那时我的脑海里只出现了一个场景，没错，就是我上个梦中遇到的那个少女，梦中的我仍然还记得她。 的确，这个梦很扯，也很可笑，可是那又有什么呢，从某种程度上来讲，哪个世界又是真的呢？在我睡着的那一刻，在我的梦中，现实中的我是不存在的，现实的世界也是不存在的。在梦中，那个我才是唯一的我，他经历我所无法经历的事情，然后把记忆留给了我。让我替他记着，好让他们在某天能够再一次相遇。虽然我已经忘记了她的样子，但是我仍然记得，曾经有过那样一个人在我的梦中出现过。 回忆起这个梦，真的让正在感冒的我的头很痛。 真不知道我从什么时候开始竟然也会相信这种东西。 唉，老了，老了。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"dreams","slug":"dreams","permalink":"http://maneback.github.io/tags/dreams/"}]},{"title":"开车","slug":"dream20180402","date":"2018-04-02T02:45:49.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/dream20180402/","link":"","permalink":"http://maneback.github.io/2018/dream20180402/","excerpt":"昨夜做了一个梦","text":"昨夜做了一个梦 准确来说，应该是今天早上做了一个(两个?)梦。 我不知道这之间有没有什么联系，不过真的有趣。可是有些地方已经记不太清楚了，只能凭借我残存的记忆尽量还原。 我记得一个场景是在一个狭小的地方买衣服，那个地方只是一个两个入口用帘子挂起来的空间，我站在里面竟然需要低下头，不然会撞到脑袋。后来那个卖衣服的人给我拿来好多，我都不是很满意。这时候我冥冥之中感觉这个人有什么不对的地方。然后我们就离开了，出去的时候，正好碰到一个满脸凶相的中年男人进去，后来才知道他们是一个犯罪组织里面的成员。(哈哈哈，都是什么鬼。) 第二个场景是在一个围栏外面枪战(可能是最近打游戏打多了吧)。然后我们三四个人就开着一辆车就溜了，躲在了一个地方，当时还在想在这个地方怎么可能会不被发现？过了一会还是没有人来追杀我们，然后我们就原路返回去看看了，而且在路上还碰到了对方的一辆车，可能是因为在我的梦中，我有主角光环才没有被发现吧。 然后好像就醒了，这时候大概是早上七点半左右。 下面就是拿着冲锋枪打天上的飞机了，那还真是很厉害，那时候天上估计有三四架飞机。我就专门对准飞机的引擎来打，最后只打掉一架小的，看到一架飞机就像神盾局里面的Zephyr 差不多一样，当时就很吃惊。 最后一个场景，就是“开车”。在初中时候我每天上学都要经过的那条路上，我开了一辆老旧的长途大巴，真的很虚，我想了一下，我的驾照应该不允许开这辆车啊！我当时的第一反应竟然是大方！ 那辆破车的顿挫感很强，油门很硬，很难踩下去，要十分用力。而且，那高高的档把还会杵到我胳膊，真的很难受。只要档位和速度不匹配，整辆车就像嗑药了一样抖个不停，我自始至终就一直开在二挡，油门很难踩，很难提速。开着开着，就醒了。 写在最后 我经常会做一些奇奇怪怪的梦，有些早上想想还是挺有趣的，可是并没能把它们全都记录下来。可能之后会觉得现在的自己很蠢吧，写了这些乱七八糟的东西。可是，无所谓了，我现在就是想要把这些写下来。 我发现一个很奇怪的现象，人总是喜欢去否定过去的自己，感动的时刻，矫情的时刻，觉得那时候写的一切都很可笑。现在我才明白，那些文字都是在那个时刻你在面对内心最深处的自己，自己跟自己的对话；而现在，你已经不敢再去面对他。 而现在，你也在面对一个真实的自己，其实你在做着类似的事情，类似的感觉。但是会觉得现在的自己要比那时候要厉害，可是，并不是的。你只是不敢去承认你还是和过去那时候的自己一样软弱，没有任何变化。所以，无所谓了。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"dreams","slug":"dreams","permalink":"http://maneback.github.io/tags/dreams/"}]},{"title":"人总是健忘的│2018年04月纪","slug":"2018-04-01","date":"2018-04-01T02:46:58.000Z","updated":"2021-01-06T13:26:44.830Z","comments":true,"path":"2018/2018-04-01/","link":"","permalink":"http://maneback.github.io/2018/2018-04-01/","excerpt":"","text":"今天是愚人节。 还有，今天雄安新区成立一周年了。 是啊，真的是在搞笑吧？可是生活从来不跟你开玩笑。 对啊，也已经没人和我开玩笑了，连愚人节这一天都没有。 悲哀不？不，一点也不。 今天一天，都耗在了安装Hadoop上面，装了卸载再装，不过万幸的是最终总算总算成功了。如果没成功估计我现在也不会有闲工夫在这慢悠悠写博客了。 w(ﾟДﾟ)w 2018年已经过去四分之一了，这个学期也已经过去四分之一了，真的好快啊。好像现在还记得过年的场景，好像现在还记得寒假结束开学时候的场景。还沉浸在刚刚开学时候的那种感觉，可是，开学已经早就过去了。而且我已经大三了，已经大三下学期了。。保研的问题还是没有什么着落，对自己的生活充满了茫然。 现在想想，开学时候好像也没给自己定下什么很难实现的宏大目标，可能是真的没有办法实现了吧。刷题也算是比较努力了吧。 估计开学以来3月最大的成就就是把这个博客搭好了，希望自己能坚持住，不要再让这个烂尾，就跟曾经写日记一样，就跟曾经用种子习惯一样。 我发现做任何事，只要一直在坚持做，就也没什么困难；但是一旦停下来，就很难再从头开始，继续做下去了。可能是因为坚持了很久之后，觉得这是个很困难的事情，再坚持一下就显得很有成就感。但是从头开始之后，觉得再多一天？也是一样的，无所谓的。 昨天努力坚持跑了一个16Km，那感觉很酸爽，中途没有喝水，没有补充能量。感觉自己应该能坚持下两周后的半马，真正参加比赛跑一次半马，那是我一直未实现的愿望。在这段路程上，是没有人能够站在你身边跟你一起走的。你会很寂寞，你会很痛苦，但是最终坚持下来就好，你就是胜利。（这听着怎么这么鸡汤 ） 当你有计划想去做什么事情的时候，不要闹得全世界都知道。要等到完成之后给世界来个华丽转身，这时候才是真正的牛逼。 ————我也忘了我是在哪里看到的了 PS：我今天发现网易云音乐好多歌单的封面上面的小姐姐都好漂亮啊。 4月，记得努力，记得刷题，记得跑步，记得锻炼。记住应该记住的。 历史上的今天 1912年4月1日：孙中山自行解除临时大总统一职。 1919年4月1日：出席法国巴黎和会的中国代表抗议英美法三国会议。 1929年4月1日：捷克作家米兰·昆德拉出生。 1955年4月1日：林徽因逝世。 1976年4月1日：美国苹果公司成立。 1980年4月1日：国务院授权中国银行在国内发行外汇兑换券。 1993年4月1日：李小龙长子李国豪在好莱坞拍片时被实弹击中身亡。 2001年4月1日：南海撞机事件 2003年4月1日：香港娱乐圈“哥哥”张国荣去世。 2017年4月1日：河北雄安新区成立。","categories":[{"name":"This is the life","slug":"This-is-the-life","permalink":"http://maneback.github.io/categories/This-is-the-life/"}],"tags":[{"name":"人总是健忘的","slug":"人总是健忘的","permalink":"http://maneback.github.io/tags/人总是健忘的/"}]},{"title":"素数问题","slug":"prime-number","date":"2018-03-31T08:28:44.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/prime-number/","link":"","permalink":"http://maneback.github.io/2018/prime-number/","excerpt":"素数相关问题：判断素数、输出前几个素数、输出(1~n范围内的所有素数)","text":"素数相关问题：判断素数、输出前几个素数、输出(1~n范围内的所有素数) 素数 一、判断素数 上界只到sqrt(n)， 且先将sqrt(n)计算出来赋值给变量，不要放到for循环里面，防止在循环中多次计算耗费过多时间。 所有有关于素数的计算都要从i=2开始循环 12345678bool is_prime(int n)&#123; int bound = sqrt(n)+1; for(int i = 2; i &lt; bound; i++)&#123; if (n%i == 0) return false; &#125; return true; &#125; 二、显示前五十个素数 显示前五十个素数，每十个数一行 1234567891011121314151617bool is_prime(int n)&#123; int bound = sqrt(n)+1; for(int i = 2; i &lt; n; i++)&#123; if(n%i == 0) return false; &#125; return true;&#125;int res[60];int index = 0;int start = 2;while(true)&#123; if(index == 50) break; if(is_prime(start++))&#123; res[index++] = start; &#125;&#125;cout&lt;&lt;res[]; 三、 素数筛法 若将(1~n)范围内的数使用上面的方法挨个判断，则太耗费时间。因此可以采用素数筛法。 基本思想 一个不是素数的整数一定存在某个比它小的素数作为它的因数。 因此从2开始，标记每个数的倍数，若到该标记k的时候，k还没有被标记，则说明它没有比它小的因数，k为素数。已知k为素数之后，继续标记k的倍数。而且nk(n&lt;k)已经作为n的倍数被标记过了，所有直接从**k*k** 开始标记。 若到标记k时k已经被标记，则说明k不是素数，且k的倍数肯定已经被标记了，直接跳过，看k+1 123456789101112131415161718192021#include &lt;iostream&gt;#define n 100000int flag[n];;int prime[n];using namespace std;void init()&#123; //initialize the mark = false; int index = 0; for(int i = 0; i &lt; n; i++) mark[i] = false; for(int i = 2; i &lt;= n; i++)&#123; if(mark[i] == true)//mark is true [i] is not a prime continue; //else i is a prime, storage it. prime[index++] = i; for(int j = i*i; i &lt; n; i++)&#123; mark[i] = true; &#125; &#125;&#125;","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[]},{"title":"最大公约数与最小公倍数","slug":"gcd-lcm","date":"2018-03-31T08:24:14.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/gcd-lcm/","link":"","permalink":"http://maneback.github.io/2018/gcd-lcm/","excerpt":"","text":"最大公约数与最小公倍数 最大公约数 两个整数a,b a&gt;b&gt;0。a和b的最大公约数就等于b，a%b的最大公约数。因此辗转相除，直到a%b==0，那么此时b的值就等于原来a，b两个数的最大公约数。 最小公倍数 两个正整数a、b的最小公倍数就等于a和b的乘积除以a、b的最大公约数。 (a*b/gcd(a,b)) 算法描述 1234567891011#include &lt;iostream&gt;using namespace std;int gcd(int a, int b)&#123; if(b == 0) return a; else return gcd(b, a%b);&#125;int lcm(int a, int b)&#123; return a*b/gcd(a,b)&#125;","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[]},{"title":"图论算法(四)最小生成树Prim算法","slug":"prim","date":"2018-03-31T08:16:24.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/prim/","link":"","permalink":"http://maneback.github.io/2018/prim/","excerpt":"","text":"Prim 算法是从点的角度考虑构建最小生成树。 大致思想是：设图G的顶点集合为U， 首先选取任意的顶点a为起始点，将该点加入到集合V中，再从集合U-V中找到另一个顶点b，使得b到V中的任意一个顶点的距离最短，此时，将b也加入到集合V，以此类推，知道所有的顶点都已经加入到集合V当中，就构建出了一棵最小生成树(MST)。 因为有N的顶点，所以树就应该有N-1条边，每次向集合V中加入一个顶点，就意味着找到了MST的一条边。 ###设置两个数据结构： - lowcost[i]: 表示以i为重点的边的最小权值，当lowcost[i]为0，说明最小权值为0，该顶点已经加入到了MST。 - mst[i]: 表示对应的lowcost[i]的起点，即&lt;mst[i],i&gt;是MST当中的一条边，当mst[i] = 0 就表示起点加入MST. 另：图的邻接矩阵 ：w[N][N] ##样例代码： 12345678910111213141516171819202122232425262728293031323334353637383940#define N 100#define MAXCOST 10000int graph[N][N]int prim(int graph[][N], int n)&#123; int lowcost[N]; int mst[N]; //初始化lowcost 和 mst 数组 for(int i = 2; i &lt;= n; i++)&#123; lowcost[i] = graph[1][i]; mst[i] = 1; &#125; mst[1] = 0; // v1 in V int sum = 0; for(int i = 0; i &lt; n-1; i++)&#123; int mincost = MAXCOST; int findp = 0; for(int j = 2; j &lt;= n; j++)&#123; if(lowcost[j] &lt; mincost &amp;&amp; lowcost[j] != 0)&#123; mincost = lowcost[j]; findp = j; &#125; &#125; sum += mincost; lowcost[findp] = 0; for(int j = 2; j &lt;= n; j++)&#123; if(graph[findp][j] &lt; lowcost[j]) &#123; lowcost[j] = graph[findp][j]; mst[j] = findp; &#125; &#125; &#125; return sum; &#125;","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"图论","slug":"图论","permalink":"http://maneback.github.io/tags/图论/"},{"name":"最小生成树","slug":"最小生成树","permalink":"http://maneback.github.io/tags/最小生成树/"}]},{"title":"图论算法(三) 最小生成树kruskal算法","slug":"kruskal","date":"2018-03-31T08:08:08.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/kruskal/","link":"","permalink":"http://maneback.github.io/2018/kruskal/","excerpt":"Kruskal算法是一种用贪心算法的思想来寻找最小生成树的算法。在图中存在相同权值的边是也有效。","text":"Kruskal算法是一种用贪心算法的思想来寻找最小生成树的算法。在图中存在相同权值的边是也有效。 描述 初始时所有的节点属于孤立的集合 按照边权值递增顺序遍历所有 边，若遍历到的边两个顶点属于不同的集合，则且定位最小生成树上的一条边，并将两个顶点集合合并。 遍历完所有边 之后，原图上所有节点属于同一个集合则被选取的边和节点构成一个最小生成树；否则图不连通，最小生成树不存在。 在kruskal算法中，图是按照边来存储的，三元组（顶点+权值） 我们要遍历所有的边，因为可能不连通，那么选取n-1 的循环则一直无法退出。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#inlcude &lt;iostream&gt;#include &lt;algorithm&gt;#define N 108using namespace std;int pre[N];int find_root(int x)&#123; int r = x; while(pre[r] != r) r = pre[r]; int i = x, j; while( i!= r)&#123; j = pre[i]; pre[i] = r; i = pre[j]; &#125; return r;&#125;struct Edge&#123; int a, b; int cost; bool operator &lt; (const Edge&amp; A) const&#123; return cost&lt;A.cost; &#125;&#125;v[6000];int main()&#123; int n; cin&gt;&gt;n; while(1)&#123; if(n == 0) break; for(int i = 1; i &lt;=n*(n-1)/2; i++)&#123; cin&gt;&gt;v[i].a&gt;&gt;v[i].b&gt;&gt;v[i].cost; &#125; sort(v+1; v+1+n*(n-1)/2); int ans = 0; for(int i = 1; i &lt;= n*(n-1)/2; i++)&#123; int ra = find_root(v[i].a); int rb = find_root(v[i].b); if(a!= b)&#123; pre[ra] = rb; ans+=v[i].cost; &#125; &#125; cout&lt;&lt;ans&lt;&lt;endl; cin&gt;&gt;n &#125;&#125;","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"图论","slug":"图论","permalink":"http://maneback.github.io/tags/图论/"},{"name":"最小生成树","slug":"最小生成树","permalink":"http://maneback.github.io/tags/最小生成树/"}]},{"title":"图论算法(二) 最短路径Floyd算法","slug":"floyd","date":"2018-03-31T07:10:37.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/floyd/","link":"","permalink":"http://maneback.github.io/2018/floyd/","excerpt":"","text":"Floyd 算法是解决任意两点之间的最短路径的一种算法，可以正确处理有向图或者负权图（但是不能有负权回路） 图的邻接矩阵G[i][j] 如果要两个顶点a和b之间的距离变短，就只能引入第三个顶点k，并通过顶点k中转得到路径a-&gt;k-&gt;b，才能缩短a到b的距离。 有时可能经过两个，三个顶点会变得更短，那么将这个问题一般化之后： **** 1. 当任意两点之间不允许通过第三个点时，最短路径矩阵P就初始为图的邻接矩阵G。 2. 如果此时只允许通过编号为1的顶点，求任意两个顶点之间的最短路径：（其实顶点1只是一个一般化的顶点，只是为了在后面的迭代循环中容易表示，所以选择1为第一个顶点） 只需要判断P[i][j] 与P[i][1]+P[1][j]的大小即可。 代码如下： 12345678//对于任意两点经过1的距离都进行比较for(int i = 1; i &lt;= n; i++)&#123; for(int j = 1; j &lt;= n; j++)&#123; if(P[i][1]+P[1][j] &lt; P[i][j]) P[i][j] = P[i][1]+P[1][j]; &#125; &#125; 那么，还有可能经过1和2两个顶点之后，比只允许经过顶点1的路径还要短，则在经过1的基础上，在用经过2来更新矩阵P 123456789101112131415//顶点1for(int i = 1; i &lt;= n; i++)&#123; for(int j = 1; j &lt;= n; j++)&#123; if(P[i][1]+P[1][j] &lt; P[i][j]) P[i][j] = P[i][1]+P[1][j]; &#125;&#125;//顶点2 for(int i = 1; i &lt;= n; i++)&#123; for(int j = 1; j &lt;= n; j++)&#123; if(P[i][2]+P[2][j] &lt; P[i][j]) P[i][j] = P[i][2]+P[2][j]; &#125; &#125; 更一般化，我们允许每一对顶点都可以经过任何顶点，即再嵌套一层循环 k代表允许中间经过的顶点。 12345678for(int k = 1; k &lt;= n; k++)&#123; for(int i = 1; i &lt;= n; i++)&#123; for(int j = 1; j &lt;= n; j++)&#123; if(P[i][k]+P[k][j] &lt; P[i][j]) P[i][j] = P[i][k]+P[k][j]; &#125; &#125; &#125; 关于不能将循环变量k放在最里面的解释： 如果将k循环放在最里面，则过早的把i到j的最短路径确定下来了，之后存在更短的路径之后，矩阵P也不会再继续更新了。 关于两个顶点之间不存在直接通路的情况，可以用一个不会达到的权值表示无穷大的距离。在比较之前先判断i到k之间和k到j之间是否存在通路。 更新为： 123456789#define NOWAY 10000 //最长路径不会超过这个for(int k = 1; k &lt;= n; k++)&#123; for(int i = 1; i &lt;= n; i++)&#123; for(int j = 1; j &lt;= n; j++)&#123; if(P[i][k] &lt; NOWAY &amp;&amp; P[k][j] &lt; NOWAY &amp;&amp;P[i][k]+P[k][j] &lt; P[i][j]) P[i][j] = P[i][k]+P[k][j]; &#125; &#125; &#125;","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"图论","slug":"图论","permalink":"http://maneback.github.io/tags/图论/"},{"name":"最短路径","slug":"最短路径","permalink":"http://maneback.github.io/tags/最短路径/"}]},{"title":"图论算法(一) 最短路径dijistra算法","slug":"dijistra","date":"2018-03-31T07:04:31.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/dijistra/","link":"","permalink":"http://maneback.github.io/2018/dijistra/","excerpt":"dijkstra算法是典型的用来解决最短路径的算法，用来求解从起始点到其他所有点的最短路径。该算法采用贪心的思想，每次都查找与该点距离最近的点，但是不能用来解决存在负权边的图。","text":"dijkstra算法是典型的用来解决最短路径的算法，用来求解从起始点到其他所有点的最短路径。该算法采用贪心的思想，每次都查找与该点距离最近的点，但是不能用来解决存在负权边的图。 ###数据结构： - 无向图邻接矩阵w[][] - 辅助向量near[] - 标记访问向量 visited[] ###算法原理： 1 引入辅助向量 near[], 每个分量near[i]表示当前找到的到i节点的最短路径长度，找到这些最短路径中最短的那个。 2 每次更新向量near[]，若从起点v经过中间点k到顶点w的路径长度小于near[w]，则将near[w]修改。 3 重复迭代粗过程 4 维护一个定点集合S，表示已经找到了从起点v到该点的最短路径。 ###算法过程 1. 先取一个顶点v为起点，初始化near[]， near[i]的值等于起点v到第i个顶点的距离w[v][i]，如果两者之间不存在路径，则初始化为无穷大。 2. 将visited[v]标记为1，表示该点已经访问过。 3. 寻找与v相邻最近的点k， 其中near[k]为最小值 4. 将visited[k]标记为1 5. 更新near[]，如果near[i]+w[k][j]&lt;near[j]，判断是直接连接v与j比较近，还是经过上次的最短路径点k到达j比较近。 6 重复上述过程，知道找到了所有的点。 ###代码实现 1234567891011121314151617181920212223242526272829303132333435363738#define N 20 //顶点个数#define NOPATH 1000 //没有路径相连int w[N][N]; //图的邻接矩阵int dist[N];int near[N];int visited[N];void dijkstar(int n, int v)&#123; for(int i = 0; i &lt; N; i ++)&#123; near[i] = NOPATH; visited[i] = 0; &#125; for(int i = 0; i &lt; n; i++)&#123; near[i] = w[v][i]; &#125; //循环找到n-1个最短路 for(int j = 1; j &lt; n; j++)&#123; int minpath = near[0]; int k = 0; //找到最短路径和最近点 for(int i = 1; i &lt; n; i++)&#123; if(near[i] &lt; minpath) minpath = near[i]; k = i; &#125; dist[k] = minpath; visited[k] = 1; for(int i = 0; i &lt; n; i++)&#123; if(!visited[i] &amp;&amp; minpath + w[k][i] &lt; near[i])&#123; near[i] = minpath + w[k][i]; &#125; &#125; &#125;&#125;","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"图论","slug":"图论","permalink":"http://maneback.github.io/tags/图论/"},{"name":"最短路径","slug":"最短路径","permalink":"http://maneback.github.io/tags/最短路径/"}]},{"title":"并查集","slug":"bingchaji","date":"2018-03-31T06:21:13.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/bingchaji/","link":"","permalink":"http://maneback.github.io/2018/bingchaji/","excerpt":"并查集主要用来解决动态连通性问题。","text":"并查集主要用来解决动态连通性问题。 比如：随意给两个点，问是否联通，或者问图有几个联通分支，即被分为了几个块，畅通工程需要修几条路等等。 并查集有一个整数型的数组和两个函数组成。 数组 pre[ ] 记录了每个节点的前导节点是什么； find() 是查找根节点 join() 是合并两个元素所在的集合 需要实现的操作有：判断两个元素是否属于一个集合、合并两个集合 注意：每次查找之后进行路径压缩，将整棵树上的所有节点的前导节点都改为这棵树的根r，提高下次查找时候的查找效率。 123456//路径压缩, 将这一集合所以的pre都改为rwhile(i != r)&#123; j = pre[i]; pre[i] = r; i = j;&#125; 代码如下 12345678910111213141516171819202122232425262728293031#define N 1000int pre[N];//初始化for(int i = 0; i &lt; N; i++)&#123; pre[i] = i;&#125;int find(int x)&#123; //找x所在树的根节点 int r = x; while(r != pre[r]) r = pre[r]; int i = x, j; //路径压缩, 将这一集合所以的pre都改为r while(i != r)&#123; j = pre[i]; pre[i] = r; i = j; &#125; return r;&#125;int join(int x, int y)&#123; int rx = find(x); int ry = find(y); if(rx != ry)&#123; pre[rx] = ry; //将x的根节点接到y上面 &#125;&#125;","categories":[{"name":"Algorithm","slug":"Algorithm","permalink":"http://maneback.github.io/categories/Algorithm/"}],"tags":[{"name":"并查集","slug":"并查集","permalink":"http://maneback.github.io/tags/并查集/"},{"name":"图论","slug":"图论","permalink":"http://maneback.github.io/tags/图论/"}]},{"title":"GitHub博客搭建(三) Hexo配置与发布","slug":"hexo-guide-3","date":"2018-03-31T03:31:02.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/hexo-guide-3/","link":"","permalink":"http://maneback.github.io/2018/hexo-guide-3/","excerpt":"","text":"一、Hexo文件夹 在GitHub/hexo 路径下安装完本地博客后，文件夹中的内容如下： 12345678|-- _config.yml|-- package.json|-- scaffolds|-- scripts|-- source |-- _drafts |-- _posts|-- themes 网站配置文件 _config.yml 是博客的配置文件，主要修改的部分有： site部分 12345678#sitetitle: Hexosubtitle:description:keywords:author: John Doelanguage:timezone: title 与subtitle 是网站的标题和副标题，这个是肯定要修改的。其他的language 和timezone 是语言和时区，按需更改，保持默认也可以。language 可以设置成zh-CN 。 在URL部分，有以下一项设置： 1parmalink: /:year/:month/:day/:title/ 可以修改为： 1parmalink: /:year:month:day/:title/ 这样，就可以避免生成的文件产生多层嵌套，或者也可以以月为单位来组织文件夹。 Deployment 部分 这部分是用于发布的，只若发布到GitHub上面，则按照以下的格式设置即可 1234deploy: type: git repo: #&lt;name.github.io&gt;仓库的ssh地址 branch: master 这样，就可以直接使用hexo d 命令发布到GitHub上面了。 theme部分 theme是设置网站的主题，Hexo有很多精美的主题，可以在Themes|Hexo 上面查看。首先要将你想要使用的Theme下载下来，然后将这个地方改成那个主题的名字即可。 ！注意： 在每个设置项的冒号后面都有一个空格， 若忘记加空格则会在后面的过程中报错。截止目前为止，我所遇到的报错都是因为空格问题。(PS: 回头来看，原来是因为YAML文件的语法要求空格) Theme 在theme/ 下面存放的是主题，可以在Themes|Hexo 上面查看，选择自己喜欢的主题，然后用git下载下来。需要注意的是一定要保持配置文件中theme选项的名字要与theme中主题文件夹的命名保持一致。 我所使用的主题是Manpassant，以它为例，在Git Bash中切换到GitHub/Hexo/ 路径下，输入以下命令 12345git clone https://github.com/tufu9441/maupassant-hexo.git themes/maupassant##使用此主题需要的插件npm install hexo-renderer-pug --savenpm install hexo-renderer-sass --save 有时候，有些主题还需要下载其他的插件，按照GitHub网页上面的提示安装就好。 安装成功之后，再把配置文件里面的主题项修改了就可以了。 好多人都推荐的主题：NexT， 可是我没有用这个2333。自己查资料解决就好。 PS:真香警告： 我还是换回了最多人使用人见人爱的NEXT主题。 source/ 此文件夹里面保存的是创建的博客的原始Markdown文件，创建之后在这里编辑修改就好。或者也可以在这里直接新建.md文件。不同类型的文件保存在不同的文件夹中。 public/ 当执行过hexo g 命令后，就会新生成一个publib/ 文件夹，这里保存的是由Markdown文件生成的静态页面，分为不同的文件夹和页面。 二、发布 在public/ 文件夹中建立git仓库，然后与远端的&lt;yourname&gt;.github.io.git仓库连到一起，就可以同访问&lt;yourname&gt;.githubio 成功访问网站了。这样，每次更新博客之后，都可以推送到远端来查看了。 继续阅读： Hexo写作 参考 Themes|Hexo","categories":[{"name":"Blog","slug":"Blog","permalink":"http://maneback.github.io/categories/Blog/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://maneback.github.io/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"http://maneback.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://maneback.github.io/tags/github/"}]},{"title":"GitHub博客搭建(一) Hexo介绍","slug":"Hexo-guide-1","date":"2018-03-30T14:28:12.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/Hexo-guide-1/","link":"","permalink":"http://maneback.github.io/2018/Hexo-guide-1/","excerpt":"","text":"0. 废话 作为一个计算机专业的学生，最近突然萌生了自己搭建博客网站的想法，遂开始到处查找资料，最终利用GitHub Page和Hexo，历时两天，经历无数次摸索和失败之后，终于成功了。于是将自己的学习过程整理了出来。 1. 什么是Hexo？ Hexo是一个快速、简洁且高效的博客框架，可以用Markdown来解析文章，利用精美的主题来生成静态网页。也就是说，你可以用Markdown来写作，然后由它来帮你生成网页。 在我看来，由它生成的博客页面要比其他大多数现有的博客网站要精美得多，而且再搭配GitHub Page ，非常适合用来建个人博客（当然，也可以放到自己的域名的网站上），而且这过程中也锻炼了对Git和GitHub的理解。 2. 准备工作 安装Git 作为一个想要自建博客的人，理应知道Git和GitHub是什么。 下载Git并安装，并注册GitHub账号。(详细过程略过，不在我们的讨论范围内。) 安装Node.js Node.JS 注意： 新版已经会自动npm配置Path环境变量，否则需要自己配置。 1C:\\Program Files\\nodejs\\node_modules\\npm 将其加入到Path 环境变量中，路径是在你电脑中的安装路径。 创建GitHub仓库： 首先申请一个GitHub账号，然后新建一个仓库，名称格式为： &lt;yourname&gt;.github.io 必须符合命名格式，才能生成页面，当一切都配置成功之后，就可以通过以下地址访问自己的博客 https://&lt;yourname&gt;.github.io ​ 3. 安装Hexo 首先，创建一个目录，如我将它起名为GitHub ，然后在Git Shell 中切换到该目录下，输入以下命令； 12npm install hexo-cli -gnpm install hexo --save 如果命令无法继续运行，可以切换npm源： 1npm install -g cnpm --registry=https://registry.npm.taobao.org 命令运行结束，Hexo就安装成功了。 继续阅读： Hexo搭建和使用 延伸 Git 教程 Git教程-廖雪峰的官方网站 Git documentation Markdown教程 献给写作者的 Markdown 新手指南 - 简书 我的Markdown教程 我使用的markdown编辑器：typora ，** Atom 下载链接： https://typora.io/ https://atom.io/ 参考 Hexo文档 使用GitHub和Hexo搭建免费静态Blog","categories":[{"name":"Blog","slug":"Blog","permalink":"http://maneback.github.io/categories/Blog/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://maneback.github.io/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"http://maneback.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://maneback.github.io/tags/github/"}]},{"title":"GitHub博客搭建(二) Hexo搭建与使用","slug":"hexo-guide-2","date":"2018-03-29T14:28:12.000Z","updated":"2019-08-01T13:34:58.000Z","comments":true,"path":"2018/hexo-guide-2/","link":"","permalink":"http://maneback.github.io/2018/hexo-guide-2/","excerpt":"PS: 在我学习安装过程中，遇到了两条不同的思路： （一）首先建立仓库，然后clone到本地，再在里面创建hexo博客。 （二）先在本地创建hexo博客，然后将它与GitHub上面的仓库连接起来。","text":"PS: 在我学习安装过程中，遇到了两条不同的思路： （一）首先建立仓库，然后clone到本地，再在里面创建hexo博客。 （二）先在本地创建hexo博客，然后将它与GitHub上面的仓库连接起来。 1.初始化配置 我们假设要将博客放在/GitHub 目录下， 在Git Shell 下，切换到/GitHub路径，执行以下指令，初始化本地博客： 123hexo init &lt;folder&gt; #folder 中将创建需要的文件cd &lt;folder&gt;npm install 假设所执行的命令为 hexo init hexo ， 生成的文件夹为：GitHub/hexo 执行之后，就在本地创建好了hexo博客 安装Hexo插件 12345678910111213npm install hexo-generator-index --savenpm install hexo-generator-archive --save ##wentinpm install hexo-generator-category --savenpm install hexo-generator-tag --savenpm install hexo-server --savenpm install hexo-deployer-git --save ##npm install hexo-deployer-heroku --savenpm install hexo-deployer-rsync --savenpm install hexo-deployer-openshift --savenpm install hexo-renderer-marked@0.2 --savenpm install hexo-renderer-stylus@0.2 --savenpm install hexo-generator-feed@1 --savenpm install hexo-generator-sitemap@1 --save 2. Hexo主要命令 创建新的博客 123hexo new [layout] &lt;title&gt;# 等价于：hexo n [layout] &lt;title&gt; layout不同则产生的博客类型和默认路径也不同 layout path userage post source/_post 一篇博客 page source 一个页面 draft source/_draft 草稿 默认类型为post ， 此命令会在对应的文件夹生成title.md文件，然后就可以编辑此文件，用下面的命令生成静态页面。 生成静态页面 123hexo generate#等价于hexo g 执行此命令后，就会产生public/ 文件夹，所有生成的内容都会保存在这里。 在本地查看运行结果 执行以下命令，然后在浏览器打开localhost:4000 查看效果。 同时安装插件之后，还可以不用关闭服务，就可以随时查看修改下效果。 123hexo server#等价于hexo s 选项 描述 -p , -port 重设端口 -s, -static 只使用静态文件 -l, -log 启动日记记录，使用覆盖格式记录 发布 123hexo deploy#等价于hexo d 清除内容 1hexo clean 用于清除缓存文件和已经生成的静态文件(public/)，如果发现对站点的更改没有生效，可能需要执行该命令。 继续阅读： Hexo配置与发布 参考 指令|Hexo 使用GitHub和Hexo搭建免费静态Blog","categories":[{"name":"Blog","slug":"Blog","permalink":"http://maneback.github.io/categories/Blog/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://maneback.github.io/tags/blog/"},{"name":"hexo","slug":"hexo","permalink":"http://maneback.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"http://maneback.github.io/tags/github/"}]}]}